<?xml version="1.0" encoding="UTF-8"?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your blog. -->
<!-- It contains information about your blog's posts, comments, and categories. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your blog. -->

<!-- To import this information into a WordPress blog follow these steps. -->
<!-- 1. Log in to that blog as an administrator. -->
<!-- 2. Go to Tools: Import in the blog's admin panels (or Manage: Import in older versions of WordPress). -->
<!-- 3. Choose "WordPress" from the list. -->
<!-- 4. Upload this file using the form provided on that page. -->
<!-- 5. You will first be asked to map the authors in this export file to users -->
<!--    on the blog.  For each author, you may choose to map to an -->
<!--    existing user on the blog or to create a new user -->
<!-- 6. WordPress will then import each of the posts, comments, and categories -->
<!--    contained in this file into your blog -->

<!-- generator="WordPress/3.0.4" created="2011-04-29 13:52"-->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.0/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.0/"
>

<channel>
	<title>Leonardo Borges</title>
	<link>http://www.leonardoborges.com/writings</link>
	<description>the not so usual geek stuff...</description>
	<pubDate>Mon, 25 Apr 2011 15:52:15 +0000</pubDate>
	<generator>http://wordpress.org/?v=3.0.4</generator>
	<language>en</language>
	<wp:wxr_version>1.0</wp:wxr_version>
	<wp:base_site_url>http://www.leonardoborges.com/writings</wp:base_site_url>
	<wp:base_blog_url>http://www.leonardoborges.com/writings</wp:base_blog_url>
		<wp:category><wp:category_nicename>agile</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Agile]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>arquitetura</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Architecture]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>architecture</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Architecture]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>codingdojo</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[CodingDojo]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>conferences</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Conferences]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>dsl</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[DSL]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>software-livre</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Free Software]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>free-software</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Free Software]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>games</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Games]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>git</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Git]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>groovy</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Groovy]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>html5</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[HTML5]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>java</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Java]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>javascript</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Javascript]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>jruby</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[JRuby]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>mac</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Mac]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>merb</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Merb]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>notices</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Notices]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>objective-c</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Objective-C]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>offers</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Offers]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>padroes</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Patterns]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>patterns</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Patterns]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>performance</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Performance]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>presentations</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Presentations]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>productivity</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Productivity]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>programming</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Programming]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>rails</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Rails]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>refactoring</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Refactoring]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>ruby</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Ruby]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>scala</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Scala]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>security</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Security]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>sphinx</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Sphinx]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>spring</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Spring]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>testing</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Testing]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>thoughtworks</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ThoughtWorks]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>tools</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Tools]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>twitter-2</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Twitter]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>why-i-like-ruby</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Why I Like Ruby]]></wp:cat_name></wp:category>
		<wp:category><wp:category_nicename>world</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[World]]></wp:cat_name></wp:category>
			<wp:tag><wp:tag_slug>agile</wp:tag_slug><wp:tag_name><![CDATA[Agile]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>architecture</wp:tag_slug><wp:tag_name><![CDATA[Architecture]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>codingdojo</wp:tag_slug><wp:tag_name><![CDATA[CodingDojo]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>conferences</wp:tag_slug><wp:tag_name><![CDATA[Conferences]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>dsl</wp:tag_slug><wp:tag_name><![CDATA[DSL]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>free-software</wp:tag_slug><wp:tag_name><![CDATA[Free Software]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>games</wp:tag_slug><wp:tag_name><![CDATA[Games]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>git</wp:tag_slug><wp:tag_name><![CDATA[Git]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>groovy</wp:tag_slug><wp:tag_name><![CDATA[Groovy]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>html5</wp:tag_slug><wp:tag_name><![CDATA[HTML5]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>java</wp:tag_slug><wp:tag_name><![CDATA[Java]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>javascript</wp:tag_slug><wp:tag_name><![CDATA[Javascript]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>jruby</wp:tag_slug><wp:tag_name><![CDATA[JRuby]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>jvm</wp:tag_slug><wp:tag_name><![CDATA[JVM]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>mac</wp:tag_slug><wp:tag_name><![CDATA[Mac]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>merb</wp:tag_slug><wp:tag_name><![CDATA[Merb]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>notices</wp:tag_slug><wp:tag_name><![CDATA[Notices]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>objective-c</wp:tag_slug><wp:tag_name><![CDATA[Objective-C]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>offers</wp:tag_slug><wp:tag_name><![CDATA[Offers]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>patterns</wp:tag_slug><wp:tag_name><![CDATA[Patterns]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>performance</wp:tag_slug><wp:tag_name><![CDATA[Performance]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>presentatios</wp:tag_slug><wp:tag_name><![CDATA[Presentatios]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>productivity</wp:tag_slug><wp:tag_name><![CDATA[Productivity]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>programming</wp:tag_slug><wp:tag_name><![CDATA[Programming]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>rails</wp:tag_slug><wp:tag_name><![CDATA[Rails]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>railsconf2008</wp:tag_slug><wp:tag_name><![CDATA[RailsConf2008]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>railssummit2009</wp:tag_slug><wp:tag_name><![CDATA[RailsSummit2009]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>railswaycon</wp:tag_slug><wp:tag_name><![CDATA[railswaycon]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>refactoring</wp:tag_slug><wp:tag_name><![CDATA[Refactoring]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>ruby</wp:tag_slug><wp:tag_name><![CDATA[Ruby]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>scala</wp:tag_slug><wp:tag_name><![CDATA[Scala]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>security</wp:tag_slug><wp:tag_name><![CDATA[Security]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>sphinx</wp:tag_slug><wp:tag_name><![CDATA[Sphinx]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>spring</wp:tag_slug><wp:tag_name><![CDATA[Spring]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>testing</wp:tag_slug><wp:tag_name><![CDATA[Testing]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>thoughtworks</wp:tag_slug><wp:tag_name><![CDATA[ThoughtWorks]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>tools</wp:tag_slug><wp:tag_name><![CDATA[Tools]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>twitter</wp:tag_slug><wp:tag_name><![CDATA[twitter]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>why-i-like-ruby</wp:tag_slug><wp:tag_name><![CDATA[Why I Like Ruby]]></wp:tag_name></wp:tag>
		<wp:tag><wp:tag_slug>world</wp:tag_slug><wp:tag_name><![CDATA[World]]></wp:tag_name></wp:tag>
		
	<generator>http://wordpress.org/?v=3.0.4</generator>

		<item>
		<title>Yet another discussion about IT certification</title>
		<link>http://www.leonardoborges.com/writings/?page_id=4</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/?page_id=29</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4</wp:post_id>
		<wp:post_date>2008-07-22 06:47:18</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1218122528]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Your project will fail</title>
		<link>http://www.leonardoborges.com/writings/?p=231</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=231</guid>
		<description></description>
		<content:encoded><![CDATA[This is probably a really well known theme but I unfortunately it still needs some stress.

Talking with a friend these days - well, more of listening to his rant really - I got once more impressed of how backwards a company can think. I won't mention names but I can assure you it's one of the big 3-letter name ones.

So it's a Java project full of NullPointerExceptions that happen several times a day, intermittently. He's just been hired and has been assigned several bugs to fix, as usual, asap. 
When he dives into the code, he sees a sea of 200 line methods, without a single test case - Madness.

Apparently these big companies have a lot of money to waste and don't really care about a late and non-working piece of junk being delivered to the client.

My friend, as a good developer, suggested they should start writing tests after fixing the bugs, you know, to make sure they won't happen again. He also suggested doing some refactoring along the way. Do I need to say he was crucified? 

"It's too expensive", they say.
"We don't have time", others would follow.

All too well known excuses to have a really bad code base that, who the hell knows how, works - at times. 
When it doesn't, it's just a nightmare to fix the bugs, if you can find it in the first place.  

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>231</wp:post_id>
		<wp:post_date>2009-07-09 11:49:17</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1256426696]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>My language is better than yours: What really matters?</title>
		<link>http://www.leonardoborges.com/writings/?p=233</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=233</guid>
		<description></description>
		<content:encoded><![CDATA[Last week I had a chat with a friend where we ended up discussing about programming languages. He's currently a Java architect and I work with Ruby, doing some Java occasionally.
Inevitably we walked through the things we liked about the languages we're working with and, since I use to spend a lot of time doing Java in the past, I also mentioned what I don't like about it. It's funny how people can get touchy when someone says language X is better than Y.

But we need to be careful and define what we mean by better.

In my opinion you can do virtually anything in any modern programming language. What will change is how easy you can accomplish your task. That's where the old saying "best tool for the job at hand" kicks in. But is it always about the best tool for the job? What makes a language be this best tool? In other words, how do you chose the language you're gonna use in your next project, or learn next?

Here are the arguments this friend used to justify why he is doing java:
<ol>
	<li>Amount of people using it - Yeah, I'll give him this one. It's good to have a big community since it helps the language to evolve.</li>
	<li>Companies sponsoring it - This means a lot for big companies, and it keeps them from using other technologies since they don't have anyone to blame in case something goes wrong.</li>
	<li>How much professionals of that language are paid - Gotta give him this one too, after all, if you make a living out of programming, this is very important.</li>
</ol>
But none of the poins above make Java the right tool for any job. In fact, they don't make any language the right tool for the job.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>233</wp:post_id>
		<wp:post_date>2009-10-24 16:21:06</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1256426466]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Sense of accomplishment in Agile</title>
		<link>http://www.leonardoborges.com/writings/?p=559</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=559</guid>
		<description></description>
		<content:encoded><![CDATA[In my current project at ThoughtWorks we do pair programming all day, everyday. It's amazing how this makes the team more cohesive, interactive and efficient.

I think most people nowadays - although not enough of them  - know the main <a href="http://c2.com/cgi/wiki?PairProgrammingBenefits" target="_blank">benefits of Pair Programming</a>, such as collective code ownership, knowledge sharing/mentoring, etc... but along with pair programming comes the often neglected practice of pair rotation, where you basically change who's working with whom every X amount of time.

Why is this important? Well, pair programming works so well because it keeps people out of their comfort zones, among many other reasons. So, if you keep 2 persons pairing together for too long, they'll get too comfortable with where they're sitting, the story they're working on and with each other, eventually slowing down.

Some teams choose to rotate pairs every 2 days, but that creates other issues, like the one that motivated this post: Lack of sense of accomplishment.

If you rotate too often, nobody will complete anything - and that's a problem. It might discourage some individuals.

Think about it for a second: you've been working for 2 days on any given feature, and right in the middle of it, you swap with someone else and start working on some unrelated story with a different person. You might get to see the end of that one, but you never got to see the end of the last story you working on and in some cases, it can take over a week for you to "complete" anything.

So I guess the bottom line is to have a balance and keep a high sense of accomplishment among the team. One good way to do that is to rotate pair , after all we love getting stuff done.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>559</wp:post_id>
		<wp:post_date>2010-06-04 06:39:23</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1275659184]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Best practices: Pair Programming</title>
		<link>http://www.leonardoborges.com/writings/?p=587</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=587</guid>
		<description></description>
		<content:encoded><![CDATA[Extreme programming, Scrum and the like provide people with a framework of processes and best practices - or rules, like XP states - that can help us deliver better software. Today, I'd like to focus a bit on one of them: Pair Programming.

By now everyone should have heard all the arguments and benefits of pair programming but more importantly, people should know how to use it wisely.

If you're one of the guys that think pair programming everyday 8 hours a day is productive, you're nuts.

If you're one of the guys that think pair programming is a waste of time, you're nuts.

Ok, but then what's in between?  Well, we spent the last several years fighting against those that think software engineering can be treated as a factory's production line. That building software is like laying bricks. That developers are interchangeable. Yes, you know the drill.

And why do we fight? Because we love our profession. It's one of passion, creativity, art. There are several analogies about our craft and the one I like most is the one of a painter. It makes a lot of sense.

We're often faced with an empty canvas: a text editor, an IDE. We're given a problem and we put our minds to create a solution. We want it to be beautiful, be proud of it. This creative process takes time, focus, effort.

Ok, but what does this have to do with pair programming? A lot, I'm afraid. Depending on the problem at hand, we need to immerse ourselves into it, and not be interrupted. This level of concentration is much harder to achieve when you're pairing since you're constantly sharing your thoughts.

But I guess none of what I've written so far is nothing but common sense. The problem is when people think best practices are set in stone. They're not, and nor should they be. Best practices don't take into account every single situation or person you might be dealing with. A definition of Best Practice that I like a lot can be found <a title="Definition of Best Practive" href="http://www.businessdictionary.com/definition/best-practice.html" target="_blank">here</a>, but I quote the relevant part below:
<blockquote>There is [...] no practice that is best for everyone or in every situation, and no best practice remains best for very long as people keep on finding better ways of doing things.</blockquote>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>587</wp:post_id>
		<wp:post_date>2011-01-29 21:32:06</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1296361926]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Goodbye Java, hello Ruby - again</title>
		<link>http://www.leonardoborges.com/writings/?p=666</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=666</guid>
		<description></description>
		<content:encoded><![CDATA[Today it was my last day at the client I've been working at since I joined <a title="ThoughtWorks" href="http://www.thoughtworks.com/" target="_blank">ThoughtWorks</a> back in April '10.

It's been a fun ride and I thought I'd share some thoughts on client work, ThoughtWorkers and consulting.

To begin with, ThoughtWorkers are smart. This is one of the few places where I didn't have to explain why you should write test for your code - they've been doing that for years. Not only that but it seems our <a href="http://www.leonardoborges.com/writings/2009/10/08/soon-off-to-conquer-lands-afar/" target="_blank">tough recruiting process</a> really pays off. Everyone I worked with in this particular project had a firm foundation on software engineering practices, techniques, OO, multiple programming languages and whatnot.

But not everything is perfect. The reason we're so good is that we will need the best to overcome all the challenges that come from consulting. If working with ThoughtWorkers is a pleasant ride, we're often faced with]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>666</wp:post_id>
		<wp:post_date>2011-02-04 07:24:47</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1296829488]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Experimental</title>
		<link>http://www.leonardoborges.com/writings/?page_id=668</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<guid isPermaLink="false">http://www.leonardoborges.com/writings/</guid>
		<description></description>
		<content:encoded><![CDATA[Hello!

I’m Leonardo Borges, a Brazilian software engineer living in Sydney, Australia.

I love <a title="My github account" href="http://github.com/leonardoborges">writing code</a>, and have even contributed to a few <a title="Projects" href="http://www.leonardoborges.com/writings/projects/" target="_blank">open-source projects</a>. I also enjoy giving <a title="My talks on slideshare" href="http://www.slideshare.net/borgesleonardo" target="_blank">talks</a> on subjects I feel strong about.

Currently undertaking the challenges of consulting at <a title="ThoughtWorks" href="http://thoughtworks.com" target="_blank">ThoughtWorks</a>, I also <a title="Blog" href="http://www.leonardoborges.com/writings/" target="_blank">blog</a> about geeky stuff, <a title="Me and my Guitar" href="http://www.flickr.com/photos/leonardo_borges/4907179924/" target="_blank">play the guitar</a> and do something stupid like <a title="Skydiving in Sydney!" href="http://www.youtube.com/watch?v=NZe1ELx4jY0">Skydiving</a>, <a title="Rafting in Rio, Brazil!" href="http://www.youtube.com/watch?v=RuD34olLLuc" target="_blank">rafting</a> or <a title="Rock climbing in Rio, Brazil!" href="http://www.facebook.com/photo.php?pid=1699&amp;l=a2a2e53c79&amp;id=1687860111" target="_blank">rock climbing</a> whenever I can.

Oh, have I mentioned I love <a title="TripAdvisor Map" href="http://www.tripadvisor.com/MemberProfile-cpt-a_publictmap.1-a_uid.F36E8157798EAF76A8684BC6FDB95DBD" target="_blank">travelling</a>?

:)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>668</wp:post_id>
		<wp:post_date>2011-02-04 20:05:50</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1296875150]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Auto Draft</title>
		<link>http://www.leonardoborges.com/writings/?p=743</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=743</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>743</wp:post_id>
		<wp:post_date>2011-04-25 01:01:38</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>auto-draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
							</item>
		<item>
		<title>Archives</title>
		<link>http://www.leonardoborges.com/writings/2007/10/11/archives/</link>
		<pubDate>Thu, 11 Oct 2007 02:19:56 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=6</guid>
		<description></description>
		<content:encoded><![CDATA[Do not edit this page]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2007-10-11 02:19:56</wp:post_date>
		<wp:post_date_gmt>2007-10-11 02:19:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>archives</wp:post_name>
		<wp:status>static</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_wp_page_template</wp:meta_key>
		<wp:meta_value><![CDATA[archives.php]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>About me</title>
		<link>http://www.leonardoborges.com/writings/about-2/</link>
		<pubDate>Thu, 11 Oct 2007 06:03:21 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?page_id=5</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_645" align="alignright" width="231" caption="Leonardo Borges"]<a href="http://www.leonardoborges.com/writings/wp-content/uploads/2007/10/blog1.jpg"><img class="size-full wp-image-645     " title="Leonardo Borges" src="http://www.leonardoborges.com/writings/wp-content/uploads/2007/10/blog1.jpg" alt="" width="231" height="346" /></a>[/caption]

<div>

Hello!

I’m Leonardo Borges, a Brazilian software engineer living in Sydney, Australia.

I love <a title="My github account" href="http://github.com/leonardoborges">writing code</a>, and have even contributed to a few <a title="Projects" href="http://www.leonardoborges.com/writings/projects/" target="_blank">open-source projects</a>. I also enjoy giving <a title="My talks on slideshare" href="http://www.slideshare.net/borgesleonardo" target="_blank">talks</a> on subjects I feel strong about.

Currently undertaking the challenges of consulting at <a title="ThoughtWorks" href="http://thoughtworks.com" target="_blank">ThoughtWorks</a>, I also <a title="Blog" href="http://www.leonardoborges.com/writings/" target="_blank">blog</a> about geeky stuff, <a title="Me and my Guitar" href="http://www.flickr.com/photos/leonardo_borges/4907179924/" target="_blank">play the guitar</a> and do something stupid like <a title="Skydiving in Sydney!" href="http://www.youtube.com/watch?v=NZe1ELx4jY0">Skydiving</a>,<a title="Rafting in Rio, Brazil!" href="http://www.youtube.com/watch?v=RuD34olLLuc" target="_blank">rafting</a> or <a title="Rock climbing in Rio, Brazil!" href="http://www.facebook.com/photo.php?pid=1699&amp;l=a2a2e53c79&amp;id=1687860111" target="_blank">rock climbing</a> whenever I can.

Oh, have I mentioned I love <a title="TripAdvisor Map" href="http://www.tripadvisor.com/MemberProfile-cpt-a_publictmap.1-a_uid.F36E8157798EAF76A8684BC6FDB95DBD" target="_blank">travelling</a>?

:)

P.s.: Were you looking for my <a title="Leonardo Borges' Resume" href="http://leonardoborges.com/resume" target="_blank">resume</a>?

</div>
<div id="ta_travelmap" style="width: 430px;"><img src="http://www.tripadvisor.com/CommunityMapImage?id=16801229&amp;type=TRIPADVISOR&amp;size=LARGE" alt="" />
<ol id="ta_favoritelist">
	<li><a href="http://www.tripadvisor.com/Tourism-g274707-Prague_Bohemia-Vacations.html">Prague, Czech Republic</a></li>
	<li><a href="http://www.tripadvisor.com/Tourism-g186338-London_England-Vacations.html">London, UK</a></li>
	<li><a href="http://www.tripadvisor.com/Tourism-g186605-Dublin_County_Dublin-Vacations.html">Dublin, Ireland</a></li>
	<li><a href="http://www.tripadvisor.com/Tourism-g188671-Bruges_West_Flanders-Vacations.html">Bruges, Belgium</a></li>
</ol>
<ul id="ta_links">
	<li>Create your own <a style="font-size: 10px; font-family: Verdana, Arial, Helvetica, sans-serif; color: #3860b0; text-decoration: none;" href="http://www.tripadvisor.com/MemberProfile-cpt">travel map</a> or <a style="font-size: 10px; font-family: Verdana, Arial, Helvetica, sans-serif; color: #3860b0; text-decoration: none;" href="http://www.travelpod.com/">travel blog</a></li>
	<li>Find the best <a style="font-size: 10px; font-family: Verdana, Arial, sans-serif; color: #3860b0; text-decoration: none;" href="http://www.tripadvisor.com/VacationRentals">vacation rentals</a> at TripAdvisor</li>
</ul>
</div>
<script src="http://www.tripadvisor.com/MapEmbed?mid=E.lg3sthmuTQ128pxMYDTzDg%3D%3D&amp;nop=true&amp;frm=pt&amp;Version=VACATION_RENT_006"></script>

Feel free to make comments and if you want to contact me directly, just drop me a line or IM me at leonardoborges.rj@gmail.com]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date>2007-10-10 23:03:21</wp:post_date>
		<wp:post_date_gmt>2007-10-11 06:03:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1297249070]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_page_template</wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>2</wp:comment_id>
		<wp:comment_author><![CDATA[JRuby + DB2 + xQuery == bug? : leonardoborges.com]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://leonardoborges.com/writings/2008/04/07/jruby-db2-xquery-bug/</wp:comment_author_url>
		<wp:comment_author_IP>75.126.194.2</wp:comment_author_IP>
		<wp:comment_date>2008-04-07 23:46:47</wp:comment_date>
		<wp:comment_date_gmt>2008-04-07 23:46:47</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] About me [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Como o Spring me ajudou a manter o Active Record</title>
		<link>http://www.leonardoborges.com/writings/2007/10/13/como-o-spring-me-ajudou-a-manter-o-active-record/</link>
		<pubDate>Sat, 13 Oct 2007 03:35:46 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category domain="tag"><![CDATA[Architecture]]></category>

		<category domain="tag" nicename="architecture"><![CDATA[Architecture]]></category>

		<category><![CDATA[Architecture]]></category>

		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Patterns]]></category>

		<category domain="tag" nicename="patterns"><![CDATA[Patterns]]></category>

		<category><![CDATA[Patterns]]></category>

		<category domain="category" nicename="patterns"><![CDATA[Patterns]]></category>

		<category><![CDATA[Spring]]></category>

		<category domain="category" nicename="spring"><![CDATA[Spring]]></category>

		<category domain="tag"><![CDATA[Spring]]></category>

		<category domain="tag" nicename="spring"><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2007/10/13/como-o-spring-me-ajudou-a-manter-o-active-record/</guid>
		<description></description>
		<content:encoded><![CDATA[Nesse primeiro post vou falar um pouco sobre meu novo trabalho. Na verdade, sobre um problema que encontramos lÃ¡.

Dentre diversas coisas que estamos fazendo, como migraÃ§Ãµes por exemplo, estou ajudando na elaboraÃ§Ã£o da arquitetura que irÃ¡ abrigar as novas aplicaÃ§Ãµes desenvolvidas na empresa. <!--more-->Ã‰ uma tarefa desgastante e cada decisÃ£o Ã© crÃ­tica, indo de discussÃµes sobre qual tecnologia usar para MVC atÃ© como organizar o <em>layering</em> da aplicaÃ§Ã£o. Essa arquitetura compreende tambÃ©m o desenvolvimento de um <em>framework </em>para facilitar a vida dos novos desenvolvedores que integrarÃ£o a equipe.

Pois bem, uma das decisÃµes que tomei foi a de evitar o <a target="_blank" href="http://martinfowler.com/bliki/AnemicDomainModel.html" title="Anemic Domain Model"><em>Anemic Domain Model</em></a><em> </em>e usar o Spring<em> </em>como framework de <a target="_blank" href="http://martinfowler.com/bliki/InversionOfControl.html" title="IoC">IoC</a>.<em> </em>Os benefÃ­cios disso sÃ£o assunto para outro post. ;) E um outro padrÃ£o que ajuda nisso se chama <em><a target="_blank" href="http://martinfowler.com/eaaCatalog/activeRecord.html" title="Active Record">Active Record</a></em>. AÃ­ comeÃ§aram os problemas! Essa divisÃ£o de responsabilidades sempre agrega uma nova (nem tÃ£o nova assim) forma de pensar. Vou mostrar um exemplo para ilustrar isso.

[java]
public class Usuario {
private String login;
private String senha;
//normal getters e setters
}
[/java]
Nada de novo certo? Mais uma classe burra sem lÃ³gica de negÃ³cio alguma! Pois bem, seguindo o padrÃ£o Active Record, essa classe deveria "saber" como se persistir, delegando a real lÃ³gica para um <em>Repository</em>, que nada mais Ã© que uma espÃ©cie de DAO. Desta forma, a classe que acabei de mostrar ficaria parecida com isso:

[java]
public class Usuario {
private String login;
private String senha;
// getters e setters

private Repository repo;

public void setRepository(Repository repo) {
this.repo = repo;
}

public void save();
public void update();
public void delete();

}
[/java]

A variÃ¡vel repo seria injetada pelo Spring, evitando assim qualquer cÃ³digo de lookup na classe UsuÃ¡rio. PorÃ©m, como vocÃª espera carregar um usuÃ¡rio previamente cadastrado no banco de dados? Recorrendo a um DAO padrÃ£o no cÃ³digo cliente - um faÃ§ade por exemplo ?

AÃ­ tudo que foi feito teria sido em vÃ£o! Se a classe sabe como se persistir, deve prover meios de se carregar objetos do seu repositÃ³rio da mesma forma, isolando totalmente detalhes de implementaÃ§Ã£o do cÃ³digo cliente. E aÃ­ comeÃ§am os problemas.

Vamos Ã  terceira versÃ£o de nossa classe:

[java]
public class Usuario {
private String login;
private String senha;
// getters e setters

private Repository repo;

public void setRepository(Repository repo) {
this.repo = repo;
}

public void save();
public void update();
public void delete();

public static Collection<usuario></usuario> findByLogin(String login) {
return this.repo.findByLogin(login);
}
[/java]

Ora ora ora! Espera aÃ­! Um mÃ©todo estÃ¡tico acessando uma variÃ¡vel de instÃ¢ncia?!? NÃ£o pode! E isso me tirou o sono! Como Ã© que eu vou injetar uma dependÃªncia num objeto se eu preciso dela antes mesmo de ter uma instÃ¢ncia do mesmo?

Uma maneira, porca, de se resolver isso seria alterando a variÃ¡vel repo para static e inicializando-a num bloco static, assim:

[java]
static {
repo = new Usuario().getRepo();
}
[/java]

Dois problemas com isso: Eu exponho meu dao para o mundo - tÃ¡, posso resolver alterando o modificador de acesso do mÃ©todo - e instancio um novo objeto Ãºnica e exclusivamente para pegar o DAO que o Spring injetou e joga-lo fora.

Soa estranho nÃ£o? E Ã©! NÃ£o queria ter que fazer isso. Funciona, mas Ã© feio e tosco! E agora vem mais um motivo da minha lista de coisas que eu amo no Spring! A classe <em>MethodInvokingFactoryBean</em>!

SÃ£o poucas linhas de configuraÃ§Ã£o no arquivo do contexto da aplicaÃ§Ã£o:

[xml]
<bean id="userConfigurer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"></bean>

<property value="Usuario.setRepository" name="staticMethod"></property>
<property ref="userRepo" name="arguments"></property><!-- userRepo Ã© apenas um bean comum configurado em algum ponto do arquivo, que representa o repositÃ³rio de usuÃ¡rios-->
<!-- bean-->[/xml]Dessa forma, na inicializaÃ§Ã£o do container de InversÃ£o de controle, a classe usuÃ¡rio jÃ¡ teria sua variÃ¡vel estÃ¡tica inicializada e, como nÃ£o Ã© proibido usar uma variÃ¡vel estÃ¡tica a partir de um mÃ©todo de instÃ¢ncia, os mÃ©todos save(), update() e delete() jÃ¡ estariam com suas vidas resolvidas tambÃ©m, usando o mesmo repositÃ³rio que foi inicializado no carregamento do container!Acho que fica uma soluÃ§Ã£o limpa, elegante e nÃ£o te faz abrir mÃ£o dos benefÃ­cios da inversÃ£o de controle e do padrÃ£o Active Record.Desculpem o primeiro post! Ficou meio grande nÃ©? Mas espero que tenha ficado legal! Um grande abraÃ§o e atÃ© a prÃ³xima!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date>2007-10-13 03:35:46</wp:post_date>
		<wp:post_date_gmt>2007-10-13 03:35:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>como-o-spring-me-ajudou-a-manter-o-active-record</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[215691683]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>SCEA 5 Beta</title>
		<link>http://www.leonardoborges.com/writings/2007/10/15/scea-5-beta/</link>
		<pubDate>Mon, 15 Oct 2007 22:43:00 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category domain="tag"><![CDATA[Architecture]]></category>

		<category domain="tag" nicename="architecture"><![CDATA[Architecture]]></category>

		<category><![CDATA[Architecture]]></category>

		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2007/10/15/scea-5-beta/</guid>
		<description></description>
		<content:encoded><![CDATA[Hoje fiz a versÃ£o beta da nova prova de arquiteto da Sun e eis algumas impressÃµes:

- Ã‰ longa e cansativa... fato justificÃ¡vel se levar-mos em consideraÃ§Ã£o o fato de ser uma prova em estado beta. Ela possui mais questÃµes que a versÃ£o final. SÃ£o 153 questÃµes no total, em 4h e 30min. <!--more-->

- AlÃ©m de um considerÃ¡vel conhecimento de toda a plataforma JEE (EJB, JMS, Web Services e todas as outras siglas) algumas Ã¡reas foram mais exploradas que outras e acho que merecem atenÃ§Ã£o especia:
<ul>
	<li>SeguranÃ§a - Ã‰ uma preocupaÃ§Ã£o constante na prova e sÃ£o abordadas desde de policies de applets atÃ© tipos de ataques (SQL Injection, DDoS, Cross-site Scripting)</li>
	<li>Web Services - AlÃ©m do conhecimento geral da nova versÃ£o, Ã© cobrado algum entendimento sobre a compatibilidade com versÃµes antigas da API</li>
	<li>PadrÃµes de Projeto - Acho que isso nÃ£o mudou muito com relaÃ§Ã£o a versÃ£o antiga. SÃ£o apresentadas diversas situaÃ§Ãµes onde deve-se escolher qual o melhor padrÃ£o a ser aplicado. Assim como dado um padrÃ£o, Ã© perguntado quais suas vantagens e desvantagens</li>
</ul>
No mais, uma prova padrÃ£o, com questÃµes de mÃºltipla seleÃ§Ã£o e drag'n drop. NÃ£o cheguei a estudar a fundo para essa prova e portanto nÃ£o espero um bom resultado. Mas a experiÃªncia serÃ¡ extremamente Ãºtil para quando eu for fazer a prova pra valer ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2007-10-15 22:43:00</wp:post_date>
		<wp:post_date_gmt>2007-10-15 22:43:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scea-5-beta</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210234855]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>4</wp:comment_id>
		<wp:comment_author><![CDATA[Cleuton]]></wp:comment_author>
		<wp:comment_author_email>cleutonsampaio@uol.com.br</wp:comment_author_email>
		<wp:comment_author_url>http://www.cleuton.sampaio.nom.br</wp:comment_author_url>
		<wp:comment_author_IP>200.157.150.1</wp:comment_author_IP>
		<wp:comment_date>2007-10-16 09:52:49</wp:comment_date>
		<wp:comment_date_gmt>2007-10-16 09:52:49</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Grande Leo! Que bom que vocÃª fez a prova beta. Eu vou ter que pedir arrego! Esse ano foi brabo! Cheio de concursos e desafios. Estou um verdadeiro caco e nÃ£o tive tempo de estudar. ParabÃ©ns para vocÃª e muito sucesso.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>5</wp:comment_id>
		<wp:comment_author><![CDATA[Tiago]]></wp:comment_author>
		<wp:comment_author_email>tiagoharris@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>200.173.219.18</wp:comment_author_IP>
		<wp:comment_date>2007-10-16 12:08:15</wp:comment_date>
		<wp:comment_date_gmt>2007-10-16 12:08:15</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Boa mlk! ParabÃ©ns ae e boa sorte!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardo@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://</wp:comment_author_url>
		<wp:comment_author_IP>200.149.212.145</wp:comment_author_IP>
		<wp:comment_date>2007-10-17 10:22:19</wp:comment_date>
		<wp:comment_date_gmt>2007-10-17 10:22:19</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Haha! Sei como Ã©! AliÃ¡s, tambÃ©m estou sabendo de suas conquistas desse ano! Nesse caso a falta de tempo Ã© totalmente justificÃ¡vel!

Grande abraÃ§o!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>7</wp:comment_id>
		<wp:comment_author><![CDATA[Cleuton]]></wp:comment_author>
		<wp:comment_author_email>cleutonsampaio@uol.com.br</wp:comment_author_email>
		<wp:comment_author_url>http://bemnalata.blogspot.com</wp:comment_author_url>
		<wp:comment_author_IP>200.169.220.37</wp:comment_author_IP>
		<wp:comment_date>2007-10-22 13:02:24</wp:comment_date>
		<wp:comment_date_gmt>2007-10-22 13:02:24</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Ae, fiz a prova na sexta-feira! Um massacre. NÃ£o estava muito difÃ­cil, mas eu nÃ£o me preparei. AlÃ©m disso, 153 questÃµes Ã© muita coisa! Eu consegui responder bem atÃ© duas horas de prova. Depois fiquei muito cansado. Foram 4 horas de pauleira! Acho que mifu.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>8</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardo@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://</wp:comment_author_url>
		<wp:comment_author_IP>200.149.212.145</wp:comment_author_IP>
		<wp:comment_date>2007-10-22 17:44:50</wp:comment_date>
		<wp:comment_date_gmt>2007-10-22 17:44:50</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Realmente! 153 questÃµes Ã© dose! Eu jÃ¡ estava no modo automÃ¡tico lÃ¡ pelo final... haha]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Software livre</title>
		<link>http://www.leonardoborges.com/writings/2007/10/21/software-livre/</link>
		<pubDate>Sun, 21 Oct 2007 16:54:39 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category domain="tag"><![CDATA[Free Software]]></category>

		<category domain="tag" nicename="free-software"><![CDATA[Free Software]]></category>

		<category><![CDATA[Free Software]]></category>

		<category domain="category" nicename="free-software"><![CDATA[Free Software]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2007/10/21/software-livre/</guid>
		<description></description>
		<content:encoded><![CDATA[Aqui no trabalho atualmente temos uma grande barreira com relaÃ§Ã£o ao software livre. Pensei em escrever aqui alguma coisa sobre as barreiras que as empresas colocam quando o assunto Ã© esse porÃ©m o <a target="_blank" href="http://bemnalata.blogspot.com/" title="Blog Cleuton Sampaio">Cleuton</a> jÃ¡ fez <a href="http://bemnalata.blogspot.com/2007/10/resistncia-das-empresas-ao-uso-de.html" title="ResistÃªncia ao uso de softwares livres">isso</a>, e ficou muito bom.

Vale a visita!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2007-10-21 16:54:39</wp:post_date>
		<wp:post_date_gmt>2007-10-21 16:54:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>software-livre</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[291180225]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Eu odeio XML</title>
		<link>http://www.leonardoborges.com/writings/2007/10/29/eu-odeio-xml/</link>
		<pubDate>Mon, 29 Oct 2007 01:21:09 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category><![CDATA[Spring]]></category>

		<category domain="category" nicename="spring"><![CDATA[Spring]]></category>

		<category domain="tag"><![CDATA[Spring]]></category>

		<category domain="tag" nicename="spring"><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2007/10/29/eu-odeio-xml/</guid>
		<description></description>
		<content:encoded><![CDATA[Isso Ã© um fato. Cada linha de XML que eu escrevo me faz pensar em formas de evita-las. E isso nÃ£o Ã© simples.

Ultimamente, desde o Java 5, tem se trocado o XML pelas <a href="http://http://java.sun.com/j2se/1.5.0/docs/guide/language/annotations.html" title="Java Annotations">annotations</a>. TÃ¡ bom, fica bonitinho nÃ©? AtÃ© que fica. Em alguns casos, atÃ© mais organizado. O <a href="http://www.hibernate.org/hib_docs/annotations/reference/en/html_single/" title="Hibernate Annotations">Hibernate</a> desde a versÃ£o 3 faz uso das <a href="http://java.sun.com/javaee/overview/faq/persistence.jsp" title="Java Persistence API">annotaions da JPA</a> como alernativa ao seu XML de configuraÃ§Ã£o. E esse sim Ã© um belo caso de sucesso!

SÃ£o apenas algumas anotaÃ§Ãµes na classe para mapea-la e pronto, adeus xml! Mas como sempre, as anotaÃ§Ãµes jÃ¡ estÃ£o sendo exageradas por aÃ­. Basta decidir configurar uns 3 frameworks - e provavelmente dois deles sÃ£o descenessÃ¡rios no seu projeto - usando anotaÃ§Ãµes e as suas classes ficarÃ£o uma zona! E muito mais ilegÃ­veis que um arquivo XML!

As anotaÃ§Ãµes sÃ£o recursos muito poderosos e devem ser usadas de forma consciente. Use as que realmente valem a pena, como as que vou falar agora, que fazem parte da nova release do Spring framework, a <a href="http://www.springframework.org/node/548" title="Spring 2.5 rc1">2.5 RC1</a>. <!--more-->

O Spring Ã© - dentre outras coisas - um dos mais falados containeres de injeÃ§Ã£o de dependÃªncia nos dias de hoje. Esse mecanismo sempre funcionou da seguinte forma:

Imagine uma classe que atua como um <em>faÃ§ade</em>, digamos LocadoraFacade, que declara dependencia de um objeto DAO:

[java]
public class LocadoraFacade {
private DAO dao;
public void setDao(){}

public void incluirDvd(Dvd dvd){}
}
}
[/java]

No xml de configuraÃ§Ã£o do Spring, eu teria 2 beans registrados:
[xml]
<bean id="locadoraFacade" class="com.leonardoborges.LocadoraFacade"></bean>

<property name="dao"><ref bean="dao"></ref></property><bean id="dao" class="com.leonardoborges.BaseDao"></bean>
[/xml]Lindo nÃ£o? Agora multiplique essas entradas pelo nÃºmero de beans que vocÃª normalmente tem numa aplicaÃ§Ã£o. E nÃ£o esqueÃ§a das dependÃªncias de cada um desses beans. Imaginou?

Isso mesmo! Eca!

Existem formas de dar uma simplificada nesse XML, mas vou focar na forma que mais gosto, as novas anotaÃ§Ãµes @Component, @Autowired e @Qualifier. Com essas anotaÃ§Ãµes, seu arquivo de configuraÃ§Ã£o cai de centenas para apenas algumas linhas de XML! Vale a pena dar uma pesquisada, ou aguardar meu prÃ³ximo post, onde darei mais detalhes de como essas anotaÃ§Ãµes funcionam no contexto Spring.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2007-10-29 01:21:09</wp:post_date>
		<wp:post_date_gmt>2007-10-29 01:21:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eu-odeio-xml</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
							</item>
		<item>
		<title>Enquanto isso, em Portugal...</title>
		<link>http://www.leonardoborges.com/writings/2007/11/10/enquanto-isso-em-portugal/</link>
		<pubDate>Sat, 10 Nov 2007 08:27:15 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2007/11/10/enquanto-isso-em-portugal/</guid>
		<description></description>
		<content:encoded><![CDATA[Pois bem, saÃ­ do Rio hoje rumo a Madrid, com escala em Lisboa.

A essa hora jÃ¡ estaria por lÃ¡.... mas no momento estou no aeroporto de Lisboa esperando o prÃ³ximo vÃ´o, visto que perdi a conexÃ£o! Acontece atÃ© na europa! :p

Em teoria o embarque Ã© daqui a 1h:30min...

Os portugueses sÃ£o muito atenciosos btw!

AtÃ© a prÃ³xima!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2007-11-10 08:27:15</wp:post_date>
		<wp:post_date_gmt>2007-11-10 08:27:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>enquanto-isso-em-portugal</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
							</item>
		<item>
		<title>Language change</title>
		<link>http://www.leonardoborges.com/writings/2007/11/20/language-change/</link>
		<pubDate>Tue, 20 Nov 2007 00:19:19 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2007/11/20/language-change/</guid>
		<description></description>
		<content:encoded><![CDATA[Well, talking with some friends, I decided that, from now on, I shall only write in english on this blog.

Of course some of you may not like it. But I think it has more advantages than the other way around.Â  I have some friends around the world, including people from the U.S., Spain, Italy, China, India and Australia. This way, they can also enjoy the content of this blog and help me improve it.

I will keep writing on the same subjects, so feel free to comment, as always. You may comment in the language you like more - hey, I can't read Japanese! - but english is highly preferable! ;)

Thanks and see you on my next post!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2007-11-20 00:19:19</wp:post_date>
		<wp:post_date_gmt>2007-11-20 00:19:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>language-change</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210234880]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>9</wp:comment_id>
		<wp:comment_author><![CDATA[Fabio Araujo]]></wp:comment_author>
		<wp:comment_author_email>ows.fabio@loginlogistica.com.br</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>201.7.186.144</wp:comment_author_IP>
		<wp:comment_date>2007-11-23 01:38:10</wp:comment_date>
		<wp:comment_date_gmt>2007-11-23 01:38:10</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Parabens LÃ©o ... o blog Ã© maneirissimo ...

AbraÃ§o

Fabio]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>10</wp:comment_id>
		<wp:comment_author><![CDATA[Zhou Renjian]]></wp:comment_author>
		<wp:comment_author_email>zhourenjian@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://dev.zhourenjian.com/blog/</wp:comment_author_url>
		<wp:comment_author_IP>210.22.155.236</wp:comment_author_IP>
		<wp:comment_date>2007-12-03 01:52:22</wp:comment_date>
		<wp:comment_date_gmt>2007-12-03 01:52:22</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Nice, now I am reading your blog.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>11</wp:comment_id>
		<wp:comment_author><![CDATA[Jattie]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@jattie.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>89.100.105.245</wp:comment_author_IP>
		<wp:comment_date>2008-01-20 00:14:36</wp:comment_date>
		<wp:comment_date_gmt>2008-01-20 00:14:36</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I also write in English instead of my fist language Afrikaans. It increases the audience of only about 3Million potential readers to about 3 Billion of people who has some level of ability in the language and I would've missed some vital bits of information if you did not write in English, so keep up the good work, you never know who reads it.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Ruby On DB2 - A linux nightmare with a happy end!</title>
		<link>http://www.leonardoborges.com/writings/2007/11/20/ruby-on-db2-a-linux-nightmare-with-a-happy-end/</link>
		<pubDate>Tue, 20 Nov 2007 00:57:06 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2007/11/20/ruby-on-db2-a-linux-nightmare-with-a-happy-end/</guid>
		<description></description>
		<content:encoded><![CDATA[Although the title might look dramatic, it's pretty close to what I've been through.

I have set up a Ubuntu 64 bits on my laptop last week to do some tests with Ruby and DB2. Oh man, it is not complicated, is it? It shouldn't be, actually.

Too sad that I found <a href="http://antoniocangiano.com/2007/11/14/guide-to-setting-up-the-ibm-ruby-and-python-drivers-for-db2-on-linux-32-or-64-bit/" title="Antonio Cangiano's Blog">this</a> so late! It's a post from a friend, <a href="http://antoniocangiano.com/" title="Antonio Cangiano's Blog">Antonio Cangiano</a>, describing the most common problems you may find trying to set up this environment (Linux + Ruby + DB2). You will probably get it working the first time, if you read it <strong>word</strong> by <strong>word</strong>. But if not, here are some extra tips that I can share with you.

- If you installed Ruby using your distribution's package manager, remove all ruby packages completely. After that, install ruby exactly as described in Antonio's <a href="http://antoniocangiano.com/2007/11/14/guide-to-setting-up-the-ibm-ruby-and-python-drivers-for-db2-on-linux-32-or-64-bit/">post</a>, typing this in the console:
<pre class="rubycode"><code>$ sudo apt-get install build-essential
$ sudo apt-get install ruby-full rubygems</code></pre>
After that, you may try again.

- Another problem I found was after getting the driver built. I have written a simple program to try the connection and got this message:

<strong>Failed to load IBM_DB Ruby Driver</strong>

The thing is that this error really means it was not able to find the file libdb2.so.1 in the /usr/lib directory. Issuing this command may settle things for you - it will create the missing symbolic link:
<pre class="rubycode"><code>$ ln -s /opt/ibm/db2/V9.5/lib64/libdb2.so.1 /usr/lib</code></pre>
Good luck!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2007-11-20 00:57:06</wp:post_date>
		<wp:post_date_gmt>2007-11-20 00:57:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-on-db2-a-linux-nightmare-with-a-happy-end</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[214890769]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Why every programmer has to be dumb?</title>
		<link>http://www.leonardoborges.com/writings/2007/11/23/why-every-programmer-have-to-be-dumb/</link>
		<pubDate>Fri, 23 Nov 2007 01:17:25 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category domain="tag"><![CDATA[Programming]]></category>

		<category domain="tag" nicename="programming"><![CDATA[Programming]]></category>

		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2007/11/23/why-every-programmer-have-to-be-dumb/</guid>
		<description></description>
		<content:encoded><![CDATA[At least, dumb for the companies hiring them. The old dream is still for sale out there: Build a "I do everything framework" and hire a bunch of dumb programmers - monkeys? - and you shall make money easily!

Just put some button pressers and a full featured enterprise system will be waiting on the other side of this "machine"!

C'mon, I thought this dream was over! We've had enough proofs that this doesn't work!

Why? Because a framework, system builder, code generator or what you may want to call this thing just can't do everything. And if you try to build this "monster" you will get yourself a hell of a problem:
<ul>
	<li>Your product will never be ready.
Or you think that "everything" has limits? Someone will always say: Hey, let's put this new feature right there... it's so small....</li>
	<li>Your product will not work well.
Bugs! Bugs! Bugs! I've never knew a team that has written enough tests building such a monster. Be prepared! If it's never ready, you will always be in a rush!</li>
</ul>
But ok, even if you manage to develop this "framework" and hire a bunch of monkeys to press its buttons, that's when the worst problem arise. (At least worst in my opinion)

With this "philosophy", you assume that you want to hire low level programmers that don't need to learn anything new besides how to use your full-fledged systems generator. And who the hell likes to work in a place like that?

You take from your employees all the joy of development, which is about creativity. All about putting your brain to work. And sooner or later, they will notice that and just quit. You will never be able to stablish a trustworthy relationship within your team as well as to motivate them.

How will you motivate a team by telling them they will learn a new framework that isn't used anywhere else in the world and that they will not improve their thinking?

They will become bored. And if not, man, I wouldn't like to have someone like that in my team.

The problem is that managers usually love the idea to build huge enterprise systems at low costs. And some consultants sell this idea quite well.

I prefer to have trustworthy people in my team. Provide an environment that promotes learning. Let their creativity flow. Only with this approach you will have a first class team of developers producing, happily, high quality enterprise systems.

That's the message for the companies out there: Software development IS a creative process. Promote learning. Let them create.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2007-11-23 01:17:25</wp:post_date>
		<wp:post_date_gmt>2007-11-23 01:17:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-every-programmer-have-to-be-dumb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210234884]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>12</wp:comment_id>
		<wp:comment_author><![CDATA[Daniel]]></wp:comment_author>
		<wp:comment_author_email>aragao.dan@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://antagonisticpleiotropy.blogspot.com/</wp:comment_author_url>
		<wp:comment_author_IP>58.111.38.116</wp:comment_author_IP>
		<wp:comment_date>2008-01-10 12:11:11</wp:comment_date>
		<wp:comment_date_gmt>2008-01-10 12:11:11</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Oi Leo,

You're right, this is the main difference between the traditional western culture and the japanese one.
Toyota is good example. They are all about having the best line workers and the best automated processes to support them. Conversely a traditional GM is about automating as much as possivel so line worker don't have to make decisions.
Nevertheless I reckon we've been automating too much, we focus on simply providing automation regardless of whether it empowers or stupidifies workers.

[]s
Daniel]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>13</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>201.19.129.209</wp:comment_author_IP>
		<wp:comment_date>2008-01-12 13:52:35</wp:comment_date>
		<wp:comment_date_gmt>2008-01-12 13:52:35</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Exactly!

That's why I avoid big companies nowadays.
You end up finding yourself more useful and respected in small ones, that values your creativity.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>RubyWorks: Production Stack for Rails</title>
		<link>http://www.leonardoborges.com/writings/2007/12/01/rubyworks-production-stack-for-rails/</link>
		<pubDate>Sat, 01 Dec 2007 03:40:43 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2007/12/01/rubyworks-production-stack-for-rails/</guid>
		<description></description>
		<content:encoded><![CDATA[Well, we all know how hard, or at least cumbersome, it can be to set up a production environment to deploy your applications. Besides all the hardware stuff like storages, links, routers you are still left with a huge amount of software configuration to handle. This often includes configuring things like clusters, load balancing and services monitoring - Including notification of interested parts in case of any failure. Pieces of software you have to tie up and make them work together.

But hey, ruby lovers, you may have a better way to get this going! Released by <a href="http://www.thoughtworks.com/" title="TW's web site">ThoughtWorks</a>, <a href="http://studios.thoughtworks.com/rubyworks" title="RubyWorks">RubyWorks</a> is, as quoted from their website, a production application stack for <a href="http://www.rubyonrails.org/" title="Ruby On Rails">Ruby On Rails</a> applications. I decided to give it a try and I really enjoyed it.

First of all I didn't want to mess with my actual configuration so I installed a new vm with <a href="http://www.virtualbox.org/" title="Virtual Box">Virtual Box</a>. It has Ubuntu 7.10 on it, with 256MB of memory.

After installing RubyWorks - instructions on their website -, you get a new skeleton rails app up and running, being served by 4 <a href="http://mongrel.rubyforge.org/" title="Mongrel">mongrels</a> that defaults to production environment! Impressed? There is more. A <a href="http://haproxy.1wt.eu/" title="HAProxy">HAProxy</a> is also set up in front of your mongrel servers acting as a load balancer.

Well, you probably want to monitor all that stuff huh? A <a href="http://www.tildeslash.com/monit/" title="Monit">monit</a> web interface is waiting for your call on port 2812! It monitors all your mongrel servers - four by default - and your HAProxy, allowing you to measure CPU and Memory usage, among other things.

The coolest thing here is that all these softwares you would have to setup by hand are already working together, ready for production! Well, is it?

Going a little deeper, I deployed a database backed application to test this stack's performance.

I used <a href="http://www.joedog.org/JoeDog/Siege" title="Siege">Siege</a> to stress the app and I am very happy with the results! I compared it with a single mongrel running on production env and no proxy at all.

It is worth mentioning that having 4 mongrels running took my vm to 77% of memory usage, while a single mongrel took it to 38%.

<!--more-->

The test was made simulating 200 concurrent users on a simple listing page, lasting 1 minute. And the results are:
[code]
RubyWorks - 77% memory usage
--------------
Transactions: 1511 hits
Availability: 100.00 %
Elapsed time: 60.45 secs
Data transferred: 3.32 MB
Response time: 4.65 secs
Transaction rate: 25.00 trans/sec
Throughput: 0.05 MB/sec
Concurrency: 116.33
Successful transactions: 1513
Failed transactions: 0
Longest transaction: 15.85
Shortest transaction: 0.01
[/code]
[code]
Mongrel - production environment - 38% memory usage
-----------
Transactions: 1460 hits
Availability: 100.00 %
Elapsed time: 67.96 secs
Data transferred: 3.20 MB
Response time: 7.33 secs
Transaction rate: 21.48 trans/sec
Throughput: 0.05 MB/sec
Concurrency: 157.57
Successful transactions: 1460
Failed transactions: 0
Longest transaction: 17.78
Shortest transaction: 0.01
[/code]

Wow!

That is a big difference! In less time, with less resources - remember the 77% against 38%? - the out-of-the-box RubyWorks setup was able to handle more requests at a time, and with a lower response time! Even in a machine with very low resources (256MB)!

This result actually was expected but it was awesome to show that this stack is powerful without touching it and is a very good starting point to tailor your environment, without having to worry about configuring all this stuff. Just focus on fine tuning it, if you need!

Oh, and by the way, I didn't even put an apache in front of that, which is highly recommended for a prod environment!

See you on the next post!

UPDATE 12/1 - 4:25 PM : I fogot to mention that besides all this configuration, it installs ruby and its dependencies as well.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date>2007-12-01 03:40:43</wp:post_date>
		<wp:post_date_gmt>2007-12-01 03:40:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rubyworks-production-stack-for-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210234905]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>15</wp:comment_id>
		<wp:comment_author><![CDATA[Mark]]></wp:comment_author>
		<wp:comment_author_email>dj_mook@hotmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://kogent.net/</wp:comment_author_url>
		<wp:comment_author_IP>76.222.192.62</wp:comment_author_IP>
		<wp:comment_date>2007-12-04 18:51:41</wp:comment_date>
		<wp:comment_date_gmt>2007-12-04 18:51:41</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Apache or Nginx are the two prefered http proxies to sit in front of mongrel.

Also configuring mongrel to use swiftiply (moving mongrel from thread based to event based) is great for sites with a lots of concurrent connections.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>16</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardo@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://</wp:comment_author_url>
		<wp:comment_author_IP>201.49.218.55</wp:comment_author_IP>
		<wp:comment_date>2007-12-05 12:22:13</wp:comment_date>
		<wp:comment_date_gmt>2007-12-05 12:22:13</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Mark!
Thanks for sharing!

Actually, you could, of course, use Apache in front of mongrel to do load-balancing. - through mod_proxy_balancer.

However, there is a nice advantage on using HAProxy for that, described here: http://rubyworks.rubyforge.org/manual/haproxy.html

Also, it is important to note that I still think you should use apache to serve your static content. But without mod_proxy_balancer. Just put it in front of HAProxy.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>17</wp:comment_id>
		<wp:comment_author><![CDATA[O jeito mais fÃ¡cil de configurar sua VPS com Rails: RubyWorks]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://rubinelli.net/2007/12/10/o-jeito-mais-facil-de-configurar-sua-vps-com-rails-rubyworks/</wp:comment_author_url>
		<wp:comment_author_IP>74.208.16.112</wp:comment_author_IP>
		<wp:comment_date>2007-12-10 23:46:06</wp:comment_date>
		<wp:comment_date_gmt>2007-12-10 23:46:06</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] Leonardo Borges conta a sua experiÃªncia com o pacotÃ£o RubyWorks, uma espÃ©cie de InstantRails para servidores [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Why English?</title>
		<link>http://www.leonardoborges.com/writings/?page_id=16</link>
		<pubDate>Mon, 03 Dec 2007 17:34:32 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/why-english/</guid>
		<description></description>
		<content:encoded><![CDATA[This page is for those who didn't read my post entitled <a href="http://leonardoborges.com/writings/2007/11/20/language-change/">Language Change</a>Â .Â  You can do it now or keep reading.

Some of you may be asking why I write in english if I amÂ brazilian.

Â The content of the post explains it and is quoted below:

<em>"</em><em>Well, talking with some friends, I decided that, from now on, I shall only write in english on this blog.</em>

<em>Of course some of you may not like it. But I think it has more advantages than the other way around.Â  I have some friends around the world, including people from the U.S., Spain, Italy, China, India and Australia. This way, they can also enjoy the content of this blog and help me improve it.</em>

<em>I will keep writing on the same subjects, so feel free to comment, as always. You may comment in the language you like more - hey, I canâ€™t read Japanese! - but english is highly preferable! <img src="http://leonardoborges.com/writings/wp-includes/images/smilies/icon_wink.gif" alt=";)" class="wp-smiley" /> </em>

<em>Thanks and see you on my next post!"</em>

But if you really enjoyed any reading on this blog and would like to have it in portuguese, to share with friends or maybe to understand it better, leave a comment requesting it. I will be very glad to do so.

See you!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2007-12-03 10:34:32</wp:post_date>
		<wp:post_date_gmt>2007-12-03 17:34:32</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>why-english</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_wp_page_template</wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1253797193]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Spring 2.5: Dependency Injection that doesn&#039;t hurt</title>
		<link>http://www.leonardoborges.com/writings/2007/12/07/spring-25-dependency-injection-that-doesnt-hurt/</link>
		<pubDate>Fri, 07 Dec 2007 15:47:10 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category domain="tag"><![CDATA[Architecture]]></category>

		<category domain="tag" nicename="architecture"><![CDATA[Architecture]]></category>

		<category><![CDATA[Architecture]]></category>

		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category><![CDATA[Spring]]></category>

		<category domain="category" nicename="spring"><![CDATA[Spring]]></category>

		<category domain="tag"><![CDATA[Spring]]></category>

		<category domain="tag" nicename="spring"><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2007/12/07/spring-25-dependency-injection-that-doesnt-hurt/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://martinfowler.com/articles/injection.html">Dependency injection</a> - <a href="http://martinfowler.com/articles/injection.html">DI</a>Â - Â is a great thing. Really. The hability to tweak implementations without touching your code is awesome and the DI frameworks, like spring, saves you a lot of coding. No more service locators stuff.

But, and there is always a but, you're left with a bunch of XML configuration. And I hate it. Not that XML files are bad... the thing is that everything nowadays has its own set of XML configurarion files. And <a href="http://www.springframework.org">Spring</a> is not different.

<!--more-->

Let's take a look at a simple example on how dependency injection is handled in Spring.

Imagine you have a domain object called Invoice that, among other things, is somewhat defined like this:
[java]
public class Invoice {
//normal attributes and getters/setters

public void sendByEmailTo(String address) {
//code to send invoice by e-mail
}
}
[/java]

You have a method to send a certain Invoice through e-mail, probably to some customer. This method would basically do some processing, maybe formatting strings, and then, ideally, delegate the send e-mail task to someone else. Probably a infrastructure service or something similar, that I will call EmailService. This object knows how to do the low level stuff like connecting to the SMTP server and so on. So we need this object, we <em>depend</em> on it.Â  To express this dependency, the Invoice code would change to this:

[java]
public class Invoice {
//normal attributes and getters/setters
private EmailService emailService;
public void setEmailService(EmailService service) {
emailService = service;
}

public void sendByEmailTo(String address) {
//code to send invoice by e-mail
}
}
[/java]

This way the Invoice class is prepared to be injected with its only dependency using Spring. Now, what you would have to do is to declaratively express this dependency to the Spring container, so it can settle things for you. This is done through its XML configuration file, often called <em>applicationContext</em>. Below is the snippet of the file relevant to this example:

[xml]

<bean id="invoice" class="com.leonardoborges.Invoice">
<property name="emailService">Â  <ref bean="emailService"></ref></property>
</bean>

<bean id="emailService" class="com.leonardoborges.EmailService"></bean>

[/xml]And that's it. Upon initialization Spring will use this XML file to discover that the Invoice object depends on the EMailService object and inject it using the setter method we created before.

The problem is: If we have 50 domain objects that depends on 10 service objects that depends on anything else, we would end up in a XML forrest with at least 60 bean definitions.
Of course you can break this creating smaller XML files, but they are stillÂ XML files with bean definitions. Well, with Spring 2.5 we have a better option: We can use annotations!
In this new release, Spring use its own set of annotations to resolve object dependencies without XML. Let's see how this thing works.

Our previous Invoice object would change to this:
[java]
public class Invoice {
//normal attributes and getters/setters
@AutoWired
@Qualifier("myEmailService")
private EmailService emailService;
public void setEmailService(EmailService service) {
emailService = service;
}

public void sendByEmailTo(String address) {
//code to send invoice by e-mail
}
}
[/java]

Let's explain this change. The <a href="http://static.springframework.org/spring/docs/2.5.x/api/org/springframework/beans/factory/annotation/Autowired.html">@AutoWired</a> annotation tells spring that it should automatically wire dependencies based on its type, in our case, EmailService. But we take it a step further and choose which object to inject based not only on its type, but based on its name, with the <a href="http://static.springframework.org/spring/docs/2.5.x/api/org/springframework/beans/factory/annotation/Qualifier.html">@Qualifier</a> annotation.

Â Hmm... you may be asking now - But where did we say theÂ objectÂ name is myEmailService?

Â Okay, the other leg of the magic is on the <a href="http://static.springframework.org/spring/docs/2.5.x/api/org/springframework/stereotype/Component.html">@Component</a> annotation:

[java]
@Component("myEmailService")
public class EmailService {
//methods
}
[/java]

With this annotation, you register a new component available for injection within the Spring container. This way, you don't need to put neither the Invoice objects, nor its dependencies in the xml files. Pretty, huh?

But one question remains: How the hell spring knows about this annotated classes?
This is the one-million question and the answer is simple. You <em>do</em> need an XML file, but just to tell spring where to look for annotated classes, this way:

[xml]
<annotation-config></annotation-config>
<component-scan base-package="br.com"></component-scan>
[/xml]

The first clause sets the container to support annotation based configuration. The second one, component-scan, defines the base package where Spring should look for anotated classes within your project. That's how it will be able to discover who needs who and who is a eligible component for injection.

You are really left with a small, tiny, piece of XML. Much more clean, elegant and much less XML to type.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date>2007-12-07 15:47:10</wp:post_date>
		<wp:post_date_gmt>2007-12-07 15:47:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spring-25-dependency-injection-that-doesnt-hurt</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210234916]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>25</wp:comment_id>
		<wp:comment_author><![CDATA[Ross]]></wp:comment_author>
		<wp:comment_author_email>shamidude@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>24.245.26.64</wp:comment_author_IP>
		<wp:comment_date>2007-12-08 18:40:32</wp:comment_date>
		<wp:comment_date_gmt>2007-12-08 18:40:32</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks for demonstrating the use of annotations. I agree with you that XML configuration files can grow out of control and become a pain to maintain.

But this autowiring leads to a question about testing. One of the main benefits of IoC is that it allows you to change the dependencies by editing non-code files, and this facilitate testing of classes by using stubs or test harness instead of the real dependencies. I wonder how annotations play into this.

We can use annotations for the real application, and full XML files for testing, but then we go back to the issue of XML file maintenance (at least here we would have to deal with half as much config files)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>26</wp:comment_id>
		<wp:comment_author><![CDATA[Dan]]></wp:comment_author>
		<wp:comment_author_email>debradley@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>24.61.19.56</wp:comment_author_IP>
		<wp:comment_date>2007-12-08 20:05:16</wp:comment_date>
		<wp:comment_date_gmt>2007-12-08 20:05:16</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Ross - in your unit test you get the wired-up bean from the Spring context and then just call a setter to replace its dependency with a mock. Easy.

Invoice.setEmailService(myStub). Done.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>27</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardo@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://</wp:comment_author_url>
		<wp:comment_author_IP>201.19.83.223</wp:comment_author_IP>
		<wp:comment_date>2007-12-09 00:34:06</wp:comment_date>
		<wp:comment_date_gmt>2007-12-09 00:34:06</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Ross and Dan, thanks for the comments.

Ross, Dan is right. You can just replace the instance with your mock but, since you get the wired-up instance, maybe you don't even need to do that.

If you can share an example, I can try to help more.

:)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>28</wp:comment_id>
		<wp:comment_author><![CDATA[Dionatan]]></wp:comment_author>
		<wp:comment_author_email>dionatan.almeida@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>201.36.90.194</wp:comment_author_IP>
		<wp:comment_date>2007-12-29 15:55:07</wp:comment_date>
		<wp:comment_date_gmt>2007-12-29 15:55:07</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Ross, Dan, Leo. I think we can use a better aproach to the test problem. We can use write our code as interface based, so we inject interfaces. While testing, we provide in classpath mock implementations of that interfaces. Spring will find the interfaces implementations and use them.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>29</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>193.252.184.207</wp:comment_author_IP>
		<wp:comment_date>2008-03-04 21:18:05</wp:comment_date>
		<wp:comment_date_gmt>2008-03-04 21:18:05</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey Darryl,

Actually you are not being sarcastic at all. We can have the Spring framework kind of listening to the "new" keyword. (Actually, the object instantiation process itself).

This is done through aspects. But if you don't wanna have the hassle of using aspects in your app, you better have your model as an "Anemic Model" and inject your dependencies into your controllers and services.

Anyway, if you think it's valid, I can prepare another post about how to do it using aspects. Just tell me what you think. I'll be very happy to do so! :)

Thanks for your comment.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>30</wp:comment_id>
		<wp:comment_author><![CDATA[Darryl]]></wp:comment_author>
		<wp:comment_author_email>djp_junk@hotmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>87.194.205.214</wp:comment_author_IP>
		<wp:comment_date>2008-03-04 20:45:58</wp:comment_date>
		<wp:comment_date_gmt>2008-03-04 20:45:58</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[One thing you don't explain, and which pretty much every single web article doesn't explain, is how do you get an instance of (per your example) Invoice? You obviously don't do an Invoice invoice = new Invoice(). Unless Spring integrates into the VM and intercepts the 'new' keyword (yes, I'm being sarcastic). Seriously though, outside of the little Hello World apps, why are there no examples showing how you actually create an instance of the object that is being injected by Spring. I don't want a Singleton. I want, for instance, a new instance of Invoice each time. Does nobody know hence they don't have that in their illustrations. Not sure I've seen a single example yet.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>31</wp:comment_id>
		<wp:comment_author><![CDATA[Confluence: CDP]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://confluence.cub2k.com/display/CDP/Notas+sobre+Configuracion+en+Spring</wp:comment_author_url>
		<wp:comment_author_IP>200.61.163.41</wp:comment_author_IP>
		<wp:comment_date>2008-04-04 17:31:03</wp:comment_date>
		<wp:comment_date_gmt>2008-04-04 17:31:03</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[<strong>Notas sobre Configuracion en Spring...</strong>

Si bien esta pagina no tiene mucho informaciÃ³n, el objetivo de la misma es registrar tips, usos comunes de Spring para resolver cuestiones de configuraciÃ³n, etc.......]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>trackback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>32</wp:comment_id>
		<wp:comment_author><![CDATA[Confluence: CDP]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://confluence.cub2k.com/display/CDP/AspectJ+con+Spring</wp:comment_author_url>
		<wp:comment_author_IP>200.61.163.41</wp:comment_author_IP>
		<wp:comment_date>2008-04-07 18:30:25</wp:comment_date>
		<wp:comment_date_gmt>2008-04-07 18:30:25</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[<strong>AspectJ con Spring...</strong>

TODO  Ver una estrategia razonable para hacer que los objetos de dominio puedan acceder a la Configuracion...]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>trackback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>33</wp:comment_id>
		<wp:comment_author><![CDATA[Confluence: CDP]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://confluence.cub2k.com/display/CDP/Lecturas</wp:comment_author_url>
		<wp:comment_author_IP>200.61.163.41</wp:comment_author_IP>
		<wp:comment_date>2008-04-03 12:00:57</wp:comment_date>
		<wp:comment_date_gmt>2008-04-03 12:00:57</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[<strong>Lecturas...</strong>

Sobre Injeccion de dependencias para objetos de negocio y otras cuestiones de Spring...]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>trackback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Rails 2.0: Scaffold</title>
		<link>http://www.leonardoborges.com/writings/2007/12/21/rails-20-scaffold/</link>
		<pubDate>Fri, 21 Dec 2007 01:16:52 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2007/12/21/rails-20-scaffold/</guid>
		<description></description>
		<content:encoded><![CDATA[Following the Rails 2.0 hype, I've been playing around with it and decided to share a first impression: Scaffolding is gone!

But wait, before you knock your head against the wall, let me tell you something: I lied :)

Scaffolding is not really gone. It's just changed a bit.

How can I tell? Well, as a good developer I thought: "I'll just create a scaffold with the new version and see what's different"

I fired up a terminal, created a news rails application and generated a new model:

<strong><code>$ script/generate model Contact name:string email:string</code></strong> - yes you can do this in rails 2.0, and these fields get into your model's migration!

Now the I have a new model, it's time for a controller to manage it:

<strong><code>$ script/generate controller Contacts</code></strong>

So your controller would look something like this huh?

<strong><code>class ContactsController &lt; ApplicationController
scaffold :contact
end</code></strong>

Well, too bad! The method scaffold is gone from ActionController::Base! And I'm not lying this time!

Now that the dynamic scaffold is gone, we're left with the static one.
Ok, let's try it then:

<strong><code>$ script/generate scaffold contact</code></strong>

And it won't work again! ;) At the end of the output, you will get something like this:

<code>Another migration is already named create_contacts: db/migrate/001_create_contacts.rb</code>

It really means that if your model is meant to be used by a scaffold, you better generate it in the same line. It will fail, afaik, if the model previously existed. Destroy yout model and controller, and execute the following:

<strong><code>$ script/generate scaffold Contact name:string email:string</code></strong>

Done! Just run your migrations, startup your server and your new scaffold in rails 2.0 will be working gracefully!

It took me a while to discover this changes because I didn't find it well documented. But maybe I was not looking in the right places. :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2007-12-21 01:16:52</wp:post_date>
		<wp:post_date_gmt>2007-12-21 01:16:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-20-scaffold</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1222971502]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235071]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>35</wp:comment_id>
		<wp:comment_author><![CDATA[lionslinger]]></wp:comment_author>
		<wp:comment_author_email>linon00908@Yahoo.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>76.238.26.167</wp:comment_author_IP>
		<wp:comment_date>2007-12-22 06:12:18</wp:comment_date>
		<wp:comment_date_gmt>2007-12-22 06:12:18</wp:comment_date_gmt>
		<wp:comment_content><![CDATA["Destroy yout model and controller"

Do you just delete the files? i'm thinking of starting over from scratch...]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>36</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardo@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://</wp:comment_author_url>
		<wp:comment_author_IP>201.19.84.144</wp:comment_author_IP>
		<wp:comment_date>2007-12-22 15:20:40</wp:comment_date>
		<wp:comment_date_gmt>2007-12-22 15:20:40</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[No, you can destroy them just the way you do to create, like this:

$ script/destroy model Task

and

$ script/destroy controller Tasks

And you're done, the right files get deleted.

Hope this helps!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>37</wp:comment_id>
		<wp:comment_author><![CDATA[Pete]]></wp:comment_author>
		<wp:comment_author_email>pete@cowpc.com</wp:comment_author_email>
		<wp:comment_author_url>http://latexchicken.com</wp:comment_author_url>
		<wp:comment_author_IP>212.5.210.202</wp:comment_author_IP>
		<wp:comment_date>2008-01-10 09:27:35</wp:comment_date>
		<wp:comment_date_gmt>2008-01-10 09:27:35</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[This was a great little post... you saved me a lot of frustration and starting from scratch as well. I'll be sure to remember the script/destroy bit (yah, I'm just starting my Ruby adventures).  :)

Cheers.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>38</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>201.19.100.213</wp:comment_author_IP>
		<wp:comment_date>2008-01-10 09:52:50</wp:comment_date>
		<wp:comment_date_gmt>2008-01-10 09:52:50</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey Pete, thanks for the compliments. I'm happy this article helped you.

Regards]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>39</wp:comment_id>
		<wp:comment_author><![CDATA[Pete]]></wp:comment_author>
		<wp:comment_author_email>pete@cowpc.com</wp:comment_author_email>
		<wp:comment_author_url>http://latexchicken.com</wp:comment_author_url>
		<wp:comment_author_IP>195.252.92.142</wp:comment_author_IP>
		<wp:comment_date>2008-01-11 11:24:32</wp:comment_date>
		<wp:comment_date_gmt>2008-01-11 11:24:32</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[It sure did, I followed a link from another one of your posts at the ruby forum:

http://www.ruby-forum.com/topic/136192#605871

very useful post.

Cheers.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>40</wp:comment_id>
		<wp:comment_author><![CDATA[David Mantilla &raquo; Blog Archive &raquo; Learning Ruby on Rails]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.davidmantilla.com/?p=69</wp:comment_author_url>
		<wp:comment_author_IP>216.154.218.123</wp:comment_author_IP>
		<wp:comment_date>2008-01-13 17:42:35</wp:comment_date>
		<wp:comment_date_gmt>2008-01-13 17:42:35</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] Rails 2.0 blog post [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>41</wp:comment_id>
		<wp:comment_author><![CDATA[Mirjam]]></wp:comment_author>
		<wp:comment_author_email>mirjam.s@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>91.150.93.130</wp:comment_author_IP>
		<wp:comment_date>2008-01-24 14:54:35</wp:comment_date>
		<wp:comment_date_gmt>2008-01-24 14:54:35</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[It works ;o)), and I'm so happy that I finally figure it out, because I'm total newbie in ruby and rails. I don't have any experience in scripting languages]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>42</wp:comment_id>
		<wp:comment_author><![CDATA[Rhonabwy &raquo; Ah! so that&#8217;s what happened&#8230;]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.rhonabwy.com/wp/2008/01/26/ah-so-thats-what-happened/</wp:comment_author_url>
		<wp:comment_author_IP>192.203.228.196</wp:comment_author_IP>
		<wp:comment_date>2008-01-27 00:10:48</wp:comment_date>
		<wp:comment_date_gmt>2008-01-27 00:10:48</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] on the ruby forums. In a nutshell,Â dynamic scaffolding doesn&#8217;t exist in Rails 2.x - butÂ you can generate a static scaffoldingÂ with rails generator code.I&#8217;m certainly not quite used to &#8220;script/generate [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>43</wp:comment_id>
		<wp:comment_author><![CDATA[Richard SimÃµes]]></wp:comment_author>
		<wp:comment_author_email>rsimoes@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>99.145.129.86</wp:comment_author_IP>
		<wp:comment_date>2008-03-17 23:16:53</wp:comment_date>
		<wp:comment_date_gmt>2008-03-17 23:16:53</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[The Rails Way isn't comparable to AWDR. The former is a reference book for experience RoR developers. It's not meant to be used as an introduction to RoR. As of yet there are no introductory books using Rails 2.0.x. Let Google light your way!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>44</wp:comment_id>
		<wp:comment_author><![CDATA[lasnite]]></wp:comment_author>
		<wp:comment_author_email>lasnite@hotmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>24.174.136.158</wp:comment_author_IP>
		<wp:comment_date>2008-02-01 04:28:27</wp:comment_date>
		<wp:comment_date_gmt>2008-02-01 04:28:27</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Dude:
I love you!!! I'm ready to give u first my born. Seriously, thanks for the help. It really lead me in the right direction.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>45</wp:comment_id>
		<wp:comment_author><![CDATA[Wiley]]></wp:comment_author>
		<wp:comment_author_email>WILEYTHOMAS3@SBCGLOBAL.NET</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>70.254.36.70</wp:comment_author_IP>
		<wp:comment_date>2008-02-02 18:28:45</wp:comment_date>
		<wp:comment_date_gmt>2008-02-02 18:28:45</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks for posting this.  I've been trying to follow the Agile Web development book and kept running into a brick wall until I found your explanation.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>46</wp:comment_id>
		<wp:comment_author><![CDATA[Kevin Solveson]]></wp:comment_author>
		<wp:comment_author_email>ksolveso@columbus.rr.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>24.210.20.135</wp:comment_author_IP>
		<wp:comment_date>2008-02-03 02:30:08</wp:comment_date>
		<wp:comment_date_gmt>2008-02-03 02:30:08</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Leonard -

Just wanted to add my thanks for your clear explanation of what the heck is going on with scaffolding in rails 2.0.2.  As a newbie, trying to use the "Agile" book (based on 1.1 I guess) but using rails 2.0.2, I was getting pretty frustrated, googling all over the place for some straw of help.  I read your post and the lights came on!  Thank-you.  Sailing along fine now -- for the time being :-)

Kevin]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>47</wp:comment_id>
		<wp:comment_author><![CDATA[jason]]></wp:comment_author>
		<wp:comment_author_email>jasonkrac@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>63.72.208.223</wp:comment_author_IP>
		<wp:comment_date>2008-03-10 14:26:55</wp:comment_date>
		<wp:comment_date_gmt>2008-03-10 14:26:55</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Leonardo,

This was very useful. Do you know of any of the "how-to" book that adequately teached Rails 2.0.2? It seems all the ones I find are for version 1.2.x and its just a drag!

Thanks

Jason]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>48</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>86.156.191.56</wp:comment_author_IP>
		<wp:comment_date>2008-03-10 17:09:55</wp:comment_date>
		<wp:comment_date_gmt>2008-03-10 17:09:55</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Jason,
Thanks for dropping by.
The book <a href="http://www.amazon.com/Rails-Way-Addison-Wesley-Professional-Ruby/dp/0321445619" rel="nofollow">The Rails Way</a> covers 2.0 and have been quite successful lately.

Hope this helps]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>49</wp:comment_id>
		<wp:comment_author><![CDATA[shekhar]]></wp:comment_author>
		<wp:comment_author_email>simplyshekhar85@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>61.17.214.117</wp:comment_author_IP>
		<wp:comment_date>2008-02-28 07:16:26</wp:comment_date>
		<wp:comment_date_gmt>2008-02-28 07:16:26</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[thanks u very much it helped a lot]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>50</wp:comment_id>
		<wp:comment_author><![CDATA[Bruno Dumeny]]></wp:comment_author>
		<wp:comment_author_email>bdumeny@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>90.48.218.4</wp:comment_author_IP>
		<wp:comment_date>2008-04-02 18:09:00</wp:comment_date>
		<wp:comment_date_gmt>2008-04-02 18:09:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I didn't understand that I hadn't to generate model...
Now it works.

Sorry!

Thanks a lot.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>51</wp:comment_id>
		<wp:comment_author><![CDATA[pdxrod]]></wp:comment_author>
		<wp:comment_author_email>rodmclaughlin@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.subcryption.com/</wp:comment_author_url>
		<wp:comment_author_IP>71.236.164.62</wp:comment_author_IP>
		<wp:comment_date>2008-05-20 18:54:22</wp:comment_date>
		<wp:comment_date_gmt>2008-05-20 18:54:22</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks. To get the Depot App (page 67 of Agile Web Development with Rails 2nd edition) to work, this is what you need to do:
It says write admin_controller.rb like this:
class AdminController &lt; ApplicationController
  scaffold :product
end
This doesn't work in Rails 2
Instead, install ActiveScaffold:
./script/plugin install http://activescaffold.googlecode.com/svn/tags/active_scaffold
./script/generate controller admin
and make admin_controller.rb
class AdminController &lt; ApplicationController
  active_scaffold :product
end
./script/server &amp;
Goto http://localhost:3000/admin
and see the products listed, just like it says in AWDR page 68]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>52</wp:comment_id>
		<wp:comment_author><![CDATA[Never Clever &raquo; Blog Archive &raquo; Getting Started on Rails, Again]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.thosecleverkids.com/blog/2008/02/23/getting-started-on-rails-again/</wp:comment_author_url>
		<wp:comment_author_IP>207.7.108.53</wp:comment_author_IP>
		<wp:comment_date>2008-02-23 13:04:53</wp:comment_date>
		<wp:comment_date_gmt>2008-02-23 13:04:53</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] really stupid or the tutorial linked above dances over some bits that need doing. Moving on to this tutorial since it seems to address this problem. If nothing else, I learned that I could do the Model &amp; [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>53</wp:comment_id>
		<wp:comment_author><![CDATA[Tom Clancy]]></wp:comment_author>
		<wp:comment_author_email>tclancy@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://thosecleverkids.com/blog</wp:comment_author_url>
		<wp:comment_author_IP>24.61.182.132</wp:comment_author_IP>
		<wp:comment_date>2008-02-23 13:08:25</wp:comment_date>
		<wp:comment_date_gmt>2008-02-23 13:08:25</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks so much for this.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>54</wp:comment_id>
		<wp:comment_author><![CDATA[m1k3y2]]></wp:comment_author>
		<wp:comment_author_email>m1k3y02@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>80.95.253.194</wp:comment_author_IP>
		<wp:comment_date>2008-02-08 14:28:12</wp:comment_date>
		<wp:comment_date_gmt>2008-02-08 14:28:12</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thank You very much,
would you be able to provide more about data types I should use when scaffolding ?

Thank You,
M.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>55</wp:comment_id>
		<wp:comment_author><![CDATA[Luke S.]]></wp:comment_author>
		<wp:comment_author_email>fotoband@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>12.217.229.153</wp:comment_author_IP>
		<wp:comment_date>2008-02-09 05:42:03</wp:comment_date>
		<wp:comment_date_gmt>2008-02-09 05:42:03</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Oh thank jeebus I found this page...I was having all kinds of trouble.  Total agile programming/Ruby noob here, I'm coming from mostly a design/ASP/drag-and-drop development background and am delving into RoR to try and be more independent and not rely on other people to build things.  It seems it's advancing faster than the literature can keep up.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>56</wp:comment_id>
		<wp:comment_author><![CDATA[samedi]]></wp:comment_author>
		<wp:comment_author_email>leppert@directbox.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>84.73.68.70</wp:comment_author_IP>
		<wp:comment_date>2008-02-09 10:49:49</wp:comment_date>
		<wp:comment_date_gmt>2008-02-09 10:49:49</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[From my understanding this is not the same. In Rails 1.x you could modify your model and all was immediately updated with dynamic scaffolding. Now you would have to rerun the static scaffold and thus destroy the complete model. From my point of view itÂ´s no more as agile as it was before. Any opinions?]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>57</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>80.38.193.131</wp:comment_author_IP>
		<wp:comment_date>2008-02-09 17:38:36</wp:comment_date>
		<wp:comment_date_gmt>2008-02-09 17:38:36</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[samedi,
You won't deliver applications with dinamic scaffolds anyway...  they were there just to help the first steps. However, people often had to fall back to static scaffolding so they could have more control over the components that make it up. Anyway, firing two small commands to regenerate your scaffolds are not that bad! ;)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>58</wp:comment_id>
		<wp:comment_author><![CDATA[samedi]]></wp:comment_author>
		<wp:comment_author_email>leppert@directbox.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>84.73.68.70</wp:comment_author_IP>
		<wp:comment_date>2008-02-09 18:46:08</wp:comment_date>
		<wp:comment_date_gmt>2008-02-09 18:46:08</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Leonardo,

the problem I see is that these 2 commands regenerate ALL from scratch. That is you should have a more or less clear view about the data fields when starting the scaffold. Otherwise you would have to update the controller manually for each appended field. What I would like to have is a generator to generate a controller based on an existing model.

Maybe I understand something wrong, but the current static scaffold is not the same as the recent scaffold generator.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>59</wp:comment_id>
		<wp:comment_author><![CDATA[christian]]></wp:comment_author>
		<wp:comment_author_email>christian@kultur-hirschbach.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>82.218.33.170</wp:comment_author_IP>
		<wp:comment_date>2008-04-08 12:34:59</wp:comment_date>
		<wp:comment_date_gmt>2008-04-08 12:34:59</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[$ script/generate scaffold Contact name:string email:string

spent the whole day, now i understand it, thx! but is it possible to get a different model and controller name? for example controllername = "addressbook" and model = "contact"]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>60</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>201.19.213.59</wp:comment_author_IP>
		<wp:comment_date>2008-04-08 21:34:25</wp:comment_date>
		<wp:comment_date_gmt>2008-04-08 21:34:25</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey Christian,
As far as I know, you can't do that. Seems to have something to do with RESTful resources.. but I'm not 100% sure.

You can try generating the default scaffold and renaming the controller. Never done it myself.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>61</wp:comment_id>
		<wp:comment_author><![CDATA[Sal B]]></wp:comment_author>
		<wp:comment_author_email>sbaldovinos@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.mayhemandchaos.com/blog</wp:comment_author_url>
		<wp:comment_author_IP>69.44.230.240</wp:comment_author_IP>
		<wp:comment_date>2008-05-16 18:37:23</wp:comment_date>
		<wp:comment_date_gmt>2008-05-16 18:37:23</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks for this post. Been watching the lynda.com essential training and it's been quite difficult sense the videos are geared for previous rails. Scaffold made my mind hurt till this post - thank you again.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>62</wp:comment_id>
		<wp:comment_author><![CDATA[JFinger]]></wp:comment_author>
		<wp:comment_author_email>jfinger0@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>216.57.222.134</wp:comment_author_IP>
		<wp:comment_date>2008-02-26 22:12:59</wp:comment_date>
		<wp:comment_date_gmt>2008-02-26 22:12:59</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thank you!!  Much appreciated!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>63</wp:comment_id>
		<wp:comment_author><![CDATA[Uncle DIn]]></wp:comment_author>
		<wp:comment_author_email>info@dinshawdesign.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>72.227.152.88</wp:comment_author_IP>
		<wp:comment_date>2008-05-16 04:16:50</wp:comment_date>
		<wp:comment_date_gmt>2008-05-16 04:16:50</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[--skip-migration]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>64</wp:comment_id>
		<wp:comment_author><![CDATA[nimbletoad blog &raquo; Blog Archive &raquo; Ruby on Rails 2.0 - Scaffolding is Gone!!!]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://blog.nimbletoad.com/?p=31</wp:comment_author_url>
		<wp:comment_author_IP>72.47.220.54</wp:comment_author_IP>
		<wp:comment_date>2008-05-09 23:27:18</wp:comment_date>
		<wp:comment_date_gmt>2008-05-09 23:27:18</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] hats are off to Leonardo Borges for saving us from Rails 2.0 frustration, or worse - starting from [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>65</wp:comment_id>
		<wp:comment_author><![CDATA[jake]]></wp:comment_author>
		<wp:comment_author_email>jacobsnyder@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://drawering.com/</wp:comment_author_url>
		<wp:comment_author_IP>69.86.241.88</wp:comment_author_IP>
		<wp:comment_date>2008-04-27 15:44:55</wp:comment_date>
		<wp:comment_date_gmt>2008-04-27 15:44:55</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks a ton. This is bookmarked, so I can send it to other people. The best and most to-the-point explanation I have come across.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>66</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>201.19.117.57</wp:comment_author_IP>
		<wp:comment_date>2008-04-27 15:56:37</wp:comment_date>
		<wp:comment_date_gmt>2008-04-27 15:56:37</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Jake, you are more than welcome. I'm glad the post helped you.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>68</wp:comment_id>
		<wp:comment_author><![CDATA[Daid Hall]]></wp:comment_author>
		<wp:comment_author_email>drhall@drhcs.demon.co.uk</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>203.198.116.28</wp:comment_author_IP>
		<wp:comment_date>2008-02-14 08:52:11</wp:comment_date>
		<wp:comment_date_gmt>2008-02-14 08:52:11</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks.  This is obviously a very useful post.  I do have the same question as Samedi though.  What happens if want to add columns to an existing model.  Does this mean I now have to manually update the layouts to add columns etc?]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>69</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>201.19.113.127</wp:comment_author_IP>
		<wp:comment_date>2008-02-14 10:17:21</wp:comment_date>
		<wp:comment_date_gmt>2008-02-14 10:17:21</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Daid,
Yes, it means you have to update them manually. Which is not a problem and it is the way it should be. The old dynamic scaffold feature didn't have a good performance at all. Everything gets regenerated at each request.

For development it might be ok, but you will hardly ever develop a rails application where you will need only dynamic scaffolds. That is my opinion anyway... ;)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>70</wp:comment_id>
		<wp:comment_author><![CDATA[Firestoke]]></wp:comment_author>
		<wp:comment_author_email>firestoke@alumni.ccu.edu.tw</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>220.132.129.80</wp:comment_author_IP>
		<wp:comment_date>2008-03-26 08:00:56</wp:comment_date>
		<wp:comment_date_gmt>2008-03-26 08:00:56</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks a lot!!
I am just starting to learn ruby &amp; rails.
But I am really mixed up by the different version of rails. Because I am using rails 2.0.2 now, but the video demo, books...etc. They all are old versions. Without your shortly description of their differences, maybe I am still struggling in the deeeeeeep hell.........Orz

Thanks again!
Firestoke]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>71</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2008-03-25 14:29:51</wp:comment_date>
		<wp:comment_date_gmt>2008-03-25 14:29:51</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Yes, google is always a good option! :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>72</wp:comment_id>
		<wp:comment_author><![CDATA[Bruno Dumeny]]></wp:comment_author>
		<wp:comment_author_email>ptitcon51@hotmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>90.42.37.254</wp:comment_author_IP>
		<wp:comment_date>2008-03-27 17:59:43</wp:comment_date>
		<wp:comment_date_gmt>2008-03-27 17:59:43</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[it doesn't work!! :(
On 2.O.2 version, I've always :

Another migration is already named create_contacts: db/migrate/001_create_contacts.rb

after the scaffolding.
why?]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>73</wp:comment_id>
		<wp:comment_author><![CDATA[Ruby On Rails 2.0.x - Scaffolding in der neuen Version | blog.oneandahalf.net]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://blog.oneandahalf.net/2008/03/27/ruby-on-rails-20x-scaffolding-in-der-neuen-version/</wp:comment_author_url>
		<wp:comment_author_IP>74.53.114.16</wp:comment_author_IP>
		<wp:comment_date>2008-03-27 17:21:14</wp:comment_date>
		<wp:comment_date_gmt>2008-03-27 17:21:14</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] Rails 2.0: Scaffold [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>74</wp:comment_id>
		<wp:comment_author><![CDATA[christian]]></wp:comment_author>
		<wp:comment_author_email>christian@kultur-hirschbach.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>82.218.33.170</wp:comment_author_IP>
		<wp:comment_date>2008-04-10 06:47:14</wp:comment_date>
		<wp:comment_date_gmt>2008-04-10 06:47:14</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[thanks leonardo,
to rename was also the first idea i had, but it didn't work... no matter]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>75</wp:comment_id>
		<wp:comment_author><![CDATA[cocolong]]></wp:comment_author>
		<wp:comment_author_email>qllwx@126.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>220.162.187.213</wp:comment_author_IP>
		<wp:comment_date>2008-05-25 01:04:18</wp:comment_date>
		<wp:comment_date_gmt>2008-05-25 01:04:18</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks for this post.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>146</wp:comment_id>
		<wp:comment_author><![CDATA[Pia]]></wp:comment_author>
		<wp:comment_author_email>pia.ojanen@kawaii.name</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>130.233.46.71</wp:comment_author_IP>
		<wp:comment_date>2008-08-08 04:05:32</wp:comment_date>
		<wp:comment_date_gmt>2008-08-08 11:05:32</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks. I was just getting a bit frustrated with the book "Agile Web Development with Rails" and found this one with Google.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>147</wp:comment_id>
		<wp:comment_author><![CDATA[leonardo]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>83.57.221.148</wp:comment_author_IP>
		<wp:comment_date>2008-08-08 04:25:48</wp:comment_date>
		<wp:comment_date_gmt>2008-08-08 11:25:48</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[You're more than welcome. :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>673</wp:comment_id>
		<wp:comment_author><![CDATA[Vikram]]></wp:comment_author>
		<wp:comment_author_email>vikram.bahl@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>122.163.144.174</wp:comment_author_IP>
		<wp:comment_date>2008-11-09 07:02:19</wp:comment_date>
		<wp:comment_date_gmt>2008-11-09 14:02:19</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Since I had used reference in my migrations, I wasn't sure how do I mention that as an argument.  

script/generate scaffold Person name:text city:reference age:integer  

worked for me in generating a city_id as a foreign reference. 

Afterthought: However, when I look at my database, even though it shows city_id in Person table, it does not show it as a foreign key. We'll figure that out soon.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>498</wp:comment_id>
		<wp:comment_author><![CDATA[Pedro Sena]]></wp:comment_author>
		<wp:comment_author_email>sena.pedro@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>189.82.45.34</wp:comment_author_IP>
		<wp:comment_date>2008-09-26 19:22:46</wp:comment_date>
		<wp:comment_date_gmt>2008-09-27 02:22:46</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi compatriot ;),

Hi made this and everything worked like a charm.

Now IÂ´m changing my model(IÂ´m following AWDWR), I added a field in my database using migrate and rake to perform the changes.

The changes were done in my database, BUT the interface was not updated.

I also added a validates_presence_of and it didÂ´t changed anything in my interface :(.

Do I need to run some command ?

Thanks]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>905</wp:comment_id>
		<wp:comment_author><![CDATA[comicprophet]]></wp:comment_author>
		<wp:comment_author_email>comicprophet@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.conceptualalchenmy.com</wp:comment_author_url>
		<wp:comment_author_IP>67.183.121.27</wp:comment_author_IP>
		<wp:comment_date>2008-12-29 05:31:09</wp:comment_date>
		<wp:comment_date_gmt>2008-12-29 12:31:09</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Leonardo,

 I am extremely grateful for your info altruism. I thought maybe I could show my gratitude with a small donation but I don't see anywhere on your site to do so.
You've saved me hours and possibly what little sanity that I claim to have left. Is there a place to do so on your site that I'm missing? If not just tell me where and I'll send my gesture to any cause that you wish. Thanks very much again, some day I hope to be able to be of service to a  needy newbie as you have been to me. Happy New Years!!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>490</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2008-09-25 23:06:08</wp:comment_date>
		<wp:comment_date_gmt>2008-09-26 06:06:08</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Always glad to help! :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>486</wp:comment_id>
		<wp:comment_author><![CDATA[Josh]]></wp:comment_author>
		<wp:comment_author_email>jbstohl@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>75.22.171.93</wp:comment_author_IP>
		<wp:comment_date>2008-09-25 15:56:13</wp:comment_date>
		<wp:comment_date_gmt>2008-09-25 22:56:13</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Leonardo,
Thank you for this example.  I just started using the book "Beginning Rails: From Novice to Professional" from Apress, which is based on Rails 1.2.3.  I was checking out the book's website and read the "disclaimer" about some features being changed with Rails 2.0.  I am currently using the InstantRails package that ships with Rails 2.0.2, which I would rather learn than Rails 1.2.3.  This is a big help for a Rails newb, and will be bookmarked.  Thanks again for your assistance.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>499</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.25.77.25</wp:comment_author_IP>
		<wp:comment_date>2008-09-27 03:54:29</wp:comment_date>
		<wp:comment_date_gmt>2008-09-27 10:54:29</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi!

Whenever you change your model, you need to update the interface (view) either by hand or regenerating the scaffold.

Rails scaffold is really intended only for a starting point and should be updated by custom code as soon as possible.

Let me know if u need some help.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>661</wp:comment_id>
		<wp:comment_author><![CDATA[Saurabh]]></wp:comment_author>
		<wp:comment_author_email>sgarg550@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>125.19.77.51</wp:comment_author_IP>
		<wp:comment_date>2008-11-03 05:05:26</wp:comment_date>
		<wp:comment_date_gmt>2008-11-03 12:05:26</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey man,
         Thanks a lot.I was in gr8 mess before as i cudn`t able to scanfold.But your given help was worth cent percent.Keep it up dude.....]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>534</wp:comment_id>
		<wp:comment_author><![CDATA[Mike S]]></wp:comment_author>
		<wp:comment_author_email>mike.sutton@wizewerx.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>79.77.206.166</wp:comment_author_IP>
		<wp:comment_date>2008-10-02 09:23:55</wp:comment_date>
		<wp:comment_date_gmt>2008-10-02 16:23:55</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[dudes, this site rocks - you are all part of the solution, here is my bit =&gt;

if you script/generate scaffold 

then you can safely destroy everything the scaffold created by:

script/destroy scaffold 

cheers
Mike]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>535</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>79.147.28.179</wp:comment_author_IP>
		<wp:comment_date>2008-10-02 11:20:11</wp:comment_date>
		<wp:comment_date_gmt>2008-10-02 18:20:11</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[tks for your bit, Mike! ;)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>906</wp:comment_id>
		<wp:comment_author><![CDATA[leonardoborges.com &raquo; Blog Archive &raquo; Somewhere in between&#8230;]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com/writings/2008/12/29/somewhere-in-between/</wp:comment_author_url>
		<wp:comment_author_IP>208.113.213.109</wp:comment_author_IP>
		<wp:comment_date>2008-12-29 07:30:45</wp:comment_date>
		<wp:comment_date_gmt>2008-12-29 14:30:45</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] the reason for this post is the last comment on my Rails 2.0 scaffold post, quoted [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>743</wp:comment_id>
		<wp:comment_author><![CDATA[absolutinvandrare]]></wp:comment_author>
		<wp:comment_author_email>info@absolutinvandrare.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.absolutinvandrare.com</wp:comment_author_url>
		<wp:comment_author_IP>85.229.202.64</wp:comment_author_IP>
		<wp:comment_date>2008-11-17 16:07:44</wp:comment_date>
		<wp:comment_date_gmt>2008-11-17 23:07:44</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Great work Leonardo. Little advice but big help.

Thanks

www.absolutinvandrare.com]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>914</wp:comment_id>
		<wp:comment_author><![CDATA[comicprophet]]></wp:comment_author>
		<wp:comment_author_email>comicprophet@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.conceptualalchenmy.com</wp:comment_author_url>
		<wp:comment_author_IP>67.183.121.27</wp:comment_author_IP>
		<wp:comment_date>2009-01-07 11:59:53</wp:comment_date>
		<wp:comment_date_gmt>2009-01-07 18:59:53</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Leonardo,

I have found an amazing tutorial that restates the advice that you have given plus gives a completely fleshed out example, so here's my chance to help point some people in the right direction too.
http://fairleads.blogspot.com/2007/12/rails-20-and-scaffolding-step-by-step.html. Thanks again. Eric]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>916</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.2.199.201</wp:comment_author_IP>
		<wp:comment_date>2009-01-08 05:17:23</wp:comment_date>
		<wp:comment_date_gmt>2009-01-08 12:17:23</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks for the addition Eric! :D]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1435</wp:comment_id>
		<wp:comment_author><![CDATA[Nicolas]]></wp:comment_author>
		<wp:comment_author_email>nicolaspbl@yahoo.fr</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>83.206.176.5</wp:comment_author_IP>
		<wp:comment_date>2009-02-25 08:51:03</wp:comment_date>
		<wp:comment_date_gmt>2009-02-25 15:51:03</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Well, that works !

But it's not really easy to use if your table gets 20 ou 30 columns.
scaffold should be able to read 001_create file if exists.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1442</wp:comment_id>
		<wp:comment_author><![CDATA[Alfredo]]></wp:comment_author>
		<wp:comment_author_email>alfredo.prog@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>66.189.173.236</wp:comment_author_IP>
		<wp:comment_date>2009-02-25 22:17:36</wp:comment_date>
		<wp:comment_date_gmt>2009-02-26 05:17:36</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I did exactly what you have in your code, and now there is a message that says:

==2 AddDescriptionToTasks: migrating=====
---add_column(:tasks, :description, :string)
rake aborted!
SQLite3::SQLException: no such table: tasks: ALTER TABLE tasks ADD "description" varchar(255)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1458</wp:comment_id>
		<wp:comment_author><![CDATA[Alex Costa]]></wp:comment_author>
		<wp:comment_author_email>alexandre.psi@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://slackwarebrasil.wordpress.com</wp:comment_author_url>
		<wp:comment_author_IP>190.98.150.248</wp:comment_author_IP>
		<wp:comment_date>2009-02-27 14:29:30</wp:comment_date>
		<wp:comment_date_gmt>2009-02-27 21:29:30</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[thanks for the clue! only then I am able to continue following the "Pragmatic Programmers' agile development with rails" properly.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>3585</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.2.199.201</wp:comment_author_IP>
		<wp:comment_date>2009-05-20 02:19:01</wp:comment_date>
		<wp:comment_date_gmt>2009-05-20 09:19:01</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Glad to have helped :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>3557</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>3557</wp:comment_id>
		<wp:comment_author><![CDATA[Sarma Kolluru]]></wp:comment_author>
		<wp:comment_author_email>sarmaklm@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>69.140.5.234</wp:comment_author_IP>
		<wp:comment_date>2009-05-19 08:01:28</wp:comment_date>
		<wp:comment_date_gmt>2009-05-19 15:01:28</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi,
I am a newbe to RoR. I found this is a really really useful tip. Thanks a lot.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1431</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.2.199.201</wp:comment_author_IP>
		<wp:comment_date>2009-02-25 02:28:41</wp:comment_date>
		<wp:comment_date_gmt>2009-02-25 09:28:41</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[In this case you have 2 options:
You either recreate the migration or add the missing field by hand - which is by far the most common.

Think of scaffolding as a easy place to get started. You will always need to touch it at some point during your project.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1432</wp:comment_id>
		<wp:comment_author><![CDATA[Alfredo]]></wp:comment_author>
		<wp:comment_author_email>alfredo.prog@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>66.189.173.236</wp:comment_author_IP>
		<wp:comment_date>2009-02-25 02:34:13</wp:comment_date>
		<wp:comment_date_gmt>2009-02-25 09:34:13</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I understand I have to update the scaffold manually. I was wondering if you could explain in detail on how to update the scaffold manually]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1425</wp:comment_id>
		<wp:comment_author><![CDATA[Alfredo]]></wp:comment_author>
		<wp:comment_author_email>alfredo.prog@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>66.189.173.236</wp:comment_author_IP>
		<wp:comment_date>2009-02-25 00:55:07</wp:comment_date>
		<wp:comment_date_gmt>2009-02-25 07:55:07</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Can you go in detail on how to add column?]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1427</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.2.199.201</wp:comment_author_IP>
		<wp:comment_date>2009-02-25 01:07:07</wp:comment_date>
		<wp:comment_date_gmt>2009-02-25 08:07:07</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hello alfredo

Would you mind giving more details on what you need?
This line of code:
script/generate scaffold Contact name:string email:string

Is supposed to add the column for you.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1429</wp:comment_id>
		<wp:comment_author><![CDATA[Alfredo]]></wp:comment_author>
		<wp:comment_author_email>alfredo.prog@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>66.189.173.236</wp:comment_author_IP>
		<wp:comment_date>2009-02-25 01:41:49</wp:comment_date>
		<wp:comment_date_gmt>2009-02-25 08:41:49</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[After using this line of code: script/generate scaffold Contact name:string email:string, and you want to add a missing column. I guess my question is the same question that Samedi had about regenerating scaffold.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1436</wp:comment_id>
		<wp:comment_author><![CDATA[Alfredo]]></wp:comment_author>
		<wp:comment_author_email>alfredo.prog@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>66.189.173.236</wp:comment_author_IP>
		<wp:comment_date>2009-02-25 10:07:02</wp:comment_date>
		<wp:comment_date_gmt>2009-02-25 17:07:02</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I am currently working on the depot program, and so far it's working fine, but now I am trying to add a missing column.  I have file called 001_create_admins, and know I have a file called 002_create_add_price which I have manually entered the code:
class CreateAddPrices 8, :scale=&gt;2, :default=&gt;0

      t.timestamps
    end
  end

  def self.down
	  remove_column :products, :price
  end
end

For some reason rake db:migrate does not recognize this file(002_create_add_price), so when I refresh my browser, the changes are not displayed in my web.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>13607</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges: Help stop the IE Money Drain | Software Secret Weapons]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.softwaresecretweapons.com/blog/144/leonardo-borges-help-stop-the-ie-money-drain</wp:comment_author_url>
		<wp:comment_author_IP>74.220.219.119</wp:comment_author_IP>
		<wp:comment_date>2010-09-28 16:50:13</wp:comment_date>
		<wp:comment_date_gmt>2010-09-28 23:50:13</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] Rails 2.0: Scaffold [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Rails 2.0: XML data type and DB2</title>
		<link>http://www.leonardoborges.com/writings/2008/01/02/rails-20-xml-data-type-and-db2/</link>
		<pubDate>Wed, 02 Jan 2008 23:22:20 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2008/01/02/rails-20-xml-data-type-and-db2/</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>[2008/04/30] Update:</strong> The ibm_db gem has been updated to support the new Rails 2.0 style migration. Now you can just use t.xml and it will work. Look <a href="http://rubyforge.org/forum/forum.php?forum_id=24055">here</a> for more info. Thanks to Mario Briggs for pointing me to the update.

---

In my new job we work with XML data natively stored on DB2. I have done some test with Rails and DB2 a few weeks ago and it's pretty interesting, specially the easiness that Rails deals with XML.

We decided to test some new features of DB2 9.5 and I decided to test them with Rails 2.0.

So I created a new Rails app, configured the database.yml to use the <a href="http://db2onrails.com/2007/10/17/ibm_db-gem-updated-to-090/">idm_db</a> gem and fired:

<code>$ rake db:create</code>

The output is nice but, the database isn't there! I suppose it's something with the gem that needs to be updated. But really don't know about it. It just doesn't work. But this will not hold us down. I will just create the database by hand and keep going with my tests.

After that, I created a new model <em>XmlDocument,</em> which has a column named <em>data</em>, of type XML. According to the new migrations syntax, my model's migration would look something similar with this:

<code>class CreateXmlDocuments &lt; ActiveRecord::Migration
def self.up
create_table :xml_documents do |t|
t.xml :data
t.timestamps
end
end</code>

def self.down
drop_table :xml_documents
end
end

Right? Ok, I fired up a terminal and lauched:

<code>$ rake db:migrate</code>

The output? Here it is:

<code>== 3 CreateXmlDocuments: migrating ============================================
-- create_table(:xml_documents)
rake aborted!
undefined method `xml' for #
</code>

Yes, a big nice exception! The new migration syntax doesn't allow you to do <em>t.xml</em>! But please don't ask me why! :p
The solution? Well, although it's weird - imo - , it's also easy. You can mix the new and the old syntax in the same file. So our model's  migration  will now look like this:

<code>class CreateXmlDocuments &lt; ActiveRecord::Migration
def self.up
create_table :xml_documents do |t|
t.column  :data, :xml
t.timestamps
end
end</code>

def self.down
drop_table :xml_documents
end
end

And that's it! We're ready to go! I didn't find anything else different so far, besides what I described here. Hope this helps!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2008-01-02 23:22:20</wp:post_date>
		<wp:post_date_gmt>2008-01-02 23:22:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-20-xml-data-type-and-db2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1209567525]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235447]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>76</wp:comment_id>
		<wp:comment_author><![CDATA[Philip Nelson]]></wp:comment_author>
		<wp:comment_author_email>teamdba@scotdb.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.scotdb.com</wp:comment_author_url>
		<wp:comment_author_IP>194.159.178.180</wp:comment_author_IP>
		<wp:comment_date>2008-01-03 10:01:15</wp:comment_date>
		<wp:comment_date_gmt>2008-01-03 10:01:15</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Maybe worth waiting until the IBM team give us an ibm_db which supports Rails 2.0 : which they are currently working on as top priority.

The "t.xml" is new Rails 2.0 syntax.

If you use the older syntax and specify the data type as xml everything will work fine.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>77</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardo@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://</wp:comment_author_url>
		<wp:comment_author_IP>201.19.109.151</wp:comment_author_IP>
		<wp:comment_date>2008-01-03 11:08:05</wp:comment_date>
		<wp:comment_date_gmt>2008-01-03 11:08:05</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Yes I heard they are working on it.

And about the older syntax, that's exactly what I've don in the end of the article! ;)

Tks]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>78</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>201.19.121.136</wp:comment_author_IP>
		<wp:comment_date>2008-02-24 13:45:00</wp:comment_date>
		<wp:comment_date_gmt>2008-02-24 13:45:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey man!

I'm glad it helped you. Since you're working with IBM DB2, you might like to know that there is a bug with IBM_DB loading XML data from fixture files. Did u hit it yet?  If you want, drop a message, we can discuss it.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>79</wp:comment_id>
		<wp:comment_author><![CDATA[Nuno Job]]></wp:comment_author>
		<wp:comment_author_email>nunojobpinto@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://nunojob.wordpress.com</wp:comment_author_url>
		<wp:comment_author_IP>89.155.231.132</wp:comment_author_IP>
		<wp:comment_date>2008-02-24 04:24:42</wp:comment_date>
		<wp:comment_date_gmt>2008-02-24 04:24:42</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Excellent :) I was looking for this exact thing.

And yes IBM_DB has to be changed. You have to disable support for schemas and I had to hardcode my username in the sources because it doesn't accept a username 'null' :X That's my linux username, i'm lame :P

Anyway great fix. I was doubting this would work, but it did :)

Will add your blog to my feeds :)

Have a nice week]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>80</wp:comment_id>
		<wp:comment_author><![CDATA[links for 2008-02-24 &laquo; .$null@dscape/08]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://nunojob.wordpress.com/2008/02/24/links-for-2008-02-24/</wp:comment_author_url>
		<wp:comment_author_IP>72.233.2.49</wp:comment_author_IP>
		<wp:comment_date>2008-02-24 19:19:17</wp:comment_date>
		<wp:comment_date_gmt>2008-02-24 19:19:17</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] Rails 2.0: XML data type and DB2 : leonardoborges.com (tags: rails db2 fix xml purexml ibm_db) [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>81</wp:comment_id>
		<wp:comment_author><![CDATA[Mario Briggs]]></wp:comment_author>
		<wp:comment_author_email>mario.briggs@in.ibm.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>59.145.136.1</wp:comment_author_IP>
		<wp:comment_date>2008-04-30 14:53:44</wp:comment_date>
		<wp:comment_date_gmt>2008-04-30 14:53:44</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[The ibm_db gem has been updated to support the â€œt.xmlâ€ syntax - http://rubyforge.org/forum/forum.php?forum_id=24055]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>82</wp:comment_id>
		<wp:comment_author><![CDATA[Mario Briggs]]></wp:comment_author>
		<wp:comment_author_email>mario.briggs@in.ibm.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>59.145.136.1</wp:comment_author_IP>
		<wp:comment_date>2008-07-07 05:01:32</wp:comment_date>
		<wp:comment_date_gmt>2008-07-07 05:01:32</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[&gt;&gt;
you might like to know that there is a bug with IBM_DB loading XML data from fixture files
&lt;&lt;

This was fixed a couple of weeks ago. http://rubyforge.org/forum/forum.php?forum_id=25464
Thanks to Roderick Van Domburg for highlighting how fixtures are handled differently from Model.save]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>DBUnit and Hibernate</title>
		<link>http://www.leonardoborges.com/writings/2008/01/17/dbunit-and-hibernate/</link>
		<pubDate>Thu, 17 Jan 2008 18:48:16 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

		<category domain="tag"><![CDATA[Testing]]></category>

		<category domain="tag" nicename="testing"><![CDATA[Testing]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2008/01/17/dbunit-and-hibernate/</guid>
		<description></description>
		<content:encoded><![CDATA[I never paid too much attention on testing database stuff. While working with java, the closest I got to something <em>workable </em>was using the test case abstractions provided by the Spring framework. It ensures that each test method runs in its own transaction that is rolled back after the test's execution.

Fair enough. I used the <a href="http://junit.sourceforge.net/javadoc/junit/framework/TestCase.html#setUp()">setUp()</a> method on my <a href="http://junit.sourceforge.net/javadoc/junit/framework/TestCase.html">TestCase</a> to configure some records so I could work with them, removing all of them in the <a href="http://junit.sourceforge.net/javadoc/junit/framework/TestCase.html#tearDown()">tearDown()</a> method. It was quite simple and worked.

But I always felt something strange with this solution. First of all, I had to add another framework just for that. - Actually I was using spring for dependency injection, but if I wasn't, it wouldn't be a nice option. And another thing that bothered me, is that you cannot guarantee that your database is in a known state.

After I started to work with Ruby - and Rails - I discovered the <a href="http://manuals.rubyonrails.com/read/chapter/26">testing fixtures</a>. It is a really nice way to set up your testing data without having to worry about your database state. - If you don't know what I'm talking about, follow the above link first.

Then I received a message from a co-worker saying he was having some trouble in using <a href="http://www.dbunit.org/">DBUnit</a> with Hibernate, and asked for some help. I've heard of DBUnit before but never tried it myself. It was a very good opportunity to take a better look into it.

The basic idea after all is very similar to that of the Rails Fixtures: You have some sort of external file - XML in this case - where you set up the testing data. So the framework takes care of erasing the database, inserting your test data and returning it to its original state.

So far so good, DBUnit's default Classes works with <a href="http://www.dbunit.org/apidocs/org/dbunit/JdbcBasedDBTestCase.html">JDBC,</a> <a href="http://www.dbunit.org/apidocs/org/dbunit/DataSourceBasedDBTestCase.html">DataSources</a> and <a href="http://www.dbunit.org/apidocs/org/dbunit/JndiBasedDBTestCase.html">JNDIDatasources</a>, but not with Hibernate.  The effort to put them working together is minimal and is documented in their web site.

I decided to share how this can be done with hibernate and in the end, you would have a test case similar to this one:

<!--more-->

[java]
public class DBUnitTest extends TestCase {
private Session s;
private FileInputStream is;
private IDatabaseConnection conn;
private IDataSet dataSet;

public DBUnitTest() {
try {
s = HibernateUtil.getSession();
is = new FileInputStream("task-sample-data.xml");
conn = new DatabaseConnection(s.connection());
dataSet = new FlatXmlDataSet(is);
} catch (Exception e) {
e.printStackTrace();
}
}

@Override
protected void setUp() throws Exception {
super.setUp();
try {
DatabaseOperation.INSERT.execute(conn, dataSet);
} catch (Exception e) {
e.printStackTrace();
}

}

public void testTrue() {
List<task> tasks = s.createQuery("from Task").list();
for (Task task : tasks) {
System.out.println(task.getId());
System.out.println(task.getDetails());
}
assertTrue(true);
}</task>

@Override
protected void tearDown() throws Exception {
super.tearDown();
try {
DatabaseOperation.DELETE_ALL.execute(conn, dataSet);
} catch (Exception e) {
e.printStackTrace();
}
}
}
[/java]

Note that you don't need to extend any DBUnit class. You extend only Junit's plain old TestCase. In its constructor I set up everything I need: The session factory (through the HibernateUtil), and use it to get a session's connection, needed for DBUnit.

This example is quite simple and I decided to keep it like this to show everything working together. But you would more likely make this class abstract with an abstract method, say getDataSet() so your subclasses wouldn't have to worry with DBUnit at all.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2008-01-17 18:48:16</wp:post_date>
		<wp:post_date_gmt>2008-01-17 18:48:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dbunit-and-hibernate</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235465]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>83</wp:comment_id>
		<wp:comment_author><![CDATA[Eric]]></wp:comment_author>
		<wp:comment_author_email>adiscgolfer@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>70.234.168.157</wp:comment_author_IP>
		<wp:comment_date>2008-01-21 02:52:35</wp:comment_date>
		<wp:comment_date_gmt>2008-01-21 02:52:35</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Once again another very useful post.  Thanks Leo!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>84</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2008-01-21 15:22:04</wp:comment_date>
		<wp:comment_date_gmt>2008-01-21 15:22:04</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks man!

Always good to hear I was useful to someone else.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>86</wp:comment_id>
		<wp:comment_author><![CDATA[Heiko]]></wp:comment_author>
		<wp:comment_author_email>heiko.spannaus@gmx.net</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>85.180.15.43</wp:comment_author_IP>
		<wp:comment_date>2008-04-08 21:16:40</wp:comment_date>
		<wp:comment_date_gmt>2008-04-08 21:16:40</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Leo,

thanks for posting this example. I just started playing around with hibernate and wondered, how to  make DBUnit use the db-connection of hibernate.  After reading your example, I made it work in 10 minutes.

Greetings from Germany]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>87</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>201.19.213.59</wp:comment_author_IP>
		<wp:comment_date>2008-04-08 21:22:23</wp:comment_date>
		<wp:comment_date_gmt>2008-04-08 21:22:23</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hello Heiko!

I'm glad it helped u!

C u around!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>88</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>79.147.24.232</wp:comment_author_IP>
		<wp:comment_date>2008-06-01 10:06:44</wp:comment_date>
		<wp:comment_date_gmt>2008-06-01 10:06:44</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks!

Problems with a plugin in wordpress...

;)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>89</wp:comment_id>
		<wp:comment_author><![CDATA[Eric]]></wp:comment_author>
		<wp:comment_author_email>eric@vialle.org</wp:comment_author_email>
		<wp:comment_author_url>http://blog.vialle.org</wp:comment_author_url>
		<wp:comment_author_IP>83.114.54.85</wp:comment_author_IP>
		<wp:comment_date>2008-05-31 20:25:53</wp:comment_date>
		<wp:comment_date_gmt>2008-05-31 20:25:53</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[be careful: line 36  ;)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>93</wp:comment_id>
		<wp:comment_author><![CDATA[Christian]]></wp:comment_author>
		<wp:comment_author_email>extern.gieche@ids.allianz.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>194.127.8.18</wp:comment_author_IP>
		<wp:comment_date>2008-07-09 13:06:52</wp:comment_date>
		<wp:comment_date_gmt>2008-07-09 13:06:52</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi,

this is exactly what I was looking for.
But I still can't figure out the HibernateUtil part.

I couldn't find it anywhere.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>94</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.7.35.7</wp:comment_author_IP>
		<wp:comment_date>2008-07-09 17:02:50</wp:comment_date>
		<wp:comment_date_gmt>2008-07-09 17:02:50</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Christian!

Thanks for the comment.

The HibernateUtil class is just a wrapper class for the common hibernate operations. Like getting a session, loading and saving objects and so on.

It is usually a class with static methods to help on this operations.

Please tell me if u need any more help on that.

Regards]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4321</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.2.199.201</wp:comment_author_IP>
		<wp:comment_date>2009-06-26 01:58:21</wp:comment_date>
		<wp:comment_date_gmt>2009-06-26 08:58:21</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Ajith.

I'm not sure I understood your question. Have you tried the code I shared? Did you find any problems running it?]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4315</wp:comment_id>
		<wp:comment_author><![CDATA[Ajith]]></wp:comment_author>
		<wp:comment_author_email>ajithjacob05@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>202.88.237.104</wp:comment_author_IP>
		<wp:comment_date>2009-06-25 21:09:11</wp:comment_date>
		<wp:comment_date_gmt>2009-06-26 04:09:11</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi,

This was really helpfull...

But Hibernate will return Objects not datasets. How do I convert that Objects to Datasets to assert it true or false with xml datasets.

Regards
Ajith]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>7927</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2010-01-28 02:56:29</wp:comment_date>
		<wp:comment_date_gmt>2010-01-28 09:56:29</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Edwin,
Hmm I haven't actually tested this setup with Spring but from the top of my head I'd guess that doing something like this could work:

<pre lang="java">
public class DBUnitTest extends TestCase {
//Here you could inject the Session Factory
@Autowired
private SessionFactory sessionFactory;

  public DBUnitTest() {
    try {
      s = sessionFactory.getSession();
      is = new FileInputStream(”task-sample-data.xml”);
      conn = new DatabaseConnection(s.connection());
      dataSet = new FlatXmlDataSet(is);
    } catch (Exception e) {
      e.printStackTrace();
    }
}

</pre>


Could your try that and let me know?

Thanks for stopping by.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>7925</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>7925</wp:comment_id>
		<wp:comment_author><![CDATA[EDH]]></wp:comment_author>
		<wp:comment_author_email>edwin.dhondt@hp.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>94.224.46.21</wp:comment_author_IP>
		<wp:comment_date>2010-01-28 01:31:14</wp:comment_date>
		<wp:comment_date_gmt>2010-01-28 08:31:14</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[How would you obtain a session using not only DbUnit and hibernate, but DbUnit, Spring and Hibernate ?]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>OpenID</title>
		<link>http://www.leonardoborges.com/writings/2008/02/18/openid/</link>
		<pubDate>Mon, 18 Feb 2008 15:59:50 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2008/02/18/openid/</guid>
		<description></description>
		<content:encoded><![CDATA[I think I've been really lucky lately. In my new job I'm getting to work with many interesting things and <a href="http://openid.net/">OpenID</a> is just one of them.

We are investing high in Ruby on Rails and we have now a few internal applications in development stages. Our manager wanted the ability to let people log in to our rails applications(for now) using their OpenID accounts.

It was a funny task, as I knew very little about OpenID. The idea actually is really good. Instead of creating a new user account on each new service/site you'd like to subscribe to, you create a single user account in a OpenID provider - like <a href="https://www.myopenid.com/">MyOpenID</a> - and use this identity to authenticate yourself in the services/sites that support this protocol.

What do we earn from that? Well, in my opinion, we can get a couple of benefits:

- You don't need to memorize 723 logins and 723 passwords (if you really care about creating different passwords for all of your user accounts)

- You don't authenticate yourself to the service you're attempting to use. This service actually asks to your provider if your identity is valid, and you authenticate yourself there. Nowhere else.

I strongly recommend you visit the <a href="http://openid.net/">OpenID</a> to understand more about it.

But, back to the problem, we needed to put it working in a rails app. And that's when I found the <a href="http://openidenabled.com/ruby-openid/">ruby-openid</a> library, provided by <a href="http://openidenabled.com/">OpenID Enabled</a>.

It is a complete library, really well documented that provides an abstraction layer both for consumer and server applications.

My first step was to develop the consumer. That's what you need if you are going to provide your users with OpenID authentication in your web site. The ruby-openid library comes with several samples that really helped me out here. They were developed using <a href="http://rubyonrails.org/">Ruby On Rails</a> and are a really good start point.

After this step, I was asked to evaluate the possibility of being a OpenID provider. At first I thought it would be a really complicated task, but again this ruby library had a great example of a simple provider. The drawback is that the samples were developed in an older version of Rails ( &lt; 2.x ) . So I had to freeze the Rails version to 1.2.5 so I could run the provider sample code.

I am now working on porting this code to Rails 2.x, into one of our applications and it's been flowing well so far. Just wanted to share this library for those of you trying something similar. It is really worth a look.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2008-02-18 15:59:50</wp:post_date>
		<wp:post_date_gmt>2008-02-18 15:59:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>openid</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235513]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>95</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>201.19.121.136</wp:comment_author_IP>
		<wp:comment_date>2008-02-24 13:46:01</wp:comment_date>
		<wp:comment_date_gmt>2008-02-24 13:46:01</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hahaha Actually I do get paid.  Don't know about it being the best but I do like it! ;)

Btw, the provider is done and working! ;)

tks for the comment.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>96</wp:comment_id>
		<wp:comment_author><![CDATA[Nuno Job]]></wp:comment_author>
		<wp:comment_author_email>nunojobpinto@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://nunojob.wordpress.com</wp:comment_author_url>
		<wp:comment_author_IP>89.155.231.132</wp:comment_author_IP>
		<wp:comment_date>2008-02-24 04:27:45</wp:comment_date>
		<wp:comment_date_gmt>2008-02-24 04:27:45</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[You have the best job in the world :P you get paid for this? :PP

I'm doing basically the same has you, but as my duties as working as a db2 student ambassador.

regards]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>QCon 2008: London</title>
		<link>http://www.leonardoborges.com/writings/2008/03/07/qcon-2008-london/</link>
		<pubDate>Fri, 07 Mar 2008 07:42:43 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Conferences]]></category>

		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>

		<category domain="tag"><![CDATA[Conferences]]></category>

		<category domain="tag" nicename="conferences"><![CDATA[Conferences]]></category>

		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2008/03/07/qcon-2008-london/</guid>
		<description></description>
		<content:encoded><![CDATA[Next week I'll be at <a href="http://qcon.infoq.com/london/">QCon</a>, in London, so if any of you are going to the conference and would like meet up for a couple of beers and a tech talk, please don't hesitate to drop a message.

For those of you who have never heard of QCon before, it is a really nice event to play along with some of the most popular names in the software engineering community. This year's conference features people like <a href="http://www.martinfowler.com/">Martin Fowler</a>, <a href="http://www.nealford.com/">Neal Ford</a>, <a href="http://en.wikipedia.org/wiki/Erich_Gamma">Erich Gamma</a> and much more.

So stay tuned, the conference takes place during the whole week and I'll try and keep you posted about what's happening over there.

C u in London!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date>2008-03-07 07:42:43</wp:post_date>
		<wp:post_date_gmt>2008-03-07 07:42:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>qcon-2008-london</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
							</item>
		<item>
		<title>QCon 2008: Domain Specific Languages</title>
		<link>http://www.leonardoborges.com/writings/2008/03/10/qcon-2008-domain-specific-languages/</link>
		<pubDate>Mon, 10 Mar 2008 19:07:54 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Conferences]]></category>

		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>

		<category domain="tag"><![CDATA[Conferences]]></category>

		<category domain="tag" nicename="conferences"><![CDATA[Conferences]]></category>

		<category><![CDATA[DSL]]></category>

		<category domain="category" nicename="dsl"><![CDATA[DSL]]></category>

		<category domain="tag"><![CDATA[DSL]]></category>

		<category domain="tag" nicename="dsl"><![CDATA[DSL]]></category>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2008/03/10/qcon-2008-domain-specific-languages/</guid>
		<description></description>
		<content:encoded><![CDATA[Today was the first day of the conference and it started with a tutorial about DSL's with <a href="http://www.martinfowler.com">Martin Fowler</a>, <a href="http://www.nealford.com/">Neal Ford</a> and Rebecca Parsons. We also had as attendants <a href="http://ola-bini.blogspot.com/">Ola Bini</a>, core developer of JRuby, and others. My expectations were pretty high and the presentation didn't let me down. I'll try to put here toghether my impressions and some notes I took while I was there.

Marting Fowler started discussing what DSL's are and giving some examples that many of us use in our day to day Job. Like the XML configuration files in the Java world. It is a kind of DSL, it has it's own keywords and syntax in order to express some information that will be used , for instance, to configure an underlying framework.

The problem with XML is that it becomes hard to see the overall behavior behind it. It's not very fluent to understand the purpose of an XML file just by looking at it for the first time. There is too much "noise". Things that get into the way of the readability. - <a href="http://www.yaml.org/">YAML</a> files are an much more readable alternatives to XML.

The same happens with a standard framework api code.  Let's take for instance a sample API configuration code written in Java to tackle the domain of hotel reservations. A framework like this could have the following implementation:

<code>
HotelService hotelService = new HotelService();
PersonService personService = new HotelService();</code>

Hotel hotel = hotelService.findById(1);
Person guest = personService.findById(10) ;

Reservation reservation = new Reservation() ;
reservation.setFrom("2008-03-10") ;
reservation.setTo("2008-03-14");
reservation.setGuests(new Person[]{guest});

hotelService.book(hotel, reservation);
Of course implementations of this simple example may vary but we can see here some of the readability problems. One approach we could use for that is to develop a Fluent Interface to wrap this API. This was one of the techniques explored during the tutorial and the actual fluent interface could now look somewhat similar with this:

<code>
new Hotel(1)
.book()
.forGuests({
person.find(10)
})
.rooms(1)
.from("2008-03-10")
.to("2008-03-10");
</code>

Much more readable, huh?  One of the main benefits of using DSL's they highlighted in the tutorial is the simplicity of code you can achieve. You can actually show this code to a business person and he can understand it.  This is a kind of <a href="http://www.martinfowler.com/bliki/InternalDslStyle.html">internal DSL</a>.

But there is still a bit of noise in this code. The the parenthesis which are not always desirable, and the use of double quotes for dates. But, this is Java code, and Java doesn't give too much room for you on the DSL subject. Here was when the speakers changed their focus a bit to Ruby. It's dynamic nature and metaprogramming techniques provides a powerful flexibility that allows for a looser syntax.

So in ruby the previous interface could look like this now:

<code>
Hotel.find(1) .book(1.room).forGuests {
Person.find(10)
}.from(march.10.2008).to(march.10.2008)
</code>

We got rid of the double quotes and the code looks more fluent, like a normal english sentence. I doubt a business guy woudn't understand what this code is doing. With this, we can get closer to the business guys, with a common vocabulary, and fill the gap between us.

This is just one of the ways we could have written this code and is not the actual example used in the tutorial.  The syntax also really depends on how readable you wanna make your code. I'll provide those later when they release the digital format of the presentation.

So one of the flows that the development of an internal DSL can get is to build a framework and define the DSL on top of it. But we should also keep in mind that DSL's shouldn't be general purpose programming languages. They should be created to tackle a specific kind of domain problem, so we would have a whole system made of small DSL's.

Another interesting subject that was touched is testing. How do you test DSL's?
The suggested approach, and that I think is quite reasonable, is to have separate tests for the underlying framework and another to test the DSL and its parser you can assure you have the expected behaviour of both parts.

This is really just a summary of my thoughts and of what happened there. I'm not going into too much details right now but if you found something too abstract - and it is! ;) - feel free to ask details. I'll be more than happy to help.

This is definetly an interesting subject and now I'll head to play more with all that. :)

PS; This is not the whole presentation, just the best of it from my stand point. Other subjects include External DSL's which can actually involve you coding Lexers, Parsers and Compilers. It's usually not worth the hassle. And it's too complicated anyway, that's why I left it out from this post.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2008-03-10 19:07:54</wp:post_date>
		<wp:post_date_gmt>2008-03-10 19:07:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>qcon-2008-domain-specific-languages</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235521]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>130</wp:comment_id>
		<wp:comment_author><![CDATA[Mark Dalgarno]]></wp:comment_author>
		<wp:comment_author_email>mark@software-acumen.com</wp:comment_author_email>
		<wp:comment_author_url>http://blog.software-acumen.com/</wp:comment_author_url>
		<wp:comment_author_IP>83.104.37.114</wp:comment_author_IP>
		<wp:comment_date>2008-07-26 23:42:22</wp:comment_date>
		<wp:comment_date_gmt>2008-07-27 06:42:22</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Leonardo,

I organise an annual conference around DSLs and other model-driven software development approaches.

The slides for this year's event are available at:
http://www.codegeneration.net/conference/slides.php

We also did a couple of audio-recorded sessions at last year's conference. See http://www.codegeneration.net/cg2009/previoushighlights.php

Next year's event will run in June 2009 in Cambridge, we had folks from Australia, Japan and Uruguay there so Spain would be a relatively short trip :-)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>115</wp:comment_id>
		<wp:comment_author><![CDATA[Eric]]></wp:comment_author>
		<wp:comment_author_email>adiscgolfer@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>70.234.175.51</wp:comment_author_IP>
		<wp:comment_date>2008-03-11 02:19:49</wp:comment_date>
		<wp:comment_date_gmt>2008-03-11 02:19:49</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks for the overview Leo, very well done.

Did you see the infoq.com guys there filming?  Seems like someone else does the filming for them, but I can't remember their names.  I always enjoy seeing these presentations on their site.  Looking forward to this one.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Euruko 2008: European RubyConf, Prague</title>
		<link>http://www.leonardoborges.com/writings/2008/03/25/euruko-2008-european-rubyconf-prague/</link>
		<pubDate>Tue, 25 Mar 2008 15:36:46 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Conferences]]></category>

		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>

		<category domain="tag"><![CDATA[Conferences]]></category>

		<category domain="tag" nicename="conferences"><![CDATA[Conferences]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2008/03/25/euruko-2008-european-rubyconf-prague/</guid>
		<description></description>
		<content:encoded><![CDATA[On friday I'll be heading Prague for the <a href="http://www.euruko2008.org/">European RubyConf</a>.

Anyone is going? :)

Almost 300 attendees already registered for the event. And a few very interesting people will be speaking there like <a href="http://en.wikipedia.org/wiki/Yukihiro_Matsumoto">Matz</a> and <a href="http://www.loudthinking.com/">DHH</a> (this one, through skype).

Besides that, the organization staff is scheduling 2 parties, friday and saturday, for the attendees.

Networking comes to mind, doesn't it? I think it will be a great opportunity to meet interesting and bright people.

So, see u in Prague!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2008-03-25 15:36:46</wp:post_date>
		<wp:post_date_gmt>2008-03-25 15:36:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>euruko-2008-european-rubyconf-prague</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:comment>
		<wp:comment_id>120</wp:comment_id>
		<wp:comment_author><![CDATA[Euruko 2008: Materials available : leonardoborges.com]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://leonardoborges.com/writings/2008/05/14/euruko-2008-materials-available/</wp:comment_author_url>
		<wp:comment_author_IP>75.126.194.2</wp:comment_author_IP>
		<wp:comment_date>2008-05-14 18:26:56</wp:comment_date>
		<wp:comment_date_gmt>2008-05-14 18:26:56</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] some of you know I went to the European Ruby Conf in Prague, this [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Why I like ruby #0 (...or Ruby: The language of the lazy programmer)</title>
		<link>http://www.leonardoborges.com/writings/2008/04/01/why-i-like-ruby-or-ruby-the-language-of-the-lazy-programmer/</link>
		<pubDate>Tue, 01 Apr 2008 22:10:15 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<category><![CDATA[Why I Like Ruby]]></category>

		<category domain="category" nicename="why-i-like-ruby"><![CDATA[Why I Like Ruby]]></category>

		<category domain="tag"><![CDATA[Why I Like Ruby]]></category>

		<category domain="tag" nicename="why-i-like-ruby"><![CDATA[Why I Like Ruby]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2008/04/01/why-i-like-ruby-or-ruby-the-language-of-the-lazy-programmer/</guid>
		<description></description>
		<content:encoded><![CDATA[This is quite funny. A friend, Perl addicted, is now learning Ruby. He really enjoys the language but made a interesting observation: Ruby is a language for lazy programmers!

Well, I have to agree... You know, I love saving keystrokes and achieving more by writing less. And this is so true with Ruby.

Let me give a really simple example, comparing with java - don't get me wrong... I love java, specially the platform, but it fits well here since I've always been a Java guy.

Imagine you have a Phone class with the attributes number and type, which can indicate whether the phone is a land line or a mobile phone. Then you got an array filled with phone classes and you want to narrow it by creating a new array only with mobile phones.

In Java, such a class could look very much like this:
<pre>
public class Phone {
  private String number;
  private String type;</code>

  public String getNumber() {
    return number;
  }
  public void setNumber(String number) {
    this.number = number;
  }
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }
}
</pre>

Quite simple, isn't it? But we are telling the compiler many things we actually shouldn't need to. This class is a java bean and as such, among other things, it needs a pair of getters and setters for each of its attributes.

Now, on with our example, the same class, in ruby, looks like this:

<pre>
class Phone
  attr_accessor :number, :type
end
</pre>

Yeah, I know the feeling. This class has exactly what we need: the two attributes with its own pairs of getters and setters each. But we didn't need to inform it in the verbose way Java has teached us. Cleaner, period.

Now to the code that actually returns the new array containing only mobile numbers. In java, we can do it in two different ways.
Using an ArrayList:

<pre>
//Create two phone objects, one land line and one mobile
...
// Add them to an array
ArrayList<phone> phones = new ArrayList<phone>();
phones.add(land);
phones.add(mobile);

//Return an array only with mobile numbers:
private static ArrayList<phone> selectMobilePhones(ArrayList<phone> phones) {

  ArrayList&lt;Phone&gt; mobiles = new ArrayList&lt;Phone&gt;();

  for (Phone phone : phones) {
    if (phone.getType().equals("mobile")) {
      mobiles.add(phone);
    }
  }
  return mobiles;
}
</pre>

Or using ordinary arrays:

<pre>
// Assume the same phone objects here
...
//Add them to the array
Phone[] phones = new Phone[]{land, mobile};

//Return an array only with mobile numbers:
Phone[] mobiles = new Phone[a.length];

for (int i = 0; i &lt; a.length; i++) {

  if (a[i].getType().equals("mobile")) {
    mobiles[i] = a[i];
  }
}
</pre>

And you're good to go. Actually this code with an ArrayList here only looks good thanks to generics. But this is another matter. Let's take a look at the ruby code that accomplishes de same task:

<pre>
//Create two phone objects, one land line and one mobile
...
//Add them to an array
phones = [land, mobile]</code>

//Return an array only with mobile numbers:
mobiles = phones.select { |phone|
   phone.type == "mobile"
}
</pre>

See the difference? Java is a great language but too verbose at times. This is a really simple example but if you take the same principle to a bigger app... yeah, you see where I'm going.

The bottom line... Ruby may be the language of the lazy programmer, as my friend pointed out. But I don't mind being called lazy as long as I can type less and be more productive. Do you? :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2008-04-01 22:10:15</wp:post_date>
		<wp:post_date_gmt>2008-04-01 22:10:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-i-like-ruby-or-ruby-the-language-of-the-lazy-programmer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1218113942]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235560]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>121</wp:comment_id>
		<wp:comment_author><![CDATA[Tiago Melo]]></wp:comment_author>
		<wp:comment_author_email>tiagoharris@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>201.7.186.73</wp:comment_author_IP>
		<wp:comment_date>2008-04-02 16:36:56</wp:comment_date>
		<wp:comment_date_gmt>2008-04-02 16:36:56</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Great post, Leo!

I'm learning ruby now and its simplicity is really impressing!

Imagine if I have an array with numbers and I want to select only the pair ones. with ruby it's easy and painless!

a = [1,2,3,4,5]
pairValues = a.select{|v| v%2==0}

How funny is that?

After a few months of resistence, I'm finally getting seduced by the beauty and simplicity of Ruby!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>QCon 2008: slides available</title>
		<link>http://www.leonardoborges.com/writings/2008/04/04/qcon-2008-slides-available/</link>
		<pubDate>Fri, 04 Apr 2008 12:09:41 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Conferences]]></category>

		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>

		<category domain="tag"><![CDATA[Conferences]]></category>

		<category domain="tag" nicename="conferences"><![CDATA[Conferences]]></category>

		<category><![CDATA[JRuby]]></category>

		<category domain="category" nicename="jruby"><![CDATA[JRuby]]></category>

		<category domain="tag"><![CDATA[JRuby]]></category>

		<category domain="tag" nicename="jruby"><![CDATA[JRuby]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2008/04/04/qcon-2008-slides-available/</guid>
		<description></description>
		<content:encoded><![CDATA[Most of last QCon's presentations are available for download <a href="http://jaoo.dk/london-2008/schedule">here</a>.

Highlights to Ola Bini's on <a href="http://jaoo.dk/london-2008/file?path=/qcon-london-2008/slides/OlaBini_JRuby_Power_on_the_JVM.pdf">JRuby(pdf)</a> and Randy Shoup's on  <a href="http://jaoo.dk/london-2008/file?path=/qcon-london-2008/slides/RandyShoup_eBaysArchitecturalPrinciples.pdf">eBay's architectural principles(pdf)</a>.

And while we're talking about JRuby, it's impressive how it's becoming a recurrent and big subject. Fast. It had its own small space at big event like QCon and in the last Euruko in Prague, we had a presentation by the JRuby Core Developers <a href="http://headius.blogspot.com/">Charles Nutter</a> and <a href="http://www.bloglines.com/blog/ThomasEEnebo">Thomas Enebo</a>.

Big companies are sponsoring JRuby's development indirectly or directly, like <a href="http://www.sun.com">Sun</a>. And other big companies are endorsing its production ready state, like <a href="http://www.oracle.com">Oracle</a>, which has a publicly available website developed with JRuby On Rails.

It's past the time to give it a serious try...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2008-04-04 12:09:41</wp:post_date>
		<wp:post_date_gmt>2008-04-04 12:09:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>qcon-2008-slides-available</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235567]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>122</wp:comment_id>
		<wp:comment_author><![CDATA[JRuby + DB2 + xQuery == bug? : leonardoborges.com]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://leonardoborges.com/writings/2008/04/07/jruby-db2-xquery-bug/</wp:comment_author_url>
		<wp:comment_author_IP>75.126.194.2</wp:comment_author_IP>
		<wp:comment_date>2008-04-07 23:43:50</wp:comment_date>
		<wp:comment_date_gmt>2008-04-07 23:43:50</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] I told in my last post, it was time to give JRuby a serious try. So I took one of our rails projects at work and decided [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>JRuby + DB2 + xQuery == bug?</title>
		<link>http://www.leonardoborges.com/writings/2008/04/07/jruby-db2-xquery-bug/</link>
		<pubDate>Mon, 07 Apr 2008 23:43:47 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[JRuby]]></category>

		<category domain="category" nicename="jruby"><![CDATA[JRuby]]></category>

		<category domain="tag"><![CDATA[JRuby]]></category>

		<category domain="tag" nicename="jruby"><![CDATA[JRuby]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2008/04/07/jruby-db2-xquery-bug/</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Update</strong>: Follow up link to this issue on JRuby's Jira, <a href="http://jira.codehaus.org/browse/JRUBY-2430">here</a>

As I told in my last <a href="http://leonardoborges.com/writings/2008/04/04/qcon-2008-slides-available/">post</a>, it was time to give JRuby a serious try. So I took one of our rails projects at work and decided to migrate it to JRuby and see what happens.

We heavily use the XML capabilities of DB2 and this was a huge problem. Every query would work just fine through the activerecord-jdbc-adapter - part of the <a href="http://rubyforge.org/projects/jruby-extras">JRuby Extras</a> . But every <strong>X</strong>query would gracefully <strong>fail</strong>!

After some debugging I got stuck and decided to get JRuby and activerecord-jdbc-adapter's source to see what was happening.

As I could see, it has a bug -in my opinion - at the java part of the code. The jdbc-adapter is a bridge to allow Active Record to talk with databases through native JDBC drivers, so it's normal that we do have a java part here. At this point, what the code does is to inspect the sql statement sent from ruby and decide if it's a select, update or insert.

I fixed the problem and submitted a <a href="http://rubyforge.org/tracker/index.php?func=detail&amp;aid=19340&amp;group_id=2014&amp;atid=7859">patch</a> to rubyforge. I'm not sure if it's the best solution or not, but now I got the xQueries working just fine.

I'd love to hear from people with similar environments whether this patch works for you or not. I'm sure I didn't try every possibility.

If you wanna try it, just drop me a message (e-mail in the <a href="http://leonardoborges.com/writings/about/">About</a> page) and I can send the pre-compiled jar file - for activerecord-jdbc-0.8

You can also just check out the code and compile yourself. ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2008-04-07 23:43:47</wp:post_date>
		<wp:post_date_gmt>2008-04-07 23:43:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jruby-db2-xquery-bug</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1225400335]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[247243422]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Time to reveal</title>
		<link>http://www.leonardoborges.com/writings/2008/04/08/time-to-reveal/</link>
		<pubDate>Tue, 08 Apr 2008 00:42:37 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2008/04/08/time-to-reveal/</guid>
		<description></description>
		<content:encoded><![CDATA[Some of you may know. Some of you may not. Some of you may find weird. And most of you probably have no idea of what I'm talking about but the thing is: <strong>This is a year of big changes for me</strong>.

I've been hired by <a href="http://www.miraiespana.com/">Mirai</a>, a Spanish company located in Madrid, to work as a Software Engineer. Yes, <strong>it does</strong> mean I'll be moving there. Sooner than later.

Last Friday I've received the great news that my work permit has been approved so I can now request my visa in my hometown and move to Madrid, what will probably happen by the end of this month or the beginning of May.

This post probably explain something to some people. And the bottom line is that this whole story means a great step on my career and for those of you that have been following my posts, that's probably clear.

Because of that I was able to meet wonderful people , learn a bunch of new stuff and be present in important events such as <a href="http://jaoo.dk/london-2008/conference/">QCon 2008</a> in London and <a href="http://www.euruko2008.org/">Euruko 2008</a> in Prague.

That's it for now. I'll keep you posted about my new endeavor.

I'm really excited about this chance and I invite you all for a beer or two either in RioÂ  or Madrid - Just let me know your preference... :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date>2008-04-08 00:42:37</wp:post_date>
		<wp:post_date_gmt>2008-04-08 00:42:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>time-to-reveal</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235573]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>123</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Pereira]]></wp:comment_author>
		<wp:comment_author_email>lp_pereira@yahoo.com.br</wp:comment_author_email>
		<wp:comment_author_url>http://www.netbiblia.com.br</wp:comment_author_url>
		<wp:comment_author_IP>189.24.104.11</wp:comment_author_IP>
		<wp:comment_date>2008-04-09 02:10:22</wp:comment_date>
		<wp:comment_date_gmt>2008-04-09 02:10:22</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[LÃ©o, desejo tudo de bom nesta nova empreitada. NÃ£o esqueÃ§a dos seu amigos brasileiros viu? :-)

Quanto ao almoÃ§o em Madri... eu acho que... vou esperar vocÃª vir visitar sua famÃ­lia aqui na cidade maravilhosa e assim marcamos :-)

Foi muito bom ter trabalhado com vocÃª, tanto no IC quanto no MP.

AbraÃ§os.
Leonardo.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>124</wp:comment_id>
		<wp:comment_author><![CDATA[Luciene S. Luna Pinheiro]]></wp:comment_author>
		<wp:comment_author_email>luciene.luna@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>64.233.160.136</wp:comment_author_IP>
		<wp:comment_date>2008-04-11 01:29:48</wp:comment_date>
		<wp:comment_date_gmt>2008-04-11 01:29:48</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Meu amigo Leo,
  Em pensar que conheci vc no inicio da sua carreira. Estou muito feliz por sua vitoria.
  Eh isso ai. Va em frente. Posso tomar a cerveja em Madrid, mas teremos que nos planejar (Eu e o Leandro).
Um grande beijo.
Desejo muita alegria nessa nova de sua vida.

Luciene S. Luna Pinheiro.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Passenger(mod_rails) released</title>
		<link>http://www.leonardoborges.com/writings/2008/04/14/passengermod_rails-released/</link>
		<pubDate>Mon, 14 Apr 2008 01:45:34 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/2008/04/14/passengermod_rails-released/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.modrails.com/">Passenger(mod_rails)</a> has been released.

The idea is to ease the pain on rails applications deployment. I tested myself and in less than five minutes I had my application working behind Apache!

I'm not going to say much here besides the fact that it seems like a really good option for rails deployment and <a href="http://www.modrails.com/testimonials.html">people</a> have been talking about it already, including <a href="http://www.loudthinking.com/">DHH</a>.

But I do recommend a read on the <a href="http://www.modrails.com/documentation/Architectural%20overview.html">architecture overview</a> document. Be sure to read it all, specially the part on <a href="http://www.modrails.com/documentation/Architectural%20overview.html#concurrent_requests">handling concurrent requests</a>.

To install, "it doesn't get easier than" <a href="http://www.modrails.com/install.html">that</a>.

Good job guys.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2008-04-14 01:45:34</wp:post_date>
		<wp:post_date_gmt>2008-04-14 01:45:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>passengermod_rails-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1208137534]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[222121268]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>A couple of things from here...</title>
		<link>http://www.leonardoborges.com/writings/2008/05/10/a-couple-of-things-from-here/</link>
		<pubDate>Sat, 10 May 2008 15:33:12 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/?p=31</guid>
		<description></description>
		<content:encoded><![CDATA[It's been some time since my last post but here I am! Where? In Spain, of course! Having a great time, I must say.

I arrived last week in Madrid and the past 2 weeks before that I spent basically packing my stuff. There is still some paperwork going on but everything is flowing well.

Besides this little feedback, I was reading this week's issue of the excellent series <a href="http://antoniocangiano.com/2008/05/05/this-week-in-ruby-may-5-2008/">This Week In Ruby</a>, from my friend <a href="http://antoniocangiano.com/">Antonio Cangiano</a>. I found something quite interesting, a plugin called <a href="http://hobocentral.net/hobofields/">HoboFields</a>.

One of the things that bothers me in rails is the fact that by looking at your model classes, you can't tell the fields you have there. Sure, you can look at the migration script. Yeah, you can also load the development environment and inspect the object. It's a pain in the @zz! But this is the way ActiveRecord works...

Other ORM solutions like <a href="http://datamapper.org/">DataMapper</a>, allows you to define the fields directly in the class. It's a much cleaner and clear way to maintain your models. And you get to know what properties you have just by looking at your classes.

That's exactly what HoboFields adds to ActiveRecord.

You define your properties and its types straight into your model class, and the plugin creates the migration scripts for you. Coming from a java world my self, I find it rather interesting, useful and it also reminds me of the way <a href="http://hibernate.org">Hibernate</a> works. You define your mappings with anotations in your class and hibernate just generate the schemas from there.

It's worth a try.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2008-05-10 15:33:12</wp:post_date>
		<wp:post_date_gmt>2008-05-10 15:33:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-couple-of-things-from-here</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1210453006]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210433976]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>20735</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges: Clouds against the Floods | Software Secret Weapons]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.softwaresecretweapons.com/blog/605/leonardo-borges-clouds-against-the-floods</wp:comment_author_url>
		<wp:comment_author_IP>74.220.219.119</wp:comment_author_IP>
		<wp:comment_date>2011-01-16 12:52:44</wp:comment_date>
		<wp:comment_date_gmt>2011-01-16 19:52:44</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] A couple of things from hereâ¦ [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Euruko 2008: Materials available</title>
		<link>http://www.leonardoborges.com/writings/2008/05/14/euruko-2008-materials-available/</link>
		<pubDate>Wed, 14 May 2008 18:26:53 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Conferences]]></category>

		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>

		<category domain="tag"><![CDATA[Conferences]]></category>

		<category domain="tag" nicename="conferences"><![CDATA[Conferences]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/?p=32</guid>
		<description></description>
		<content:encoded><![CDATA[As some of you know <a href="http://leonardoborges.com/writings/2008/03/25/euruko-2008-european-rubyconf-prague/">I went</a> to the <a href="http://www.euruko2008.org">European Ruby Conf in Prague</a>, this year.

The event was awesome and it's good to know they finally made available the majority of the slides, <a href="http://www.euruko2008.org/pages/2-program">here</a>.

They also published <a href="http://www.avc-cvut.cz/avc.php?id=6830&amp;language=en_US">Matz's keynote</a>, and more videos from the conference are being edited right now, so stay tuned to their home page!

Enjoy!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2008-05-14 18:26:53</wp:post_date>
		<wp:post_date_gmt>2008-05-14 18:26:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>euruko-2008-materials-available</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1210789725]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Passenger (mod_rails) and problems with custom Apache installation</title>
		<link>http://www.leonardoborges.com/writings/2008/06/07/passenger-mod_rails-and-problems-with-custom-apache-installation/</link>
		<pubDate>Sat, 07 Jun 2008 13:02:43 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/?p=33</guid>
		<description></description>
		<content:encoded><![CDATA[This week we started to test <a href="http://www.modrails.com/">mod_rails</a> in a couple of projects where I work on. One in production.

Of course it's too early for any conclusions, but I just wanted to share a couple of problems you might find when the installer tries to compile the Apache module.

In our case, and I believe it is the case of many servers out there, we have a custom Apache installation, what makes the installer not find it and/or not find the Apache Portable Runtime (APR) sometimes.

The first one is easy and is documented <a href="http://www.modrails.com/documentation/Users%20guide.html#specifying_correct_apache_in">here</a>. You just seed to export the following environment variable, pointing to your apache installation:
<pre><tt><tt>export APXS2=/opt/apache2/bin/apxs
</tt></tt></pre>
The second one is a bit tricky but it happened only when I tried to install passenger in another server that had CentOS. In this case, you will also need the following environment variable, pointing to your Apache APR config:
<pre>export APR_CONFIG=/usr/local/apache2/bin/<span class="nfakPe">apr</span>-1-config</pre>
It took me a fair amount of time googling around to find this answer, so I hope it'll be useful for someone. :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2008-06-07 13:02:43</wp:post_date>
		<wp:post_date_gmt>2008-06-07 13:02:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>passenger-mod_rails-and-problems-with-custom-apache-installation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1212844040]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235582]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>125</wp:comment_id>
		<wp:comment_author><![CDATA[eric]]></wp:comment_author>
		<wp:comment_author_email>adiscgolfer@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>216.239.50.136</wp:comment_author_IP>
		<wp:comment_date>2008-06-07 15:06:09</wp:comment_date>
		<wp:comment_date_gmt>2008-06-07 15:06:09</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks for the info, this will save us time in the future.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Presentation: Spring framework</title>
		<link>http://www.leonardoborges.com/writings/2008/06/07/presentation-spring-framework/</link>
		<pubDate>Sat, 07 Jun 2008 13:37:27 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Presentations]]></category>

		<category domain="category" nicename="presentations"><![CDATA[Presentations]]></category>

		<category domain="tag"><![CDATA[Presentatios]]></category>

		<category domain="tag" nicename="presentatios"><![CDATA[Presentatios]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/?p=36</guid>
		<description></description>
		<content:encoded><![CDATA[Last friday I've done a small presentation about Dependency Injection and how it can improve the testing environment of a project. You can find it in the <a href="http://leonardoborges.com/writings/presentations">presentations</a> page.

Hope you like it.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2008-06-07 13:37:27</wp:post_date>
		<wp:post_date_gmt>2008-06-07 13:37:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presentation-spring-framework</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1212845847]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Talks</title>
		<link>http://www.leonardoborges.com/writings/presentations/</link>
		<pubDate>Sat, 07 Jun 2008 20:30:34 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/?page_id=34</guid>
		<description></description>
		<content:encoded><![CDATA[Here you'll find a list of my most recent talks. You can also visit my <a title="SlideShare" href="http://www.slideshare.net/borgesleonardo" target="_blank">SlideShare</a> profile if you like.
<ul>
	<li>Ruby On Rails Oceania Meetup, January - 2011 - Sydney, Australia</li>
</ul>
<div id="__ss_6848940" style="width: 425px;"><strong><a title="Clouds Against the Floods" href="http://www.slideshare.net/borgesleonardo/clouds-against-the-floods">Clouds Against the Floods</a></strong><object id="__sse6848940" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="355" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><param name="src" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=qldfloods-110208052605-phpapp01&amp;stripped_title=clouds-against-the-floods&amp;userName=borgesleonardo" /><param name="name" value="__sse6848940" /><param name="allowfullscreen" value="true" /><embed id="__sse6848940" type="application/x-shockwave-flash" width="425" height="355" src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=qldfloods-110208052605-phpapp01&amp;stripped_title=clouds-against-the-floods&amp;userName=borgesleonardo" name="__sse6848940" allowscriptaccess="always" allowfullscreen="true"></embed></object>
<div style="padding: 5px 0 12px;">View more <a href="http://www.slideshare.net/">presentations</a> from <a href="http://www.slideshare.net/borgesleonardo">Leonardo Borges</a>.</div>
</div>
<ul>
	<li>ThoughtWorks Geek Night, 2010 - Sydney, Australia</li>
</ul>
<div id="__ss_6817749" style="width: 425px;"><strong><a title="Arel in Rails 3" href="http://www.slideshare.net/borgesleonardo/rails-3-and-arel">Arel in Rails 3</a></strong><object id="__sse6817749" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="355" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><param name="src" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=arel-110204203323-phpapp01&amp;stripped_title=rails-3-and-arel&amp;userName=borgesleonardo" /><param name="name" value="__sse6817749" /><param name="allowfullscreen" value="true" /><embed id="__sse6817749" type="application/x-shockwave-flash" width="425" height="355" src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=arel-110204203323-phpapp01&amp;stripped_title=rails-3-and-arel&amp;userName=borgesleonardo" name="__sse6817749" allowscriptaccess="always" allowfullscreen="true"></embed></object>
<div style="padding: 5px 0 12px;">View more <a href="http://www.slideshare.net/">presentations</a> from <a href="http://www.slideshare.net/borgesleonardo">Leonardo Borges</a>.</div>
</div>
<ul>
	<li>RailsSummit, 2009 - Sao Paulo, Brazil</li>
</ul>
<div id="__ss_6817733" style="width: 425px;"><strong><a title="JRuby in The Enterprise" href="http://www.slideshare.net/borgesleonardo/railssummit09-jruby-in-the-enterprise">JRuby in The Enterprise</a></strong><object id="__sse6817733" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="355" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><param name="src" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=railssummit09jrubyintheenterprise-110204202723-phpapp01&amp;stripped_title=railssummit09-jruby-in-the-enterprise&amp;userName=borgesleonardo" /><param name="name" value="__sse6817733" /><param name="allowfullscreen" value="true" /><embed id="__sse6817733" type="application/x-shockwave-flash" width="425" height="355" src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=railssummit09jrubyintheenterprise-110204202723-phpapp01&amp;stripped_title=railssummit09-jruby-in-the-enterprise&amp;userName=borgesleonardo" name="__sse6817733" allowscriptaccess="always" allowfullscreen="true"></embed></object>
<div style="padding: 5px 0 12px;">View more <a href="http://www.slideshare.net/">presentations</a> from <a href="http://www.slideshare.net/borgesleonardo">Leonardo Borges</a>.</div>
</div>
<ul>
	<li>Mirai tech Talk, 2008 - Madrid, Spain</li>
</ul>
<div id="__ss_6817743" style="width: 425px;"><strong><a title="Testing with Spring" href="http://www.slideshare.net/borgesleonardo/mirai-tech-talk-spring">Testing with Spring</a></strong><object id="__sse6817743" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="355" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><param name="src" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=mtt001spring-110204203036-phpapp02&amp;stripped_title=mirai-tech-talk-spring&amp;userName=borgesleonardo" /><param name="name" value="__sse6817743" /><param name="allowfullscreen" value="true" /><embed id="__sse6817743" type="application/x-shockwave-flash" width="425" height="355" src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=mtt001spring-110204203036-phpapp02&amp;stripped_title=mirai-tech-talk-spring&amp;userName=borgesleonardo" name="__sse6817743" allowscriptaccess="always" allowfullscreen="true"></embed></object>
<div style="padding: 5px 0 12px;">View more <a href="http://www.slideshare.net/">presentations</a> from <a href="http://www.slideshare.net/borgesleonardo">Leonardo Borges</a>.</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2008-06-07 13:30:34</wp:post_date>
		<wp:post_date_gmt>2008-06-07 20:30:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presentations</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1297849913]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_page_template</wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>126</wp:comment_id>
		<wp:comment_author><![CDATA[Presentation: Spring framework : leonardoborges.com]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://leonardoborges.com/writings/2008/06/07/presentation-spring-framework/</wp:comment_author_url>
		<wp:comment_author_IP>75.126.194.2</wp:comment_author_IP>
		<wp:comment_date>2008-06-07 13:37:29</wp:comment_date>
		<wp:comment_date_gmt>2008-06-07 13:37:29</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] Presentations [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Mock Objects</title>
		<link>http://www.leonardoborges.com/writings/2008/07/07/mock-objects/</link>
		<pubDate>Mon, 07 Jul 2008 19:46:11 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

		<category domain="tag"><![CDATA[Testing]]></category>

		<category domain="tag" nicename="testing"><![CDATA[Testing]]></category>

		<guid isPermaLink="false">http://leonardoborges.com/writings/?p=37</guid>
		<description></description>
		<content:encoded><![CDATA[When testing it's pretty common to see the need for mocking a certain object, say, a Data Access Ojbect. This way you don't need to depend on a database and you can focus on the actual logic implemented by the method being tested.

For that you have several alternatives like creating the Mock class by hand or - and this is the more common - use one of the various mocking libraries out there.

They all look the same but the past couple of days I've come accross to a new - at least for me - mocking library for Java. It's called <a href="http://code.google.com/p/mockito/">Mockito</a>. As the creators state, technically, Mockito is a fork of <a href="http://www.easymock.org/">EasyMock</a>.

I have used EasyMock already but I do think Mockito has its advantages. I find it clear and a bit less verbose to write.

From one of the stubbing examples on their website:
<pre lang="java">
//You can mock concrete classes, not only interfaces
LinkedList mockedList = mock(LinkedList.class);

//stubbing - before execution
stub(mockedList.get(0)).toReturn("first");

//following prints "first"
System.out.println(mockedList.get(0));

//following prints "null" because get(999) was not stubbed
System.out.println(mockedList.get(999));
</pre>
Looking forward to using it in production! ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2008-07-07 19:46:11</wp:post_date>
		<wp:post_date_gmt>2008-07-07 19:46:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mock-objects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1218113469]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[214914493]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>New provider</title>
		<link>http://www.leonardoborges.com/writings/2008/07/26/new-provider/</link>
		<pubDate>Sat, 26 Jul 2008 10:07:31 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Notices]]></category>

		<category domain="category" nicename="notices"><![CDATA[Notices]]></category>

		<category domain="tag"><![CDATA[Notices]]></category>

		<category domain="tag" nicename="notices"><![CDATA[Notices]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=36</guid>
		<description></description>
		<content:encoded><![CDATA[I decided to change my blog's hosting provider and this is the first post using the new service.

Please if you see any abnormal behaviour around here don't hesitate to contact me either at leonardoborges@leonardoborges.com or leonardoborges.rj@gmail.com

Thanks!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date>2008-07-26 03:07:31</wp:post_date>
		<wp:post_date_gmt>2008-07-26 10:07:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>new-provider</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1217066851]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>The biggest Rails event in latin america</title>
		<link>http://www.leonardoborges.com/writings/2008/08/04/the-biggest-rails-event-in-latin-america/</link>
		<pubDate>Mon, 04 Aug 2008 16:18:46 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Conferences]]></category>

		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>

		<category domain="tag"><![CDATA[Conferences]]></category>

		<category domain="tag" nicename="conferences"><![CDATA[Conferences]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=38</guid>
		<description></description>
		<content:encoded><![CDATA[Behold latin american railers!

This year we will have the <a href="http://www.locaweb.com.br/railssummit/">Rails Summit Latin America</a> on October, 15th and 16th, in SÃ£o Paulo, Brazil.

It's by far the biggest Rails event we've ever had, including many of the speakers that were present at <a href="http://en.oreilly.com/rails2008/public/content/home">RailsConf</a>.

<a href="http://akitaonrails.com/">FÃ¡bio Akita</a> is also one of the speakers and provides more details on his <a href="http://akitaonrails.com/2008/8/1/largada-para-o-maior-evento-de-rails-da-am-rica-latina">blog</a>.

If you're a assumed rails geek don't miss the opportunity to hear from the big names and to know a beautiful country like Brazil.

Oh, btw, if you're brazilian, like me, you have no excuse to miss this party!

Enjoy!!!

<p>
<a href="http://www.locaweb.com.br/railssummit">
<img src="http://www.akitaonrails.com/assets/2008/8/1/468x60.gif" alt="Rails Summit Latin America" title="Rails Summit Latin America" border="0" width="468" height="60"/></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2008-08-04 09:18:46</wp:post_date>
		<wp:post_date_gmt>2008-08-04 16:18:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-biggest-rails-event-in-latin-america</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1217866727]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235594]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>144</wp:comment_id>
		<wp:comment_author><![CDATA[Mauricio De Diana]]></wp:comment_author>
		<wp:comment_author_email>mdediana@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>200.234.206.126</wp:comment_author_IP>
		<wp:comment_date>2008-08-07 11:18:53</wp:comment_date>
		<wp:comment_date_gmt>2008-08-07 18:18:53</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Are you planning to attend Rails Summit?

After we talked at QCon, we started using RoR in some projects in my team, so I will be at the conference for sure.

See you.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>145</wp:comment_id>
		<wp:comment_author><![CDATA[leonardo]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>83.57.221.148</wp:comment_author_IP>
		<wp:comment_date>2008-08-07 11:22:40</wp:comment_date>
		<wp:comment_date_gmt>2008-08-07 18:22:40</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey man! Good to hear from you....

I'd love to attend but I don't think it will be possible for me this time. I'm already going to RailsConf Europe in Berlin, so I think that would be a bit too much. But I'm really happy to see a event this big taking place in brazil. Keep in touch, we chat later!

c ya and thanks for the comment! :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Why I like Ruby #1: alias_method</title>
		<link>http://www.leonardoborges.com/writings/2008/08/07/why-i-like-ruby-1-alias_method/</link>
		<pubDate>Thu, 07 Aug 2008 12:46:50 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<category><![CDATA[Why I Like Ruby]]></category>

		<category domain="category" nicename="why-i-like-ruby"><![CDATA[Why I Like Ruby]]></category>

		<category domain="tag"><![CDATA[Why I Like Ruby]]></category>

		<category domain="tag" nicename="why-i-like-ruby"><![CDATA[Why I Like Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[So you found yourself in the need to override a method but still count on it's old behaviour?

No problem! Override it with your new code, call <strong>super</strong> and.... Uh oh!! Suddenly this turned into a problem... Let me give some more context.

I was testing <a href="http://ferret.davebalmain.com/trac/wiki">Ferret</a> (and the <a href="http://projects.jkraemer.net/acts_as_ferret/">acts_as_ferret</a> plugin) in a project to provide full text search capabilities to our models. One of the things the plugin does is to add a new method to ActiveRecord, called <em>find_with_ferret</em>. That way, every model can use it. Great!

So I thought that would make sense for me to remove all <a href="http://en.wikipedia.org/wiki/Diacritics">diatrictics</a> from the input text before letting ferret do its job. You know, like removing <a href="http://en.wikipedia.org/wiki/Umlaut_%28diacritic%29">umlauts</a> and all that.

I could do that by overriding this method with code to remove the undesired chars and then call its older version to finally do the search - something like calling super, but not quite. And I didn't want my models to inherit from anything else than ActiveRecord::Base. That wouldn't make any sense.

<a href="http://www.ruby-doc.org/core/classes/Module.html#M000395">alias_method</a> to the rescue!

You know that to redefine a method in an existing class you can open it up and rewrite it. But since you don't wanna loose the behaviour provided by the original method, this is how you can achieve this:

<pre lang="ruby" line="1">
module ActiveRecord
  class Base
    alias_method :find_with_ferret_original, :find_with_ferret

    def find_with_ferret(q, options = {}, find_options = {})
      remove_diatrictics!(q)
      find_with_ferret_original(q, options, find_options)
    end
  end
end
</pre>

And you're good to go. On line 3 you're just giving the original method an alias, making a copy of it.

Then you redefine it the way you like and on line 6 you call the old version to make sure u still got the same behaviour.  
Now all my models can benefit of this change without requiring them to call another method nor inherit from another class.

Cool, huh? :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2008-08-07 05:46:50</wp:post_date>
		<wp:post_date_gmt>2008-08-07 12:46:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-i-like-ruby-1-alias_method</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1227036310]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235605]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>143</wp:comment_id>
		<wp:comment_author><![CDATA[Eric]]></wp:comment_author>
		<wp:comment_author_email>adiscgolfer@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>151.193.213.23</wp:comment_author_IP>
		<wp:comment_date>2008-08-07 10:29:36</wp:comment_date>
		<wp:comment_date_gmt>2008-08-07 17:29:36</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks Leo - very useful information here, as always.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>10583</wp:comment_id>
		<wp:comment_author><![CDATA[Ar]]></wp:comment_author>
		<wp:comment_author_email>hyde@iki.fi</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>192.100.124.219</wp:comment_author_IP>
		<wp:comment_date>2010-06-02 01:19:24</wp:comment_date>
		<wp:comment_date_gmt>2010-06-02 08:19:24</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks for info that helped me to find the answer for my problem, which was to alias a class method, which I ended up doing like this:

  require 'containsSomeClass'

  class SomeClass

    class &lt;&lt; self
      alias __some_method_original__ some_method
    end

    def self.some_method()
       puts "hooked!"
       __some_method_original__
    end

  end]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>10585</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>120.16.171.249</wp:comment_author_IP>
		<wp:comment_date>2010-06-02 02:59:54</wp:comment_date>
		<wp:comment_date_gmt>2010-06-02 09:59:54</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Glad to have helped! :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>10583</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Articles</title>
		<link>http://www.leonardoborges.com/writings/articles/</link>
		<pubDate>Thu, 07 Aug 2008 15:17:40 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?page_id=51</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
	<li>Book review, on <a href="http://www.javalobby.org">JavaLobby</a>: <a href="http://www.javalobby.org/articles/java6-platform-revealed/">Java 6 Platform Revealed</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2008-08-07 08:17:40</wp:post_date>
		<wp:post_date_gmt>2008-08-07 15:17:40</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>articles</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1252843027]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_page_template</wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Yes we do eat.</title>
		<link>http://www.leonardoborges.com/writings/2008/08/15/yes-we-do-eat/</link>
		<pubDate>Fri, 15 Aug 2008 14:36:41 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=54</guid>
		<description></description>
		<content:encoded><![CDATA[Besides the fact that I am a software developer, I do eat. I even enjoy doing so. Specially when I'm traveling.
That's why i decided to put up a new weblog only for this kind of stuff - it's called <a href="http://travel.leonardoborges.com">Travel tips - food & stuff</a>. Basically for friends and whoever else might be interested.

There I plan to share some nice restaurants I've been to. At least to start with.

Hope u like it!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2008-08-15 07:36:41</wp:post_date>
		<wp:post_date_gmt>2008-08-15 14:36:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>yes-we-do-eat</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1218811084]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[291245985]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Rails: Vulnerability on REXML</title>
		<link>http://www.leonardoborges.com/writings/2008/08/24/rails-vulnerability-on-rexml/</link>
		<pubDate>Sun, 24 Aug 2008 09:27:03 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Security]]></category>

		<category domain="tag" nicename="security"><![CDATA[Security]]></category>

		<category><![CDATA[Security]]></category>

		<category domain="category" nicename="security"><![CDATA[Security]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=57</guid>
		<description></description>
		<content:encoded><![CDATA[REXML, the XML library uses by many ruby apps, including rails, has a vulnerability that requires an immediate patch on whatever rails version you're using.

Details and instructions on the official rails weblog, <a href="http://weblog.rubyonrails.org/2008/8/23/dos-vulnerabilities-in-rexml">here</a>.

But basically, this is what you need to do:

<pre lang="bash">
gem install rexml-expansion-fix
</pre>

Then, require rexml-expansion-fix in your rails's app environment.rb file.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2008-08-24 02:27:03</wp:post_date>
		<wp:post_date_gmt>2008-08-24 09:27:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-vulnerability-on-rexml</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1219950197]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Mac OS X: Getting MySQL and Rails to work</title>
		<link>http://www.leonardoborges.com/writings/2008/08/28/mac-os-x-getting-mysql-and-rails-to-work/</link>
		<pubDate>Thu, 28 Aug 2008 19:23:53 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Mac]]></category>

		<category domain="category" nicename="mac"><![CDATA[Mac]]></category>

		<category domain="tag"><![CDATA[Mac]]></category>

		<category domain="tag" nicename="mac"><![CDATA[Mac]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=60</guid>
		<description></description>
		<content:encoded><![CDATA[So I couldn't resist and bought myself a MacBook Pro! It's my first week with my new toy and I'm really enjoying it.

But I need to do something useful with it so I started to prepare it to be my new development platform, starting with Ruby/Rails + MySQL: Here is where the fun begins!

After I installed both Rails and MySQL, I fired up a terminal an typed:
<pre lang="bash">sudo gem install mysql</pre>
...and here is what u get
<pre lang="bash">ERROR: Failed to build gem native extension.</pre>
If you google this error you will find a couple solutions and this is the one that worked for me:
<pre lang="bash">ARCHFLAGS="-Os -arch x86_64 -fno-common"
sudo gem install mysql -- --with-mysql-dir=/usr/local/mysql
--with-mysql-config=/usr/local/mysql/bin/mysql_config</pre>
Now, confident enough, I created a sample rails app and tried to create the development database:
<pre lang="bash">leo$ rake db:create (in /Users/leo/projects/test)
dyld: lazy symbol binding failed: Symbol not found: _mysql_init</pre>
Doesn't look happy yet huh? This took me a while to figure out but it turned out to be fairly simple.
I have no idea why but after I installed the gem I had the file mysql.bundle in two different places:
<pre lang="bash">/Library/Ruby/Gems/1.8/gems/mysql-2.7/lib/mysql.bundle
/Library/Ruby/Gems/1.8/gems/mysql-2.7/mysql.bundle</pre>
The solution was to remove the first copy of the file. Now everything is working fine at this end!
I really hope this is useful to someone!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2008-08-28 12:23:53</wp:post_date>
		<wp:post_date_gmt>2008-08-28 19:23:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mac-os-x-getting-mysql-and-rails-to-work</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1219951433]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235616]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>255</wp:comment_id>
		<wp:comment_author><![CDATA[Loquito]]></wp:comment_author>
		<wp:comment_author_email>philip@ivercore.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.ivercore.com</wp:comment_author_url>
		<wp:comment_author_IP>92.78.34.82</wp:comment_author_IP>
		<wp:comment_date>2008-08-29 00:43:49</wp:comment_date>
		<wp:comment_date_gmt>2008-08-29 07:43:49</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Booooo, come back to Linux, the best operating system in the world. LOL. I'm just kidding. Being a Linux person it is hard to say, but Mac OS is probably the best Unix type OS available if you want a stable OS. It is built so all the parts work with each other seamlessly, and all the hardware always works with the software. I use Ubuntu, and although they are closer to this goal than say 5 years ago, it still in quite a poor state. I think that Ubuntu should go the way of Apple and choose a limited set of hardware, and get all their software to work on that hardware. The benefits would be that obviously you would know that all your software would work with the hardware you had, and because it would not be proprietary hardware like apple use the hardware cost would be much lower.

But for now, until apple cost their hardware sensibly or someone buys me one, I am Ubuntu/Linux.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>257</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.25.193.131</wp:comment_author_IP>
		<wp:comment_date>2008-08-30 08:28:15</wp:comment_date>
		<wp:comment_date_gmt>2008-08-30 15:28:15</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hahahaha

That's exactly what motivated me to move o Mac.

So far, I can't complain.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>894</wp:comment_id>
		<wp:comment_author><![CDATA[Pete]]></wp:comment_author>
		<wp:comment_author_email>pete.roome@googlemail.com</wp:comment_author_email>
		<wp:comment_author_url>http://mnuvrs.com</wp:comment_author_url>
		<wp:comment_author_IP>87.194.130.140</wp:comment_author_IP>
		<wp:comment_date>2008-12-15 03:50:17</wp:comment_date>
		<wp:comment_date_gmt>2008-12-15 10:50:17</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Brilliant, this worked perfectly for me having tried all the other solutions i then came across this, the most obvious one! ha.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>RailsConf Europe 2008: heading to berlin!</title>
		<link>http://www.leonardoborges.com/writings/2008/08/30/railsconf-europe-2008-heading-to-berlin/</link>
		<pubDate>Sat, 30 Aug 2008 15:09:39 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Conferences]]></category>

		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>

		<category domain="tag"><![CDATA[Conferences]]></category>

		<category domain="tag" nicename="conferences"><![CDATA[Conferences]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=63</guid>
		<description></description>
		<content:encoded><![CDATA[The title says it already.

On monday I'll be going to Berlin to attend this yearÂ´s <a href="http://en.oreilly.com/railseurope2008/public/content/home">RailsConf</a>.

This will be my first one and of course my expectations are pretty high!

As usual, after the conference I'll try and give a summary of what happened there, providing as much content as I can.

Anyone else's going??? :)

C u there!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date>2008-08-30 08:09:39</wp:post_date>
		<wp:post_date_gmt>2008-08-30 15:09:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>railsconf-europe-2008-heading-to-berlin</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1220108979]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>RailsConf Europe 2008: impressions and highlights</title>
		<link>http://www.leonardoborges.com/writings/2008/09/09/railsconf-europe-2008-impressions-and-highlights/</link>
		<pubDate>Tue, 09 Sep 2008 12:10:05 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Conferences]]></category>

		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>

		<category domain="tag"><![CDATA[Conferences]]></category>

		<category domain="tag" nicename="conferences"><![CDATA[Conferences]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[RailsConf2008]]></category>

		<category domain="tag" nicename="railsconf2008"><![CDATA[RailsConf2008]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=65</guid>
		<description></description>
		<content:encoded><![CDATA[I'm back in Madrid again after the RailsConf and I think it's time to say something about it. :)

First off, the infrastructure provided by the conference was really great. The rooms, WiFi connection, food...Â  Really well organized.

Now to the sessions, highlights:

<strong>Tutorials (Tuesday)</strong>
- <a href="http://nealford.com/downloads/Ford-Farley_Meta_programming_ruby-tutorial.pdf">Meta-programming Ruby for fun and profit</a> (Neal Ford, Patrick Farley)
The old and good techniques that made Ruby so powerful. Here Neal and Patrick walked us through the main tricks to meta programming like open classes - and conditionally open them - , dynamically define methods, sending messages to objects and how Ruby can help test your Java code in a much easier way.

I've put the link to the slides but honestly I don't think they're too much useful without the talking.

<strong>Sessions (Wednessday)</strong>
- EC2, MapReduce and Distributed processing (<a href="http://railspikes.com">Jonathan Dahl</a>)
Jonathan explained the theory behind <a href="http://en.wikipedia.org/wiki/Mapreduce">MapReduce</a> using very simple ruby examples, providing the basics on how to distribute and paralelize tasks accross multiple machines.

He also introduced <a href="http://hadoop.apache.org/core/">Hadoop</a>, a platform built in Java that "lets one easily write and run     applications that process vast amounts of data". What I liked the most was the simplicity he explained this subject. As of today, his presentation is not available online. Stay tuned as I'm gonna update this post with the links, as soon as they're available.

<strong>Sessions (Thursday)</strong>
- <a href="http://nealford.com/downloads/conferences/canonical/Neal_Ford-Debugging_and_Testing_the_Web_Tier.zip">Debugging &amp; Testing the Web Tier</a> (<a href="http://nealford.com">Neal Ford</a>)
If you've been concerned about testing your app's web tier lately, this presentation would probably not show you anything new. Neal talks about the need to debug and test javascript behaviour accross multiple browsers, using tools like <a href="http://getfirebug.com/">Firebug</a>, <a href="http://www.jsunit.net/">JSUnit</a> and <a href="http://selenium.openqa.org/">Selenium</a>. If you have no idea about what these tools are, please stop now and go evaluate them!

We are pretty concerned about testing on my actual job, but selenium tests can be a pain sometimes - a.k.a extremely slow. And what ends up happening is that they are forgotten. Developers only run the test suite if it's not painful and it's lightning fast. Here's is where the highlight for this session comes: <a href="http://www.thefrontside.net/crosscheck">CrossCheck</a>.

The idea is to be able to test your javascript code accross multiple browsers without the need to launch them. In fact, you don't even need a browser installed. The negative point is that it's kinda fallen behind because now you can only test older versions of browsers. But since the project is getting a lot of traction, I'm pretty sure this will be solved soon.

<strong>Conclusion</strong>

My overall impression of the other sessions I attended is that some speakers just didn't have time to properly prepare themselves, what made me think this years's RailsConf wasn't all that I expected.

But I also met interesting people and after all one of the key points in a conference is networking. :)

Definitely worth it though. And that's why I took the time to provide this highlights.

c u soon]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2008-09-09 05:10:05</wp:post_date>
		<wp:post_date_gmt>2008-09-09 12:10:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>railsconf-europe-2008-impressions-and-highlights</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1220962461]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_old_slug</wp:meta_key>
		<wp:meta_value><![CDATA[railsconf-europe-2008-impressions-and-highlights-part-1]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235644]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>367</wp:comment_id>
		<wp:comment_author><![CDATA[Tiago Melo]]></wp:comment_author>
		<wp:comment_author_email>tiagoharris@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>201.7.186.73</wp:comment_author_IP>
		<wp:comment_date>2008-09-09 13:35:01</wp:comment_date>
		<wp:comment_date_gmt>2008-09-09 20:35:01</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey Leo, nice post!

I've used Selenium and it's a pain to test some scenarios. I'll see CrossCheck. Thanks for the tip!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>368</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>79.144.219.143</wp:comment_author_IP>
		<wp:comment_date>2008-09-09 13:43:57</wp:comment_date>
		<wp:comment_date_gmt>2008-09-09 20:43:57</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks man!

I really like selenium.... but being slow is a real drawback. Let's see how this CrossCheck evolves. It really sounds like a good idea.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>We&#039;re hiring</title>
		<link>http://www.leonardoborges.com/writings/2008/09/26/were-hiring/</link>
		<pubDate>Fri, 26 Sep 2008 10:40:36 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Offers]]></category>

		<category domain="category" nicename="offers"><![CDATA[Offers]]></category>

		<category domain="tag"><![CDATA[Offers]]></category>

		<category domain="tag" nicename="offers"><![CDATA[Offers]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=72</guid>
		<description></description>
		<content:encoded><![CDATA[Here at <a href="http://miraiespana.com/">Mirai</a> we're looking for passionate software engineers.

And if it's not clear, by passionate I mean people who actually enjoy their job, aren't afraid of trying new things, likes to research/study, is up to date to what's happening around them and is a true team player.

Interested? Hold on, click <a href="http://jobs.hotelsearch.com/">here</a> to find out more about the offer, as well as instructions on how to apply.

Doubts?  Send them to jobs@hotelsearch.com

ps. If you've been following my blog, you probably have already got a feeling of the sort of stuff that we do here...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date>2008-09-26 03:40:36</wp:post_date>
		<wp:post_date_gmt>2008-09-26 10:40:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>were-hiring</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1222425636]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235655]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>524</wp:comment_id>
		<wp:comment_author><![CDATA[Tony Fabeen]]></wp:comment_author>
		<wp:comment_author_email>tony.fabeen@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.keeponrightway.com</wp:comment_author_url>
		<wp:comment_author_IP>200.196.241.1</wp:comment_author_IP>
		<wp:comment_date>2008-09-30 08:17:34</wp:comment_date>
		<wp:comment_date_gmt>2008-09-30 15:17:34</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Leonardo, 

Is it position valid to people living overseas? IÂ´m in Brazil. 

Cheers.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>525</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2008-09-30 08:23:51</wp:comment_date>
		<wp:comment_date_gmt>2008-09-30 15:23:51</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[If you're interested and think you've got what it takes, give it a shot!

I'm Brazilian as well.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Don&#039;t use REXML. I mean it.</title>
		<link>http://www.leonardoborges.com/writings/2008/10/08/dont-use-rexml-i-mean-it/</link>
		<pubDate>Wed, 08 Oct 2008 18:43:44 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=75</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.germane-software.com/software/rexml/">REXML</a> is the standard XML processing library for Ruby. It's on Ruby's core and is terribly <strong>slow</strong>.

Yeah, I know it's pretty simple to use, got a nice interface and, again, it's just there. And it is a good library, for most things. But if you, as me, came to a point that processing XML is taking 50% of the time to render a rails action, it's time to change.

My tip? Use <a href="http://libxml.rubyforge.org/">libxml</a> instead. The numbers on their home page speak for themselves. Try it yourself, you won't be disappointed. And I'm really happy with the performance increase on our app.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date>2008-10-08 11:43:44</wp:post_date>
		<wp:post_date_gmt>2008-10-08 18:43:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dont-use-rexml-i-mean-it</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1223491424]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235659]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>566</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.49.69.119</wp:comment_author_IP>
		<wp:comment_date>2008-10-09 00:27:38</wp:comment_date>
		<wp:comment_date_gmt>2008-10-09 07:27:38</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I've used hpricot as well. Then it really comes down to a matter of taste, since their performance is not that different.  Personally I like libxml better. But definitely, if you are well versed on hpricot, should be dead simple to use it for parsing XML. Tks  for pointing out. :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>565</wp:comment_id>
		<wp:comment_author><![CDATA[Philip MacIver]]></wp:comment_author>
		<wp:comment_author_email>philip@ivercore.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.ivercore.com</wp:comment_author_url>
		<wp:comment_author_IP>88.75.41.185</wp:comment_author_IP>
		<wp:comment_date>2008-10-08 21:11:24</wp:comment_date>
		<wp:comment_date_gmt>2008-10-09 04:11:24</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[It is true that libxml is the fastest xml library for parsing xml in ruby. But it has been said that while hpricot is a bit slower than libxml (not much slower) it is nicer to use on the front end. So I would agree that not using rexml is the way to go. But you may want to also consider hpricot.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Understanding Ruby threads</title>
		<link>http://www.leonardoborges.com/writings/2008/10/28/understanding-ruby-threads/</link>
		<pubDate>Tue, 28 Oct 2008 21:56:07 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=77</guid>
		<description></description>
		<content:encoded><![CDATA[This post is just to clarify some confusion I've noticed reading some posts around the web. There is some misunderstanding of the differences between Ruby 1.8 and Ruby 1.9 regarding threads. And the difference between them and JRuby.

So I decided to write this small summary:

<strong>Ruby 1.8</strong> - Supports only <a href="http://en.wikipedia.org/wiki/Green_threads">Green Threads</a>

This means that the ruby interpreter has its own scheduler. No matter how many threads you create in your ruby program, there will be only one native thread on your OS. Therefore, your program cannot take advantage of multiple core environments.

<strong>Ruby 1.9</strong> - Supports native threads (GIL)

Ruby 1.9 adopted <a href="http://www.atdot.net/yarv/">YARV</a> as the new VM implementation, which supports native threads. This means that now your ruby programs can take advantage of multiple core environments, but no truly parallel execution is achieved.

The catch is GIL - Global Interpreter Lock - and it means that each ruby thread runs on its own native thread, but only one of them can be executed at a time.

<strong>JRuby</strong> - Ruby 1.8 compatible

I think this is the easy part. JRuby runs on the Java VM, which supports native threads and parallel execution.

On this environment, ruby threads are java threads.

<strong>The future</strong>

There doesn't seem to be any decision about what's gonna happen on the next versions of Ruby. At least to the extent of my research. But this is today's snapshot of Ruby threads and I hope it'll be useful to some folks.

c u around]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date>2008-10-28 14:56:07</wp:post_date>
		<wp:post_date_gmt>2008-10-28 21:56:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>understanding-ruby-threads</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1225231326]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235664]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>655</wp:comment_id>
		<wp:comment_author><![CDATA[Tony Fabeen]]></wp:comment_author>
		<wp:comment_author_email>tony.fabeen@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.keeponrightway.com</wp:comment_author_url>
		<wp:comment_author_IP>200.196.241.1</wp:comment_author_IP>
		<wp:comment_date>2008-10-30 11:12:53</wp:comment_date>
		<wp:comment_date_gmt>2008-10-30 18:12:53</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I still expecting for Maglev or even Rubinius to see how it gonna works inside those VMs..]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Merb turns 1.0, and started driving me crazy</title>
		<link>http://www.leonardoborges.com/writings/2008/11/18/merb-turns-10-and-started-driving-me-crazy/</link>
		<pubDate>Tue, 18 Nov 2008 19:43:45 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Merb]]></category>

		<category domain="category" nicename="merb"><![CDATA[Merb]]></category>

		<category domain="tag"><![CDATA[Merb]]></category>

		<category domain="tag" nicename="merb"><![CDATA[Merb]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=81</guid>
		<description></description>
		<content:encoded><![CDATA[As you may already know, <a href="http://www.merbivore.com/">Merb</a> turned 1.0 a while ago and I decided to resume my studies to learn the framework.

So I just built a new app with a few resources and fired the migration scripts:
<pre lang="bash">
$ rake db:automigrate
</pre>

And this is what I got:
<pre lang="bash">
Loading init file from /Users/leo/projects/merb/my-first-app/config/init.rb
Loading /Users/leo/projects/merb/my-first-app/config/environments/development.rb
 ~ Connecting to database...
/opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core/adapters/data_objects_adapter.rb:137:in `initialize': wrong number of arguments (8 for 1) (ArgumentError)
	from /opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core/adapters/data_objects_adapter.rb:137:in `new'
	from /opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core/adapters/data_objects_adapter.rb:137:in `normalize_uri'
	from /opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core/adapters/abstract_adapter.rb:44:in `initialize'
	from /opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core/adapters/data_objects_adapter.rb:159:in `initialize'
	from /opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core.rb:157:in `new'
	from /opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core.rb:157:in `setup'
	from /opt/local/lib/ruby/gems/1.8/gems/merb_datamapper-1.0/lib/merb/orms/data_mapper/connection.rb:44:in `setup_connections'
	from /opt/local/lib/ruby/gems/1.8/gems/merb_datamapper-1.0/lib/merb/orms/data_mapper/connection.rb:27:in `connect'
	from /opt/local/lib/ruby/gems/1.8/gems/merb_datamapper-1.0/lib/merb_datamapper.rb:17:in `run'
	from /opt/local/lib/ruby/gems/1.8/gems/merb-core-1.0/lib/merb-core/bootloader.rb:99:in `run'
	from /opt/local/lib/ruby/gems/1.8/gems/merb-core-1.0/lib/merb-core/server.rb:172:in `bootup'
	from /opt/local/lib/ruby/gems/1.8/gems/merb-core-1.0/lib/merb-core/server.rb:42:in `start'
	from /opt/local/lib/ruby/gems/1.8/gems/merb-core-1.0/lib/merb-core.rb:169:in `start'
	from /opt/local/lib/ruby/gems/1.8/gems/merb-core-1.0/bin/merb:11
	from /opt/local/bin/merb:19:in `load'
	from /opt/local/bin/merb:19
</pre>

Lovely, isn't it?  
After a fair amount of googling around it turns out that there seems to be a problem with the URI parser <a href="http://www.merbivore.com/">Merb</a> uses underneath, called <a href="http://addressable.rubyforge.org/">Addressable</a>.

As of the installation of Merb 1.0, the installed version of this library was 2.0.0.
The solution? Install a older Addressable version:

<pre lang="bash">
$ sudo gem uninstall addressable

You have requested to uninstall the gem:
	addressable-2.0.0
dm-core-0.9.6 depends on [addressable (>= 1.0.4)]
data_objects-0.9.6 depends on [addressable (>= 1.0.3)]
If you remove this gems, one or more dependencies will not be met.
Continue with Uninstall? [Yn]  Y
Successfully uninstalled addressable-2.0.0

$ sudo gem install addressable -v 1.0.4
Successfully installed addressable-1.0.4
1 gem installed
Installing ri documentation for addressable-1.0.4...
Installing RDoc documentation for addressable-1.0.4...
</pre>

I haven't figured out the reason for this issue, so please do share if you know. I'll be glad to update the post. :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date>2008-11-18 12:43:45</wp:post_date>
		<wp:post_date_gmt>2008-11-18 19:43:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>merb-turns-10-and-started-driving-me-crazy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1227086538]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236202]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>872</wp:comment_id>
		<wp:comment_author><![CDATA[Strange errors when upgrading merb | JZ * LABS - the web experiment playground of jason ting]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.jzlabs.com/2008/11/28/strange-errors-when-upgrading-merb/</wp:comment_author_url>
		<wp:comment_author_IP>209.20.67.181</wp:comment_author_IP>
		<wp:comment_date>2008-11-28 16:31:36</wp:comment_date>
		<wp:comment_date_gmt>2008-11-28 23:31:36</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] googling for awhile I found this post  that suggested downgrading the addressable gem back to 1.0.4.Â  I tried doing that but stuff was [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>755</wp:comment_id>
		<wp:comment_author><![CDATA[Colin]]></wp:comment_author>
		<wp:comment_author_email>colin.powell@me.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>72.65.108.129</wp:comment_author_IP>
		<wp:comment_date>2008-11-18 20:46:55</wp:comment_date>
		<wp:comment_date_gmt>2008-11-19 03:46:55</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thank god for your post. I was just about ready to pull my hair out. As you may have guessed, my googling for the answer was not as successful as yours.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>756</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.49.82.73</wp:comment_author_IP>
		<wp:comment_date>2008-11-19 02:35:31</wp:comment_date>
		<wp:comment_date_gmt>2008-11-19 09:35:31</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey Colin, I'm really glad the post helped you.

Tks for the comment.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Rails performance scripts: profiler and benchmarker</title>
		<link>http://www.leonardoborges.com/writings/2008/11/20/rails-performance-scripts-profiler-benchmarker/</link>
		<pubDate>Thu, 20 Nov 2008 20:30:53 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Performance]]></category>

		<category domain="category" nicename="performance"><![CDATA[Performance]]></category>

		<category domain="tag"><![CDATA[Performance]]></category>

		<category domain="tag" nicename="performance"><![CDATA[Performance]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=84</guid>
		<description></description>
		<content:encoded><![CDATA[There are several ways you can measure your rails application's performance. The techniques range from filling your code with "puts" statements - :p - to fancy ones like <a href="http://www.newrelic.com/">NewRelic</a> - which is quite nice, I must say.

But what many people don't know is that rails ships with a handful of scripts to help you out. One of which is called <strong>profiler</strong>, located under your application's <strong>scripts/performance</strong> directory.

By default it uses the standard ruby profiler but if you want more speed - and additional reporting options - , consider installing the <a href="http://ruby-prof.rubyforge.org/">ruby-prof</a> gem.

So if you execute it without params, you'll get a clue of how it works:

<pre lang="bash">
$ script/performance/profiler
Usage: ./script/performance/profiler 'Person.expensive_method(10)' [times] [flat|graph|graph_html]
</pre>

Pretty self explanatory, right?

As a sample code, I have in my rails app a dumb model with a really dumb method I wanna profile:

<pre lang="ruby">
class Article < ActiveRecord::Base
  def self.find_all_with_delay
    sleep 10
    self.find(:all)
  end
end
</pre>

Clearly this method doesn't perform well and is a bottle neck in our super application! But let's see what rails' profiler tells us:

<pre lang="bash" line="1">
$ script/performance/profiler 'Article.find_all_with_delay' 1 graph > text_graph.perf
Loading Rails...
Using the ruby-prof extension.
Thread ID: 109440
Total Time: 10.147995

  %total   %self     total      self      wait     child            calls   Name
--------------------------------------------------------------------------------
 100.00%   0.00%     10.15      0.00      0.00     10.15                1     Global#[No method] (/Users/leo/projects/test/vendor/rails/railties/lib/commands/performance/profiler.rb:24}  /Users/leo/projects/test/vendor/rails/railties/lib/commands/performance/profiler.rb:24
                     10.15      0.00      0.00     10.15              1/1     Object#profile_me
--------------------------------------------------------------------------------
                     10.15      0.00      0.00     10.15              1/1     Global#[No method]
 100.00%   0.00%     10.15      0.00      0.00     10.15                1     Object#profile_me ((eval):1}  (eval):1
                      0.00      0.00      0.00      0.00              1/1     Class#const_missing
                     10.15      0.00      0.00     10.15              1/1     <Class::Article(id: integer, name: string, content: string, created_at: datetime, updated_at: datetime)>#find_all_with_delay
--------------------------------------------------------------------------------
                     10.15      0.00      0.00     10.15              1/1     Object#profile_me
  99.97%   0.00%     10.15      0.00      0.00     10.15                1     <Class::Article(id: integer, name: string, content: string, created_at: datetime, updated_at: datetime)>#find_all_with_delay (/Users/leo/projects/test/app/models/article.rb:2}  /Users/leo/projects/test/app/models/article.rb:2
                      0.15      0.00      0.00      0.15              1/1     <Class::ActiveRecord::Base>#find
                     10.00     10.00      0.00      0.00              1/1     Kernel#sleep
--------------------------------------------------------------------------------
                     10.00     10.00      0.00      0.00              1/1     <Class::Article(id: integer, name: string, content: string, created_at: datetime, updated_at: datetime)>#find_all_with_delay
  98.54%  98.54%     10.00     10.00      0.00      0.00                1     Kernel#sleep (ruby_runtime:0}  ruby_runtime:0
--------------------------------------------------------------------------------
...
</pre>

As you can see, the group around line 13 is where most of the time is spent, going through our stupid call to Kernel#sleep and detailing every and each call from the very beginning. The report is much larger, so I recommend you give it a try. It's really useful.

Now, displeased with my method's performance, I wrote a new one that I think performs much better:

<pre lang="ruby">
  def self.find_all_with_less_delay
    sleep 5
    self.find(:all)
  end
</pre>

Nice huh? :) But how can we be sure it performs better? It turns out that under <strong>scripts/performance</strong> there is another useful script: <strong>benchmarker</strong>

Again, running it without arguments reveals it's usage:

<pre lang="bash">
$ script/performance/benchmarker 
Usage: ./script/performance/benchmarker [times] 'Person.expensive_way' 'Person.another_expensive_way' ...
</pre>

So, ready to see which one of my methods performs better? Let's check:

<pre lang="bash">
$ script/performance/benchmarker 1 'Article.find_all_with_delay' 'Article.find_all_with_less_delay'
            user     system      total        real
#1      0.020000   0.000000   0.020000 ( 10.016033)
#2      0.010000   0.000000   0.010000 (  5.015390)
</pre>

Pretty neat way to benchmark your methods huh?
Profiler and benchmarker are a powerful combination that have been helping me a lot in the projects I'm working on.

Hope you like it! See u soon! ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>84</wp:post_id>
		<wp:post_date>2008-11-20 13:30:53</wp:post_date>
		<wp:post_date_gmt>2008-11-20 20:30:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-performance-scripts-profiler-benchmarker</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1242488059]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236208]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>820</wp:comment_id>
		<wp:comment_author><![CDATA[Eric]]></wp:comment_author>
		<wp:comment_author_email>adiscgolfer@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>70.234.166.124</wp:comment_author_IP>
		<wp:comment_date>2008-11-21 19:10:59</wp:comment_date>
		<wp:comment_date_gmt>2008-11-22 02:10:59</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Man, once again coming through with a very helpful post.  Filing this one in my brain and looking forward to the next one.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1612</wp:comment_id>
		<wp:comment_author><![CDATA[vint]]></wp:comment_author>
		<wp:comment_author_email>vint@vint.od.ua</wp:comment_author_email>
		<wp:comment_author_url>http://vint.od.ua</wp:comment_author_url>
		<wp:comment_author_IP>195.114.128.12</wp:comment_author_IP>
		<wp:comment_date>2009-03-13 07:21:16</wp:comment_date>
		<wp:comment_date_gmt>2009-03-13 14:21:16</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[How i can test performans my script, witch upload files?]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>8084</wp:comment_id>
		<wp:comment_author><![CDATA[Dirk]]></wp:comment_author>
		<wp:comment_author_email>mail@dirk.net</wp:comment_author_email>
		<wp:comment_author_url>http://dirk.net</wp:comment_author_url>
		<wp:comment_author_IP>210.86.142.29</wp:comment_author_IP>
		<wp:comment_date>2010-02-03 12:01:29</wp:comment_date>
		<wp:comment_date_gmt>2010-02-03 19:01:29</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks, very helpful post. I had some trouble outputting to a file and had success with 
script/performance/profiler 'Article.find_all_with_delay' 1 graph 2&gt; text_graph.perf
Yep. that's a '2' before the '&gt;'.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21064</wp:comment_id>
		<wp:comment_author><![CDATA[Adriano Ferrari]]></wp:comment_author>
		<wp:comment_author_email>adriano.ferrari@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-03-10 16:36:00</wp:comment_date>
		<wp:comment_date_gmt>2011-03-10 16:36:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks for the post, Leonardo.

And Bless you Dirk! I could not get the output to work, which made the profiler basically useless. Your '2&gt;' did the trick!

(any idea why?)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>8084</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Apologizing in advance! :P</title>
		<link>http://www.leonardoborges.com/writings/2008/12/03/apologizing-in-advance-p/</link>
		<pubDate>Wed, 03 Dec 2008 20:25:58 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=86</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>UPDATE</strong>: By next friday I meant this friday, december 5th. Tks Pillip! :P

This will be a really quiet month on my blog.

The reason? Next friday I'm going to Brazil for vacation and right after, in the end of december, I'm going to extend my trip a bit and spend xmas in Norway.

Just hope to come back alive from Brazil! My friends are promising a real blast!!!!! :D

C u all soon!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date>2008-12-03 13:25:58</wp:post_date>
		<wp:post_date_gmt>2008-12-03 20:25:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>apologizing-in-advance-p</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1228378707]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236413]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>880</wp:comment_id>
		<wp:comment_author><![CDATA[herval]]></wp:comment_author>
		<wp:comment_author_email>hervalfreire@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://hervalicio.us</wp:comment_author_url>
		<wp:comment_author_IP>212.243.55.82</wp:comment_author_IP>
		<wp:comment_date>2008-12-04 04:45:18</wp:comment_date>
		<wp:comment_date_gmt>2008-12-04 11:45:18</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[way to go mate!
I'll be spending my christmas in Spain - visiting barcelona and madrid (again)! :-)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>881</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.2.199.201</wp:comment_author_IP>
		<wp:comment_date>2008-12-04 08:29:02</wp:comment_date>
		<wp:comment_date_gmt>2008-12-04 15:29:02</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[hahah really? That's nice!

Well, I'll be back from norway on the 28th. So if u'r still around, just let me know!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Somewhere in between...</title>
		<link>http://www.leonardoborges.com/writings/2008/12/29/somewhere-in-between/</link>
		<pubDate>Mon, 29 Dec 2008 14:30:40 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=89</guid>
		<description></description>
		<content:encoded><![CDATA[So here I am! Alive and kicking!!!

Just got back from vacation. Brazil was awesome and so was xmas in Norway! Lots of food in both places! Need a diet! :p Warming up for new year's now.

But the reason for this post is the last comment on my <a href="http://www.leonardoborges.com/writings/2007/12/21/rails-20-scaffold/#comments">Rails 2.0 scaffold post</a>, quoted here:

Hi Leonardo,
<blockquote><em>I am extremely grateful for your info altruism. I thought maybe I could show my gratitude with a small donation but I donâ€™t see anywhere on your site to do so.
Youâ€™ve saved me hours and possibly what little sanity that I claim to have left. Is there a place to do so on your site that Iâ€™m missing? If not just tell me where and Iâ€™ll send my gesture to any cause that you wish. Thanks very much again, some day I hope to be able to be of service to a needy newbie as you have been to me. Happy New Years!!</em></blockquote>

I was surprised that someone wanted to make a donation and, since I never thought about it, I wasn't prepared. 

I was talking with the author of the comment, Eric Goodman, and I suggested he could donate to a noble cause. He ageed and just sent me the confirmation that a donation was made to <a href="http://www.cancer.org">The American Cancer Society</a>. 

So here I leave my thank you to Eric and encourage other people that read my blog to do the same in case they feel compelled to contribute in some way. Other societies around the world are gonna be very grateful.

Happy new years!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2008-12-29 07:30:40</wp:post_date>
		<wp:post_date_gmt>2008-12-29 14:30:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>somewhere-in-between</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1230561041]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236439]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>911</wp:comment_id>
		<wp:comment_author><![CDATA[Pedro Pimentel]]></wp:comment_author>
		<wp:comment_author_email>zukunft@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.pedropimentel.com</wp:comment_author_url>
		<wp:comment_author_IP>189.30.211.23</wp:comment_author_IP>
		<wp:comment_date>2009-01-04 11:23:34</wp:comment_date>
		<wp:comment_date_gmt>2009-01-04 18:23:34</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Ha!
Nice story !

Congratulations!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>add_server</title>
		<link>http://www.leonardoborges.com/writings/2009/02/01/eclipse-tip-debugging-non-wtp-projects/add_server/</link>
		<pubDate>Sun, 01 Feb 2009 12:36:41 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/02/add_server.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Add server wizard]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date>2009-02-01 05:36:41</wp:post_date>
		<wp:post_date_gmt>2009-02-01 12:36:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>add_server</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>91</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/02/add_server.png</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[/home/.tibetan/leonardodhborges/leonardoborges.com/writings/wp-content/uploads/2009/02/add_server.png]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:525;s:6:"height";i:571;s:14:"hwstring_small";s:22:"height='96' width='88'";s:4:"file";s:101:"/home/.tibetan/leonardodhborges/leonardoborges.com/writings/wp-content/uploads/2009/02/add_server.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"add_server-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:22:"add_server-275x300.png";s:5:"width";i:275;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>server_config</title>
		<link>http://www.leonardoborges.com/writings/2009/02/01/eclipse-tip-debugging-non-wtp-projects/server_config/</link>
		<pubDate>Sun, 01 Feb 2009 12:54:41 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/02/server_config.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Tomcat server overview]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2009-02-01 05:54:41</wp:post_date>
		<wp:post_date_gmt>2009-02-01 12:54:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>server_config</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>91</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/02/server_config.png</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[/home/.tibetan/leonardodhborges/leonardoborges.com/writings/wp-content/uploads/2009/02/server_config.png]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:842;s:6:"height";i:572;s:14:"hwstring_small";s:23:"height='86' width='128'";s:4:"file";s:104:"/home/.tibetan/leonardodhborges/leonardoborges.com/writings/wp-content/uploads/2009/02/server_config.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"server_config-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:25:"server_config-300x203.png";s:5:"width";i:300;s:6:"height";i:203;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>launch_config</title>
		<link>http://www.leonardoborges.com/writings/2009/02/01/eclipse-tip-debugging-non-wtp-projects/launch_config/</link>
		<pubDate>Sun, 01 Feb 2009 12:57:00 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/02/launch_config.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Launch Configuration]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2009-02-01 05:57:00</wp:post_date>
		<wp:post_date_gmt>2009-02-01 12:57:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>launch_config</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>91</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/02/launch_config.png</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[/home/.tibetan/leonardodhborges/leonardoborges.com/writings/wp-content/uploads/2009/02/launch_config.png]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:800;s:6:"height";i:639;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:104:"/home/.tibetan/leonardodhborges/leonardoborges.com/writings/wp-content/uploads/2009/02/launch_config.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"launch_config-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:25:"launch_config-300x239.png";s:5:"width";i:300;s:6:"height";i:239;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Eclipse Tip: Debugging non WTP projects</title>
		<link>http://www.leonardoborges.com/writings/2009/02/01/eclipse-tip-debugging-non-wtp-projects/</link>
		<pubDate>Sun, 01 Feb 2009 13:01:46 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=91</guid>
		<description></description>
		<content:encoded><![CDATA[This is a very useful tip I shared a while ago at the office and turned out to be extremely useful.

If you work with java and use eclipse as an IDE you know that eclipse has something called WTP, which stands for Web Tools Platform. It's a set of tools and API's to aid in the development of web and JEE projects.

That means that if you have a WTP project in your workspace, you can deploy, run and debug it straight from the IDE. But what happens if your project is not of a WTP nature?

Back at the office we have a coupe of really old Java project. WTP didn't exist back then but we do use Eclipse as our IDE of choice.

So, how do we debug a deployed project that we don't actually deploy from the IDE? As long as you have the source, it is quite simple:<!--more-->

First you need to add a new server form the Server window, if you don't have one already:

[caption id="attachment_92" align="alignnone" width="275" caption="Add server wizard"]<a href="http://www.leonardoborges.com/writings/wp-content/uploads/2009/02/add_server.png"><img class="size-medium wp-image-92" title="add_server" src="http://www.leonardoborges.com/writings/wp-content/uploads/2009/02/add_server-275x300.png" alt="Add server wizard" width="275" height="300" /></a>[/caption]

After that, double click the server to open its configuration window:

[caption id="attachment_93" align="alignnone" width="300" caption="Tomcat server overview"]<a href="http://www.leonardoborges.com/writings/wp-content/uploads/2009/02/server_config.png"><img class="size-medium wp-image-93" title="server_config" src="http://www.leonardoborges.com/writings/wp-content/uploads/2009/02/server_config-300x203.png" alt="Tomcat server overview" width="300" height="203" /></a>[/caption]

Now, in the Geneneral information section click Open Launch configuration and select the Source tab:

[caption id="attachment_94" align="alignnone" width="300" caption="Launch Configuration"]<a href="http://www.leonardoborges.com/writings/wp-content/uploads/2009/02/launch_config.png"><img class="size-medium wp-image-94" title="launch_config" src="http://www.leonardoborges.com/writings/wp-content/uploads/2009/02/launch_config-300x239.png" alt="Launch Configuration" width="300" height="239" /></a>[/caption]

From this window you can add the sources of the project you want to debug. Once done, just drop a breakpoint in your source file and start your server in debug mode.

You're good to go!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2009-02-01 06:01:46</wp:post_date>
		<wp:post_date_gmt>2009-02-01 13:01:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eclipse-tip-debugging-non-wtp-projects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1233493306]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[234520955]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>QCon London &#039;09</title>
		<link>http://www.leonardoborges.com/writings/2009/03/09/qcon-london-09/</link>
		<pubDate>Mon, 09 Mar 2009 09:26:54 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Conferences]]></category>

		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>

		<category domain="tag"><![CDATA[Conferences]]></category>

		<category domain="tag" nicename="conferences"><![CDATA[Conferences]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=96</guid>
		<description></description>
		<content:encoded><![CDATA[Tomorrow I'll be once more heading London for this year's <a title="QCon London 2009" href="http://qconlondon.com/">QCon</a>.

As usual, the schedule looks amazing and I'll try to keep you all posted about what's going on there.

Oh and if any of you guys is going and wanna meet up for a geek talk and a couple of beers, just send me a message.

Cheers! :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>96</wp:post_id>
		<wp:post_date>2009-03-09 02:26:54</wp:post_date>
		<wp:post_date_gmt>2009-03-09 09:26:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>qcon-london-09</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1236592305]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[224239754]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Final classes are evil</title>
		<link>http://www.leonardoborges.com/writings/2009/03/17/final-classes-are-evil/</link>
		<pubDate>Tue, 17 Mar 2009 10:51:26 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Architecture]]></category>

		<category domain="category" nicename="arquitetura"><![CDATA[Architecture]]></category>

		<category domain="tag"><![CDATA[Architecture]]></category>

		<category domain="tag" nicename="architecture"><![CDATA[Architecture]]></category>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=99</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Update:</strong> Go ahead and read this post in its entirety - including the comments. Then, read my other <a href="http://www.leonardoborges.com/writings/2009/10/07/a-few-more-thoughts-on-final-classes/">post where I expand the subject a little more</a>. 

--

Every now and then I still do some Java coding. And I actually like it. I spent several years of my career developing primarily in Java and am very keen about the language.

I've been a fierce defender of it these days, specially with the wave of popularity of other languages such as Ruby and Groovy. But I must say that for the 1st time - actually the 2nd - I got pissed off at Java.

The reason? Final classes!

How arrogant of someone to say: "And from now on you shall not subclass my classes!"

Er.... Why?!?! I'm yet to find a good reason in favor of it. But I can share 2 that made me be completely against it. - I never actually liked it but it just didn't bother me that much in the past.

The first one happened while I was adding PostgreSQL XML support to <a href="http://hibernate.org/">Hibernate</a>. The basic idea is that the XML data type should behave mostly as a string, with the exception of the saving and loading operations.

The thing is, the String data type in Hibernate is declared final. So you cannot share behavior unless you copy and paste it. How smart.

And the second is in the testing area. We all love testing. And we all love mocking external dependencies so we can test our code in isolation and fast. Well, I hope your code doesn't depend on the <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/net/URL.html">URL</a> class then.

It is declared final so you just can't mock it. Mocking frameworks like <a href="http://www.easymock.org/">easyMock</a> use subclassing to create your dependencies mock objects and obviously it doesn't work here.

Yeah yeah, of course you can refactor your code so it depends on an interface/class that wraps your URL class and then you can switch implementations. But just how stupid is that? Programming to interfaces makes sense, but not everywhere. Specially not when you're using a low level class like this one.

So please, software developers, architects and the like, design your systems for extensibility and stop being presumptuous.

P.S.: There is a testing framework called <a href="https://jmockit.dev.java.net/">jMockit</a> which uses instrumentation (Java 5+) to redefine methods in runtime so you can mock final classes. It works, but should we really be playing that much with the java class loader just so we can "easily" test our code?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date>2009-03-17 03:51:26</wp:post_date>
		<wp:post_date_gmt>2009-03-17 10:51:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>final-classes-are-evil</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1254952259]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236467]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>1646</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2009-03-17 07:46:06</wp:comment_date>
		<wp:comment_date_gmt>2009-03-17 14:46:06</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Haha
Man you know how much I like Ruby. But it's not like it's the solution for everything! :p]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1642</wp:comment_id>
		<wp:comment_author><![CDATA[Philip MacIver]]></wp:comment_author>
		<wp:comment_author_email>philip@ivercore.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.ivercore.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2009-03-17 04:59:35</wp:comment_date>
		<wp:comment_date_gmt>2009-03-17 11:59:35</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[My solution: Forget Java, it is a dead language haha.

The future is ruby, the future is here, the future is now.

Long live ruby!!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4628</wp:comment_id>
		<wp:comment_author><![CDATA[Radoslaw Maruszewski]]></wp:comment_author>
		<wp:comment_author_email>rmaruszewski@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>89.174.237.33</wp:comment_author_IP>
		<wp:comment_date>2009-07-17 04:55:41</wp:comment_date>
		<wp:comment_date_gmt>2009-07-17 11:55:41</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I think articles like this are very harmful. Beginner programmers read it and start to believe that they should not use "final" at all, or use it with great caution. The truth is something quite opposite: use the "final" keyword freely, and if you don't know if you class should be "final" or not, err on the side of "final" (in fact, all the class members and classes should be "final" by default, and there should be a keyword to change this behavior, not the other way round).

There are many valid reasons for this:

1. If class is not designed for extension, it's easy to break LSP and write really bad and vulnerable code. Like extending String class by XML class, when somebody just wants to inherit part of the String behavior - even is XML is not really a String. From now on any change on String class (like adding, removing or changing a method) may break the XML code, and may cause wicked errors.

2. Like ESP said, the only way to assure that your immutable class will actually stay immutable, is to add the "final" keyword. Otherwise somebody may extend it, overwrite methods returning immutable data (like copy of class member), or directly change the class members.

3. If you leave your class open for inheritance (no "final" method), you should ensure if it will properly work with serialization, cloning, checking equality, and that the inherited classes will behave properly in the multi-thread environment. That's what Bloch means by "design for inheritance".

Also be careful when using "final" for a class that doesn't implement an interface, as you don't leave any possibility of mocking/replacing it (so that's the only statement from this article I agree with ;-)).]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4629</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2009-07-17 05:19:34</wp:comment_date>
		<wp:comment_date_gmt>2009-07-17 12:19:34</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hello Radoslaw!

I definitely didn't intend it to be harmful. After all, this are only my findings, experiences and opinions.

Back to the post, actually the point you agree with is the most important I was trying to make. :) No argument there.

Regarding designing for inheritance, yes I agree it's hard. But in such case, the developer should be coding to an interface, as you stated yourself. And I guess that's where the flaw is.

Specially in the past when testing wasn't such a big issue as it is today...not to mention we didn't have the strategies for mocking, stubbing and etc... that we do now.

Tks for keeping the discussion interesting.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1921</wp:comment_id>
		<wp:comment_author><![CDATA[ESP]]></wp:comment_author>
		<wp:comment_author_email>eniosp@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>195.112.95.126</wp:comment_author_IP>
		<wp:comment_date>2009-04-03 01:35:47</wp:comment_date>
		<wp:comment_date_gmt>2009-04-03 08:35:47</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Immutability is a great thing. Why make a class final ? To make it immutable.

Take a look on item 15 "Minimize mutability" from Joshua Bloch's Effective Java.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1923</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2009-04-03 01:51:04</wp:comment_date>
		<wp:comment_date_gmt>2009-04-03 08:51:04</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hello ESP! Tks for stopping by!

I have to disagree with you. Only by marking your class final, you don't ensure it's immutable. It's useless to declare it final if you provide mutators (e.g. setters).

By immutable Joshua meant you cannot change state, which means you're talking about instances of that class. That can be achieved without marking the class itself final.

He does mention marking the class as final to prevent "malicious or careless code". Which has to do with the item 17: Document for inheritance or mark it final. Which I agree.

But I go further and say that if you mark it final - because you didn't want design it for inheritance, code it against an interface. It will make all our lives easier. :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>5788</wp:comment_id>
		<wp:comment_author><![CDATA[Rogério Liesenfeld]]></wp:comment_author>
		<wp:comment_author_email>rliesenfeld@hotmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>201.15.252.185</wp:comment_author_IP>
		<wp:comment_date>2009-09-20 16:29:11</wp:comment_date>
		<wp:comment_date_gmt>2009-09-20 23:29:11</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I think you are making several mistakes:
1) JMockit does not rely on custom class loaders. Anyway, I don't see why a user should care which mechanisms the tool uses internally to do the job. What matters is how easy it is to use, and how clean the resulting test code is.
2) "Design for extensibility" means that I should either explicitly design and document a class for inheritance and other extension mechanisms, or declare it or some of its methods final. Simply making all classes non-final by default is not "designing for extensibility". BTW, I make most of the classes/methods I create final, and hardly ever had to remove the "final" modifier later.
3) I think you misunderstand what "program to an interface, not an implementation" (from the GoF book) means. It's not about mindlessly creating separate abstractions/interfaces for every class, as you seem to imply. "Coding to an interface" only means that you should declare variables/fields/parameters with the abstract/interface type, not with the separate class/implementation type (for example, with List and ArrayList, declare "List lst", not "ArrayList lst").]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1683</wp:comment_id>
		<wp:comment_author><![CDATA[raul]]></wp:comment_author>
		<wp:comment_author_email>raul-info@r-bg.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>78.86.165.41</wp:comment_author_IP>
		<wp:comment_date>2009-03-20 02:52:09</wp:comment_date>
		<wp:comment_date_gmt>2009-03-20 09:52:09</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Design a class to be proper inheritable is a pain, beside the public interface you have to publish the internal one, how is going to interact the internal methods, how the internal variable works, the internal caches. All in all inheritance is a bad OOP practice and all the design patterns are develop to avoid it. 
I think the problem is not the final class but that they were not coding against an interface]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>1696</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.5.69.98</wp:comment_author_IP>
		<wp:comment_date>2009-03-20 15:36:04</wp:comment_date>
		<wp:comment_date_gmt>2009-03-20 22:36:04</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Raul! Tks for stopping by!

I totally agree that, in Java, not coding to an interface is a problem. I'm 100% with you there.

My problem with making a class final is that it just doesn't make sense. Or at least I haven't found someone to make me see it.

Probably when Java was first conceived it made a lot of sense. - But so did null references in the past right? :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>5799</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2009-09-21 01:19:06</wp:comment_date>
		<wp:comment_date_gmt>2009-09-21 08:19:06</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Rogério!
Good to know the title brought so much attention to the topic. It's purposely appelative. :)  
Now a few comments on your considerations:
1) I didn't mention custom class loaders, as far as I understood it, jmockit mocks final classes trough the use of instrumentation. I consider it being an advanced feature from the class loader - but please correct me if I'm wrong - used to circumvent the lack of flexibility on final classes. It does work, but last time I tried it, it wasn't so simple to use.

2) If you keep in mind that inheritance is, overall, a bad OOP practice, marking a class as final doesn't make much sense in most systems. And that's one thing I don't like about java. Many of it's keywords and patterns are there to keep people from creating malicious/careless code. I think this is a social problem rather than a technical issue.

3) As you stated yourself, you should use List, instead of an ArrayList. The same should be true with most, if not all, dependencies you have. The problem with classes that are final and do not provide an interface is that you have to create this interface yourself - to wrap the dependency. Otherwise the coupling between both will be high.

And lastly but not least, the overall point I was trying to make when I wrote this article was that final classes are evil for testing. Perhaps I should have included that in the title, but on the other hand, it served to keep the discussion interesting. :)

Thanks for stopping by.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>5788</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6148</wp:comment_id>
		<wp:comment_author><![CDATA[A few more thoughts on final classes]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com/writings/2009/10/07/a-few-more-thoughts-on-final-classes/</wp:comment_author_url>
		<wp:comment_author_IP>75.127.72.28</wp:comment_author_IP>
		<wp:comment_date>2009-10-07 14:40:04</wp:comment_date>
		<wp:comment_date_gmt>2009-10-07 21:40:04</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] said final classes are evil and that post got some attention with interesting comments. Maybe because of the title and the tone [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21181</wp:comment_id>
		<wp:comment_author><![CDATA[fat loss supplements]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.fatlossdiet.org/fat-loss-supplements/</wp:comment_author_url>
		<wp:comment_author_IP>94.63.59.202</wp:comment_author_IP>
		<wp:comment_date>2011-04-28 13:34:38</wp:comment_date>
		<wp:comment_date_gmt>2011-04-28 20:34:38</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[<strong>If your looking for a fat loss diet we can help...</strong>

even though the web sites we website link to below are completely unrelated to ours, we feel they're worth a read, so have a look...]]></wp:comment_content>
		<wp:comment_approved>spam</wp:comment_approved>
		<wp:comment_type>trackback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21169</wp:comment_id>
		<wp:comment_author><![CDATA[Fantasy RPG]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.gamehobbit.com/</wp:comment_author_url>
		<wp:comment_author_IP>24.138.9.233</wp:comment_author_IP>
		<wp:comment_date>2011-04-14 04:45:52</wp:comment_date>
		<wp:comment_date_gmt>2011-04-14 11:45:52</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[<strong>Super...</strong>

[...]while we try to decide what we should be doing[...]...]]></wp:comment_content>
		<wp:comment_approved>spam</wp:comment_approved>
		<wp:comment_type>trackback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21170</wp:comment_id>
		<wp:comment_author><![CDATA[free ipad tester]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.freeipadgiveaways.net</wp:comment_author_url>
		<wp:comment_author_IP>108.62.152.9</wp:comment_author_IP>
		<wp:comment_date>2011-04-14 14:39:00</wp:comment_date>
		<wp:comment_date_gmt>2011-04-14 21:39:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[<strong>free ipad giveaway...</strong>

[...]below you'll find the link to some sites that we think you should visit[...]...]]></wp:comment_content>
		<wp:comment_approved>spam</wp:comment_approved>
		<wp:comment_type>trackback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21172</wp:comment_id>
		<wp:comment_author><![CDATA[Foot Warts]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://plantarwartremoval.org/foot-warts</wp:comment_author_url>
		<wp:comment_author_IP>108.62.11.217</wp:comment_author_IP>
		<wp:comment_date>2011-04-15 16:44:36</wp:comment_date>
		<wp:comment_date_gmt>2011-04-15 23:44:36</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[<strong>[...]below you'll find the link to some sites that we think you should visit[...]...</strong>

[...]here are some links to sites that we link to because we think they are worth visiting[...]...]]></wp:comment_content>
		<wp:comment_approved>spam</wp:comment_approved>
		<wp:comment_type>trackback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21173</wp:comment_id>
		<wp:comment_author><![CDATA[reviews for cellulite treatment]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.reviewsforcellulitetreatment.com</wp:comment_author_url>
		<wp:comment_author_IP>122.184.133.210</wp:comment_author_IP>
		<wp:comment_date>2011-04-16 06:35:17</wp:comment_date>
		<wp:comment_date_gmt>2011-04-16 13:35:17</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[<strong>Amazing website...</strong>

[...]while the sites we link to below are completely unrelated to ours, we think they are worth a read, so have a look[...]...]]></wp:comment_content>
		<wp:comment_approved>spam</wp:comment_approved>
		<wp:comment_type>trackback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21171</wp:comment_id>
		<wp:comment_author><![CDATA[פיקוח בנייה]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.tal-drukman.co.il/</wp:comment_author_url>
		<wp:comment_author_IP>184.82.186.58</wp:comment_author_IP>
		<wp:comment_date>2011-04-15 12:08:46</wp:comment_date>
		<wp:comment_date_gmt>2011-04-15 19:08:46</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[<strong>פיקוח בנייה...</strong>

[...]below you'll find the link to some sites that we think you should visit[...]...]]></wp:comment_content>
		<wp:comment_approved>spam</wp:comment_approved>
		<wp:comment_type>trackback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21174</wp:comment_id>
		<wp:comment_author><![CDATA[Hemorrhoids Relief]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.hemroidreliefsite.com/best-way-to-treat-hemorrhoids/</wp:comment_author_url>
		<wp:comment_author_IP>173.234.181.202</wp:comment_author_IP>
		<wp:comment_date>2011-04-18 09:15:11</wp:comment_date>
		<wp:comment_date_gmt>2011-04-18 16:15:11</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[<strong>Hemroid Relief...</strong>

[...]below you'll find the link to some sites that we think you should visit[...]...]]></wp:comment_content>
		<wp:comment_approved>spam</wp:comment_approved>
		<wp:comment_type>trackback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Long stand up meetings</title>
		<link>http://www.leonardoborges.com/writings/2009/04/06/long-stand-up-meetings/</link>
		<pubDate>Mon, 06 Apr 2009 09:03:43 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category domain="tag"><![CDATA[Agile]]></category>

		<category domain="tag" nicename="agile"><![CDATA[Agile]]></category>

		<category><![CDATA[Agile]]></category>

		<category domain="category" nicename="agile"><![CDATA[Agile]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=104</guid>
		<description></description>
		<content:encoded><![CDATA[It's been more than a year since I started my new endeavor here in Spain, moving from Brazil and starting a whole new life - both personal and professional. Time for a little retrospective.

More precisely, a retrospective about the agile practices here at the company.

When I first started out back in January '08 the company thought they were agile. NOT! They did adopt some XP practices but just to give you an idea, I'm gonna focus on just one: stand-up meetings.

My first stand-up meeting was a shock! We were a team of 6 developers and 2 sys admins and the meeting lasted for 40 -yes, forty - minutes!

The reason? Several, but the most obvious one was that in their stand up meeting they were actually, well, sit. That was my first suggestion which some people were actually reluctant about. But we survived.

Since then we improved a lot our stand-up meetings being able to usually cut it down to 10 minutes. But we can get better.

Another problem we usually have is the "i-want-my-finger-in-everything" syndrome. I guess you're all familiar with that. It's the developer who wants to know everything in its minimum detail and interrupts everyone in the stand-up meeting to ask questions or make clarifications that could, both, be done afterwards. And that's a problem we still have every now and then.

But we are much better now and to get here we basically successfully tried:

- Standing up ( duh?! - believe me, this was harder than you might think)

- Trying to bind people's thoughts on what they've done the day before and what they are going to do that day. Anything else should be left for after the meeting - it's probably not everyone else's concern. Focus.

- Limiting the amount of time allowed for each developer - currently we have a generous 2 minute limit.

- Using a token -any object light enough to be hold while you're talking. People are only allowed to talk when they get hold of it. This was a nice idea brought by my colleague <a href="http://www.ivercore.com/">Philip MacIver</a>.

But we still have issues. People still jump in somebody else's turn and get the token basically as if just by getting it they can talk. And because of that we still suffer from the  "i-want-my-finger-in-everything" syndrome.

So after telling this little story about how stand-up meetings evolved here, I'd like to hear from you guys what do you do to keep your meetings short and to the point. I'm really willing to hear suggestions and success stories.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>104</wp:post_id>
		<wp:post_date>2009-04-06 02:03:43</wp:post_date>
		<wp:post_date_gmt>2009-04-06 09:03:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>long-stand-up-meetings</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1239008625]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236652]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>2034</wp:comment_id>
		<wp:comment_author><![CDATA[Philip MacIver]]></wp:comment_author>
		<wp:comment_author_email>philip@ivercore.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.ivercore.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2009-04-07 01:10:05</wp:comment_date>
		<wp:comment_date_gmt>2009-04-07 08:10:05</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I say bring back public floggings, lol. That is the way we handle things in the old country. 

But seriously, it drives in insane that people don't have the self discipline to be quiet for just 10 minutes. And it in fact makes me want to walk out of meetings when people can't do a thing as simple as "do nothing". Maybe a whipping for each interruption will be the only way. Or maybe I will try walking out of a meeting. But if the flogging idea takes off, I call dibs to be the executioner... I mean flogger!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>JRuby on Rails and Google App Engine</title>
		<link>http://www.leonardoborges.com/writings/2009/04/10/jruby-on-rails-and-google-app-engine/</link>
		<pubDate>Fri, 10 Apr 2009 11:14:53 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category><![CDATA[JRuby]]></category>

		<category domain="category" nicename="jruby"><![CDATA[JRuby]]></category>

		<category domain="tag"><![CDATA[JRuby]]></category>

		<category domain="tag" nicename="jruby"><![CDATA[JRuby]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=114</guid>
		<description></description>
		<content:encoded><![CDATA[As many of you know the new language supported at <a href="http://code.google.com/appengine/" target="_blank">GAE</a> now is Java, as officially announced on their <a href="http://googleappengine.blogspot.com/2009/04/seriously-this-time-new-language-on-app.html" target="_blank">blog</a>. As a Ruby/Rails developer you might not be interested on it but here is a reason you should be: <a href="http://jruby.codehaus.org/" target="_blank">JRuby</a>.

It was only a matter of time until we saw some people deploying JRuby on Rails apps on GAE, like Ola Bini's <a href="http://olabini.com/blog/2009/04/jruby-on-rails-on-google-app-engine/" target="_blank">mini blog app</a>. Guess that was the first one really, as he was beta testing the service in secret. Google App Engine imposes a few catches to any java application deployed there and any JRuby app wouldn't be different. For instance, your Java API access is limited to <a href="http://code.google.com/appengine/docs/java/jrewhitelist.html" target="_blank">these classes - called JRE Class whitelist</a>.

As you can see on his blog, you don't need active record and in fact shouldn't even be loading that on your app.

I felt compelled to try it and the timing was perfect. I am currently developing a JRuby on Rails app at the company I work for and it was a perfect fit, since we are not using ActiveRecord. The reason is that we get the data we need from other sources, such as web services and even text files.

Ola Bini's tips were crucial here. He provides a small script you can use to prepare the jars you're sending to your app. Another important piece was the <a href="http://code.google.com/appengine/downloads.html#Google_App_Engine_SDK_for_Java" target="_blank">Google App Engine SDK for Java</a>. It ships with a server that emulates GAE's behaviour locally so you're less likely to have problems once you deploy it.

I did have a problem though with the number of files uploaded to my appspot. It's currently limited to 1000 - a thousand - and a Rails app can easily exceed this limit. So before deploying, remove anything that is not crucial: activerecord - you should've done it already - , all tests directories - including the ones inside gems your app needs in order to work, fixtures and etc.

After that it was rewarding seeing a custom JRuby On Rails application working perfectly on GAE. And as much as I'd like to, I can't really share the URL since it's a private app but I encourage people to try it. I believe GAE will ultimately help the community improve JRuby even more.

And as a last tip, this time thanks to <a href="http://akitaonrails.com/" target="_blank">Fabio Akita</a>, is <a href="http://gist.github.com/91684" target="_blank">this snippet</a>. You should redirect your log so you can debug your app form GAE's dashboard.

Have fun!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>114</wp:post_id>
		<wp:post_date>2009-04-10 04:14:53</wp:post_date>
		<wp:post_date_gmt>2009-04-10 11:14:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jruby-on-rails-and-google-app-engine</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1239362095]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236677]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>2161</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.5.69.98</wp:comment_author_IP>
		<wp:comment_date>2009-04-10 10:46:13</wp:comment_date>
		<wp:comment_date_gmt>2009-04-10 17:46:13</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi David! That does look really cool! 

Tks for sharing! :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>2162</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.5.69.98</wp:comment_author_IP>
		<wp:comment_date>2009-04-10 10:47:58</wp:comment_date>
		<wp:comment_date_gmt>2009-04-10 17:47:58</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Tks for dropping by Charles!
I'll follow closely the revolution! :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>2154</wp:comment_id>
		<wp:comment_author><![CDATA[JRuby/Rails and the Google App Engine &laquo; HostedFTP.com - Cloud based News &amp; Resources]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://hostedftp.wordpress.com/2009/04/10/jrubyrails-and-the-google-app-engine/</wp:comment_author_url>
		<wp:comment_author_IP>66.135.48.206</wp:comment_author_IP>
		<wp:comment_date>2009-04-10 07:38:52</wp:comment_date>
		<wp:comment_date_gmt>2009-04-10 14:38:52</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] Continue Reading [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>2156</wp:comment_id>
		<wp:comment_author><![CDATA[David Calavera]]></wp:comment_author>
		<wp:comment_author_email>david.calavera@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://thinkincode.net</wp:comment_author_url>
		<wp:comment_author_IP>88.6.21.73</wp:comment_author_IP>
		<wp:comment_date>2009-04-10 08:26:04</wp:comment_date>
		<wp:comment_date_gmt>2009-04-10 15:26:04</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Leonardo, I wrote a template that applies all these stuff to a rails app. Enjoy it XD.

http://thinkincode.net/2009/4/9/rails-template-for-google-app-engine]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4257</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges &raquo; Blog Archive &raquo; Google IO: Thoughtworks on GAE]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com/writings/2009/06/22/google-io-thoughtworks-on-gae/</wp:comment_author_url>
		<wp:comment_author_IP>208.113.213.109</wp:comment_author_IP>
		<wp:comment_date>2009-06-22 14:11:00</wp:comment_date>
		<wp:comment_date_gmt>2009-06-22 21:11:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] of the Google App Engine, you don&#8217;t have access to a relational database, thing I found out when I first tried it.  Instead you get a Big [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>2159</wp:comment_id>
		<wp:comment_author><![CDATA[Charles Oliver Nutter]]></wp:comment_author>
		<wp:comment_author_email>charles.nutter@sun.com</wp:comment_author_email>
		<wp:comment_author_url>http://blog.headius.com</wp:comment_author_url>
		<wp:comment_author_IP>216.160.3.79</wp:comment_author_IP>
		<wp:comment_date>2009-04-10 09:48:07</wp:comment_date>
		<wp:comment_date_gmt>2009-04-10 16:48:07</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks for the write-up, Leonardo. We're very excited about JRuby on GAE too, and have been working with several folks from the Ruby community to automate the process. We also have ideas for solving the 1000-file limit. Very soon, we should be able to announce some cool helper projects that make GAE just about the simplest way to deploy Rails apps.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Expert opinions on Pair programming</title>
		<link>http://www.leonardoborges.com/writings/?p=117</link>
		<pubDate>Thu, 16 Apr 2009 08:54:12 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=117</guid>
		<description></description>
		<content:encoded><![CDATA[I guess <a href="http://www.extremeprogramming.org/rules/pair.html" target="_blank">Pair programming</a> is one of the most controversial <a href="http://www.extremeprogramming.org/rules.html">XP rule's</a>. In a good way. Most people are able to acknowledge the benefits of using such practice. Some are <a href="http://blog.obiefernandez.com/content/2008/08/the-hashrocket-way-pair-programming.html" target="_blank">extreme</a>, some like it but not all the time and some other just hate it and won't do it at all.

I belong to the second group because I believe in the benefits of pair programming such as hight quality code, knowledge sharing and collective code ownership. Yet, I don't think it's the best to do all the time.

Note that I'm not here to say people that are inside the other groups are wrong. No they're not, they just chose what's best for them. And here I wanna express my opinion along with some expert's opinions from which I respect.

Personally I suffer of what I like to call <em><strong>the Heavy Metal effect</strong></em>. When I put my ear plugs on with a loud heavy metal record, I can go for hours and hours without being distracted. That's when I reach my maximum productivity rate. I can get so focused that the music actually acts as a barrier to the outside world. It's not like I listen to the words they're singing - some of which are unintelligible anyway - but it's just a dense layer of abstraction that I'm used to. And that is one of the reasons I like working alone.

As everything in life, it's no silver bullet. It doesn't work all the time. For my specific case, <em><strong>the Heavy Metal effect</strong></em> is efficient on 2 sets of tasks: research and tasks that require high creativity.

When you're researching it's really not that useful to have someone pairing with you. I need to try things. Stupid things to prove a concept, code that won't go to production at all. E.g.: I was working on how to integrate the rails front-end of our application with our java back-end using JRuby. It's a 100% research task. I wasn't sure of how that would turn out, and having someone with me wouldn't help much - unless he was a JRuby specialist from which I'd be eager to learn.

And with tasks that require high creativity I can only think of this: Software engineering is a creative process that is only perfected by practicing over and over. And sometimes practicing your creative capabilities on your own is a very positive thing, as you develop and improve your own way of thinking.

The obvious  down sides are exactly what you get from pairing: higher quality code and knowledge sharing, for which I have one suggestion: Code Review.

We began to use this approach here as we have a mix of pairing and working alone from time to time. I believe you get a lot of benefit from reviewing code. You learn how your team mates think and you are imersed with a fresh mind into the problem they worked on for some time, gaining knowledge of it and being able to propose improvements.

The bottom line is, I don't think we need to be extremists. We can get lots of value from both practices - doing code review when not pairing of course - if used wisely. I guess a healthy mix would keep the team motivated, with a high quality output, and encouraged to make their minds work.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date>2009-04-16 01:54:12</wp:post_date>
		<wp:post_date_gmt>2009-04-16 08:54:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>expert-opinions-on-pair-programming</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password>J0Bz*U*Pk^&m1p5</wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1240219679]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Git cheat sheet</title>
		<link>http://www.leonardoborges.com/writings/2009/04/22/git-cheat-shee/</link>
		<pubDate>Wed, 22 Apr 2009 07:25:32 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Git]]></category>

		<category domain="category" nicename="git"><![CDATA[Git]]></category>

		<category domain="tag"><![CDATA[Git]]></category>

		<category domain="tag" nicename="git"><![CDATA[Git]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=107</guid>
		<description></description>
		<content:encoded><![CDATA[For those who don't know <a href="http://git-scm.com/" target="_blank">Git</a> is a version control system developed  by <a href="http://en.wikipedia.org/wiki/Linus_Torvalds" target="_blank">Linus Torvalds</a>. It's main difference from other tools like SVN and CVS is the fact that it's distributed.

Recently I gave a workshop about Git here at the company where I walked through the most common cases I usually see when working in a team and thought about posting a summary of the commands used in the workshop.

It turns out that just this morning I found <a href="http://ktown.kde.org/~zrusin/git/git-cheat-sheet-medium.png">this - a.k.a the rest of my post</a>. It's a really nice and concise Git Cheat Sheet that covers most of what I talked about  in the workshop. So I highly recommend you bookmark it. It will certainly be useful.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date>2009-04-22 00:25:32</wp:post_date>
		<wp:post_date_gmt>2009-04-22 07:25:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-cheat-shee</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1240385231]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236669]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>2557</wp:comment_id>
		<wp:comment_author><![CDATA[Miguel Regedor]]></wp:comment_author>
		<wp:comment_author_email>miguelregedor@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://regedor.com</wp:comment_author_url>
		<wp:comment_author_IP>80.177.214.5</wp:comment_author_IP>
		<wp:comment_date>2009-04-23 03:24:43</wp:comment_date>
		<wp:comment_date_gmt>2009-04-23 10:24:43</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[good, good... excellent cvs I use it every day. SVN is dead =p]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Rcov, JRuby and rcov_plugin</title>
		<link>http://www.leonardoborges.com/writings/2009/05/05/rcov-jruby-and-rcov_plugin/</link>
		<pubDate>Tue, 05 May 2009 13:52:46 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[JRuby]]></category>

		<category domain="category" nicename="jruby"><![CDATA[JRuby]]></category>

		<category domain="tag"><![CDATA[JRuby]]></category>

		<category domain="tag" nicename="jruby"><![CDATA[JRuby]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

		<category domain="tag"><![CDATA[Testing]]></category>

		<category domain="tag" nicename="testing"><![CDATA[Testing]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=129</guid>
		<description></description>
		<content:encoded><![CDATA[The <a href="http://github.com/commondream/rcov_plugin/tree/master" target="_blank">rcov_plugin</a> project is a rails plugin for <a href="http://eigenclass.org/hiki.rb?rcov" target="_blank">rcov</a> that adds some useful rake tasks to your application.  And since I'm currently working in a JRuby project it made sense to use this plugin.

The thing is, among other stuff, an rcov report from a JRuby project includes some files that shouldn't be there at all, plus you also need to change the way you call rcov as such. Thus, I thought I'd contribute these changes to the plugin and my pull request was approved this morning - just install the latest version and you should be good to go.

It was useful for us here, hope it might be useful for you too.

Enjoy :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>129</wp:post_id>
		<wp:post_date>2009-05-05 06:52:46</wp:post_date>
		<wp:post_date_gmt>2009-05-05 13:52:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rcov-jruby-and-rcov_plugin</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1241532005]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[214047550]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Rails&#039; readable test names: run individual tests from the console</title>
		<link>http://www.leonardoborges.com/writings/2009/05/16/rails-readable-test-names-run-individual-tests-from-the-console/</link>
		<pubDate>Sat, 16 May 2009 15:45:22 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=133</guid>
		<description></description>
		<content:encoded><![CDATA[As you probably know, since rails 2.1 you can write test methods in the following format:

<pre lang="ruby">
test "hotel should return its permalink" do
  #your test code here
end
</pre>

Which is great, as the test name becomes much more clear. But you can't simply run this test easily from the command line. You'd have to run something like:

<pre lang="bash">
$ ruby your_test_file.rb -n test_hotel_should_return_its_permalink
</pre>

It annoys me. And it's not practical either to make the test fail just so you can get the test's real name.
I wanted to be able to just copy and paste the readable name in the console and have Test::Unit do the conversion and run it for me, like this:

<pre lang="bash">
$ ruby your_test_file.rb -n "hotel should return its permalink"
</pre>

So I created <a href="http://github.com/leonardoborges/readable_test_names_runner/tree/master" target="_blank">readable_test_names_runner</a>. It's a tiny rails plugin that adds this feature for you.

Enjoy.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date>2009-05-16 08:45:22</wp:post_date>
		<wp:post_date_gmt>2009-05-16 15:45:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-readable-test-names-run-individual-tests-from-the-console</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1293693109]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236737]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>3472</wp:comment_id>
		<wp:comment_author><![CDATA[eric]]></wp:comment_author>
		<wp:comment_author_email>adiscgolfer@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>99.50.45.70</wp:comment_author_IP>
		<wp:comment_date>2009-05-16 10:41:40</wp:comment_date>
		<wp:comment_date_gmt>2009-05-16 17:41:40</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Man, another solid contribution.  Thanks!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Railswaycon: JRuby Internals by Ola Bini</title>
		<link>http://www.leonardoborges.com/writings/2009/05/29/railswaycon-jruby-internals-by-ola-bini/</link>
		<pubDate>Fri, 29 May 2009 07:45:21 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Conferences]]></category>

		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>

		<category domain="tag"><![CDATA[Conferences]]></category>

		<category domain="tag" nicename="conferences"><![CDATA[Conferences]]></category>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category><![CDATA[JRuby]]></category>

		<category domain="category" nicename="jruby"><![CDATA[JRuby]]></category>

		<category domain="tag"><![CDATA[JRuby]]></category>

		<category domain="tag" nicename="jruby"><![CDATA[JRuby]]></category>

		<category domain="tag"><![CDATA[railswaycon]]></category>

		<category domain="tag" nicename="railswaycon"><![CDATA[railswaycon]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=138</guid>
		<description></description>
		<content:encoded><![CDATA[As always I expected a good talk from Ola and once more he delivered it. But this one was different. It might have been even boring to some ruby developers since we saw a fair amount of java code in this presentation. Ola gave us a tour through the main classes that make JRuby possible with a single purpose: so we can check out the code and hack ourselves. You can download his slides <a href="http://olabini.com/presentations/JRubyInternals.pdf" target="_blank">here</a>.

If you've been following both JRuby and Ola Bini for the past year or so, you've noticed the trend and evolution of this alternative - and so far the most complete one - implementation of the ruby language. Specially at conferences.

Last year at QCon London, Ola was also talking about JRuby. At Euruko '08, in Prague, <a href="http://blog.headius.com/" target="_blank">Charles Nutter</a> also talked about it. RailsConf in Berlin also had its share. What all these talks had in common is that they talked about JRuby from a user/developer point of view. They were selling the solution. Convincing people to use it and presenting successful use cases.

And as the trend goes on, JRuby is now faced as a true alternative - one that we, btw, believe here at the company as we're <strong>actively using it</strong> - and it seems that now the call is for help. Help to make JRuby an even more complete and overall better ruby implementation. Charles' <a href="http://blog.headius.com/2009/05/help-jruby-by-fixing-rubyspecs.html">call for help</a> was a great step. As he states, it's a good way to get your feet wet. I answered the call and am hacking JRuby myself, having already submitted a couple of patches. Perhaps this was the reason for which I enjoyed the talk the  most. I was already familiar with some of the structure and classes in JRuby.

There were 2 more talks about JRuby: <strong>The Pleasure and Pain of Migrating to jRuby</strong>, by <a href="http://twitter.com/stevenbristol" target="_blank">Steven Bristol</a> and <strong>Integrating Enterprise Java with JRuby and Rails</strong>, <a href="http://twitter.com/malagant" target="_blank">Michael Johann</a>. Unfortunately only the first one was a real case experience, where Steven walked through the problems he faced integrating JRuby with an existing java project. Interesting insights.

Michael Johann basically presented a short tutorial on how to integrate rails with EJB3 which, albeit interesting, failed to address issues faced on real life projects, like dependency management. Issues which we have already addressed in a very cool way here and I plan to share it soon. Still deciding how though...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date>2009-05-29 00:45:21</wp:post_date>
		<wp:post_date_gmt>2009-05-29 07:45:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>railswaycon-jruby-internals-by-ola-bini</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1243583554]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210277034]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Coding Dojo #1 - the fun begins</title>
		<link>http://www.leonardoborges.com/writings/2009/06/06/coding-dojo-1-the-fun-begins/</link>
		<pubDate>Sat, 06 Jun 2009 22:27:21 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[CodingDojo]]></category>

		<category domain="category" nicename="codingdojo"><![CDATA[CodingDojo]]></category>

		<category domain="tag"><![CDATA[CodingDojo]]></category>

		<category domain="tag" nicename="codingdojo"><![CDATA[CodingDojo]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=146</guid>
		<description></description>
		<content:encoded><![CDATA[Yesterday I organized our first <a href="http://codingdojo.org" target="_blank">CodingDojo</a> here at the company and I'm glad to say it was a great success!
The problem chosen was the <a href="http://codekata.pragprog.com/2007/01/kata_two_karate.html" target="_blank">Karate Chop</a>, from Dave Thomas' <a href="http://codekata.pragprog.com/" target="_blank">Code Kata</a>.

As it was also my first time organizing a Dojo, we took some time to get things straight, explain everyone the rules and start coding. Nothing that would compromise the experience, though.

The rules were basically the ones of a <a href="http://codingdojo.org/cgi-bin/wiki.pl?back=RandoriKata" target="_blank">RandoriKata</a> and as a mechanism for switching pairs we chose the <a href="http://codingdojo.org/cgi-bin/wiki.pl?back=TimeBox" target="_blank">TimeBox</a> with a limit of 5 minutes.

We came up with 3 different solutions in about 1h 30min. The 1st one looking like crap! :)

Which was actually interesting because the general feeling before we started was that it would be boring, or too easy since "everyone" knows what a binary chop/search is.
Wrong!!! It all changes when you have a time limit and a bunch of people behind you doing funny noises! It's a pressure different from your day to day job. A healthy one in my opinion.

Hearing the feedback afterwards was rewarding. Everyone seemed to have had a lot of fun and can't wait for the next one.

I guess the most important lesson we got from it was to be quiet and not bother the current pair when we do not agree with their idea - not even if we do. This one is very important as it both shows respect and allows you to learn from how your colleagues think.

Next thursday we'll keep going with this one and hopefully finish and pick up the next problem! :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>146</wp:post_id>
		<wp:post_date>2009-06-06 15:27:21</wp:post_date>
		<wp:post_date_gmt>2009-06-06 22:27:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>coding-dojo-1-the-fun-begins</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1244327243]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[248322605]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>How do you keep yourself focused?</title>
		<link>http://www.leonardoborges.com/writings/2009/06/08/how-do-you-keep-yourself-focused/</link>
		<pubDate>Mon, 08 Jun 2009 22:03:01 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Productivity]]></category>

		<category domain="category" nicename="productivity"><![CDATA[Productivity]]></category>

		<category domain="tag"><![CDATA[Productivity]]></category>

		<category domain="tag" nicename="productivity"><![CDATA[Productivity]]></category>

		<category domain="tag"><![CDATA[Programming]]></category>

		<category domain="tag" nicename="programming"><![CDATA[Programming]]></category>

		<category><![CDATA[Programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

		<category domain="tag"><![CDATA[Tools]]></category>

		<category domain="tag" nicename="tools"><![CDATA[Tools]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=155</guid>
		<description></description>
		<content:encoded><![CDATA[This is basically a compilation of a few tools/habits that I use to keep focused and at a high level of productivity when working alone. Works great for me and I hope there are useful tips for you as well.

<dl> <dt><strong>Music</strong></dt> <dd>This is one of my favorites. When working alone I hate having noisy people around, which happens quite often if you work in an open office space like me. - It is great for pair programming but I find it inefficient otherwise. Thus, I came up with the term <strong>the Heavy Metal effect</strong>. Ok, just fit your favorite music genre there but the important thing is that it must act as a barrier to the outside world. It won't work if you put something new and start babbling the lyrics!</dd> <dt><strong>Password Manager</strong></dt> <dd>In my day to day I have a number of web sites open like API documents, programming related groups, email... There are also the ones you open a few times a day like the company bug tracker, review board and etc. I find that having a password manager, in my case <a href="https://lastpass.com/" target="_blank">LastPass</a>, saves a lot of time. The big advantage of it over similar tools like 1Password is that it works on mac, linux or windows. It's just a firefox plugin.</dd> <dt><strong>Multiple Workspaces</strong></dt> <dd>Probably the most obvious item on this list to developers but I's never too much to reinforce it. Multiple workspaces are great. And they are available in whatever platform you happen to be locked in. In my case, I split my environment in at least 3 workspaces:
-<strong>Development</strong> - where I keep things like my IDE, Browser and Terminal
-<strong>Documentation</strong> - where I keep API documents, tutorials and related stuff
-<strong>Communication</strong> - where I have my email, both personal and business, twitter and etc. This allows me to easily set a time per day to do each of my stuff without having noise from things that aren't important to what I'm focusing in that very moment. </dd> <dt><strong>App Launcher</strong></dt> <dd>A must! On Mac I use <a href="http://www.versiontracker.com/dyn/moreinfo/macosx/22549" target="_blank">QuickSilver</a> and on Linux, <a href="http://do.davebsd.com/release.shtml" target="_blank">Gnome Do</a>. I won't say much here. If you don't use some sort of application launcher, do yourself a favor, stop reading and install one. You have no idea of how comfortable and time saver they are.</dd> <dt><strong>Batch tasks</strong></dt> <dd>Maybe this wasn't the best title but I couldn't think of anything better.
As a result of having a communication workspace that I use a few times a day, I find stuff that I'm interested in but don't have the time to dig at the moment. So I need a way to queue that and read later when I'm home. The tools of the trade in this case are <a href="http://www.twitter.com" target="_blank">Twitter</a> + <a href="http://blog.evernote.com/2009/04/14/evernote_twitter/" target="_blank">Evernote</a>.
Evernote is roughly a to-do manager. And since they released their Twitter integration it's been dead easy to queue those things I talked about earlier. Just send a direct message to evernote and the item gets added instantly. </dd> </dl>Now, what about you? What works for you?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>155</wp:post_id>
		<wp:post_date>2009-06-08 15:03:01</wp:post_date>
		<wp:post_date_gmt>2009-06-08 22:03:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-do-you-keep-yourself-focused</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1244498584]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236768]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>4139</wp:comment_id>
		<wp:comment_author><![CDATA[Pedro Pimentel]]></wp:comment_author>
		<wp:comment_author_email>zukunft@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.pedropimentel.com</wp:comment_author_url>
		<wp:comment_author_IP>213.37.28.250</wp:comment_author_IP>
		<wp:comment_date>2009-06-11 07:49:01</wp:comment_date>
		<wp:comment_date_gmt>2009-06-11 14:49:01</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[One option would be buying active noise canceling earphones that even without listening to music, they can reduce a lot the outside noise.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4125</wp:comment_id>
		<wp:comment_author><![CDATA[Diego Plentz]]></wp:comment_author>
		<wp:comment_author_email>diego@plentz.org</wp:comment_author_email>
		<wp:comment_author_url>http://plentz.org</wp:comment_author_url>
		<wp:comment_author_IP>201.21.76.254</wp:comment_author_IP>
		<wp:comment_date>2009-06-09 04:46:26</wp:comment_date>
		<wp:comment_date_gmt>2009-06-09 11:46:26</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey Leonardo. Avoid the outside noise is even easier with good isolating earbuds. I used a Etymothic E6Ri, but they are too fragile. Today I using a Shure S110, which are way more durable and sound quality is pretty cool. Worth the price.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4126</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>self@leonardoborges.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.2.199.201</wp:comment_author_IP>
		<wp:comment_date>2009-06-09 04:52:32</wp:comment_date>
		<wp:comment_date_gmt>2009-06-09 11:52:32</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Diego! Tks for the tip. I'll check'em out.

Currently I'm using the ear buds that came with my Panasonic ear phones. They're already good enough but it won't heart to try better ones.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>10482</wp:comment_id>
		<wp:comment_author><![CDATA[noise cancelling earbuds]]></wp:comment_author>
		<wp:comment_author_email>Annadbellovi@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://noisecancellingearbudsreview.info/</wp:comment_author_url>
		<wp:comment_author_IP>119.70.40.101</wp:comment_author_IP>
		<wp:comment_date>2010-05-27 04:13:36</wp:comment_date>
		<wp:comment_date_gmt>2010-05-27 11:13:36</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Most earbuds fit snugly in your ear and block the opening to your ear canal. This alone is a somewhat effective way to block at least some noise. By  definition it is a noise isolating mechanism. Earphones that are marketed as noise isolating are manufactured with extra attention to how snugly they fit in your ear. Most of these models try to seal off your ear canal more thoroughly by extending the earbud into your ear canal.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Projects</title>
		<link>http://www.leonardoborges.com/writings/projects/</link>
		<pubDate>Sun, 14 Jun 2009 12:53:54 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?page_id=165</guid>
		<description></description>
		<content:encoded><![CDATA[Here I keep a list of the open-source projects that I've either started or contributed to.
<ul>
	<li><a href="http://github.com/leonardoborges/app_constants">AppConstants</a> - A clean way to manage your application's per-environment constants (creator)</li>
	<li><a href="https://github.com/leonardoborges/jquery-daterange-picker">jquery-daterange-picker-spec</a> - A small and simple utility built on top of jQuery UI's datepicker that provides "validation" for date ranges (creator)</li>
	<li><a href="http://github.com/rails/rails/tree/master" target="_blank">Ruby on Rails</a> - a full stack MVC framework for Ruby (contributor)</li>
	<li><a href="http://github.com/jruby/jruby/tree/master" target="_blank">JRuby</a> - <span id="repository_description">an implementation of Ruby on the JVM </span>(contributor)</li>
	<li><a title="paranoia" href="https://github.com/radar/paranoia" target="_blank">paranoia</a> - acts_as_paranoid for Rails 3 (contributor)</li>
	<li><a title="Savon" href="http://github.com/rubiii/savon" target="_blank">Savon</a> - Heavy metal Ruby SOAP client (contributor)</li>
	<li><span id="repository_description"><a href="http://github.com/leonardoborges/readable_test_names_runner/tree/master">Readable test names runner</a> - </span><span id="repository_description">Run individual tests in rails using its readable names </span>(creator)</li>
	<li><span id="repository_description"><a href="http://github.com/commondream/rcov_plugin/tree/master">Rcov_plugin</a> - </span><span id="repository_description">Rails plugin for rcov </span>(contributor)</li>
</ul>
Fun/other projects:
<ul>
	<li><a href="http://rottingnames.heroku.com/" target="_blank">RottingNames</a> (<a href="http://itunes.apple.com/au/app/rottingnames/id413043377?mt=8">iPhone version available for free</a>)- A metal band's name generator that will rock your world :P</li>
	<li><a href="http://iemoneydrain.heroku.com/" target="_blank">The IE Money Drain</a> - An attempt to show the world how much is wated supporting this bad idea</li>
</ul>
You can also check what else I've been up to in my <a href="https://github.com/leonardoborges">GitHub profile</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date>2009-06-14 05:53:54</wp:post_date>
		<wp:post_date_gmt>2009-06-14 12:53:54</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>projects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1302488337]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_page_template</wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Eclipse Debug Configurations Wizard</title>
		<link>http://www.leonardoborges.com/writings/2009/06/14/helping-the-jruby-effort-debugging-the-source/picture-2/</link>
		<pubDate>Sun, 14 Jun 2009 15:35:11 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/06/picture-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Eclipse Debug Configurations Wizard]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date>2009-06-14 08:35:11</wp:post_date>
		<wp:post_date_gmt>2009-06-14 15:35:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>picture-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>170</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/06/picture-2.png</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2009/06/picture-2.png]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"800";s:6:"height";s:3:"641";s:14:"hwstring_small";s:23:"height='96' width='119'";s:4:"file";s:21:"2009/06/picture-2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"picture-2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"picture-2-300x240.png";s:5:"width";s:3:"300";s:6:"height";s:3:"240";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Helping the JRuby effort: Debugging the source</title>
		<link>http://www.leonardoborges.com/writings/2009/06/14/helping-the-jruby-effort-debugging-the-source/</link>
		<pubDate>Sun, 14 Jun 2009 16:00:27 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category><![CDATA[JRuby]]></category>

		<category domain="category" nicename="jruby"><![CDATA[JRuby]]></category>

		<category domain="tag"><![CDATA[JRuby]]></category>

		<category domain="tag" nicename="jruby"><![CDATA[JRuby]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[Wanna help improve JRuby? Make sure you read <a href="http://blog.headius.com/2009/05/help-jruby-by-fixing-rubyspecs.html" target="_blank">this</a> post by Charles Nutter first. There he explains how to run Ruby specs with JRuby.

Start with fixing Ruby specs is a great way to get acquainted with the code. And it's also a important task in order to make sure JRuby is the most complete and compatible ruby implementation out there.

But before you get your hands dirty, it will be a lot easier if you can actually debug JRuby's source while fixing any specs - or bugs/features for that matter.

Taking as an example one of the specs I fixed, this is how you run it - form within your jruby source directory:
<pre lang="bash">$ bin/jruby spec/mspec/bin/mspec spec/ruby/language/class_spec.rb</pre>
This is using jruby to execute the mspec binary against the class_spec.rb script. Now, if you want to debug this script instead of only running it, try this:
<pre lang="bash">$ bin/jruby -J-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=4000 \
 -J-Xdebug \
 spec/mspec/bin/mspec -T-X+C spec/ruby/language/class_spec.rb</pre>
The extra arguments will start a debugging session on port 4000 and suspend the VM, which will be waiting for another debug process to attach. You can do that using any IDE of your choice but I'll use Eclipse for this example.

Go to the Run menu and select the "Debug Configurations..." item. You'll see a screen similar to the one shown below:

[caption id="attachment_186" align="alignnone" width="300" caption="Eclipse Debug Configurations Wizard"]<a href="http://www.leonardoborges.com/writings/wp-content/uploads/2009/06/picture-2.png"><img class="size-medium wp-image-186" title="Eclipse Debug Configurations Wizard" src="http://www.leonardoborges.com/writings/wp-content/uploads/2009/06/picture-2-300x240.png" alt="Eclipse Debug Configurations Wizard" width="300" height="240" /></a>[/caption]

As you can see, you need to create a new "Remote Java Application" configuration, setting the port to the same one you used to start the debugger session - 4000 in our case. Don't forget to add JRuby's source code in the Source tab on this same screen.

Once you're done, set a breakpoint anywhere in JRuby's sources and run the newly created configuration.

That's it! Enjoy!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2009-06-14 09:00:27</wp:post_date>
		<wp:post_date_gmt>2009-06-14 16:00:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>helping-the-jruby-effort-debugging-the-source</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1245704440]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236798]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>12216</wp:comment_id>
		<wp:comment_author><![CDATA[roger]]></wp:comment_author>
		<wp:comment_author_email>rogerdpack@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://betterlogic.com/roger</wp:comment_author_url>
		<wp:comment_author_IP>216.49.181.254</wp:comment_author_IP>
		<wp:comment_date>2010-08-20 11:24:58</wp:comment_date>
		<wp:comment_date_gmt>2010-08-20 18:24:58</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[also note that for at least NetBeans 6.9, it's "Debug -&gt; Attach Debugger -&gt; Socket Attach + 4000]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>12215</wp:comment_id>
		<wp:comment_author><![CDATA[roger]]></wp:comment_author>
		<wp:comment_author_email>rogerdpack@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://betterlogic.com/roger</wp:comment_author_url>
		<wp:comment_author_IP>216.49.181.254</wp:comment_author_IP>
		<wp:comment_date>2010-08-20 11:11:09</wp:comment_date>
		<wp:comment_date_gmt>2010-08-20 18:11:09</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[So is there any way to do it all in netbeans? Also is there any way to avoid having to recompile "the whole thing" each time which takes like 10 seconds?
Thanks.
-r]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>12225</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>124.168.35.220</wp:comment_author_IP>
		<wp:comment_date>2010-08-20 18:37:46</wp:comment_date>
		<wp:comment_date_gmt>2010-08-21 01:37:46</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Roger!

I'm sorry but I can't help with NetBeans. It's really not one of the IDE's I use.... but I'm guessing it shouldn't be all that different from Eclipse.

About recompiling it, I don't think there is a way. Unless you had the code running on a VM that supports hot deploy. I'm might me wrong here but I can't think of any other way.

Thanks for stopping by!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>12215</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Google IO: Thoughtworks on GAE</title>
		<link>http://www.leonardoborges.com/writings/2009/06/22/google-io-thoughtworks-on-gae/</link>
		<pubDate>Mon, 22 Jun 2009 21:10:50 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category><![CDATA[JRuby]]></category>

		<category domain="category" nicename="jruby"><![CDATA[JRuby]]></category>

		<category domain="tag"><![CDATA[JRuby]]></category>

		<category domain="tag" nicename="jruby"><![CDATA[JRuby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=194</guid>
		<description></description>
		<content:encoded><![CDATA[I've just watched a <a href="http://www.youtube.com/watch?v=-4fA_UciDaA">video</a> from <a href="http://code.google.com/events/io/">Google IO</a> where <a href="http://code.google.com/events/io/">Martin Fowler</a> and Rebecca Parsons went through some of the aspects that involves the development of an application for the cloud - focusing on the JVM.

In terms of the Google App Engine, you don't have access to a relational database, thing I found out <a href="http://www.leonardoborges.com/writings/2009/04/10/jruby-on-rails-and-google-app-engine/">when I first tried it</a>.  Instead you get a <a href="http://labs.google.com/papers/bigtable.html">Big Table</a>.

Martin put out a good analogy and you can just think of it as a nested hash map. It's certainly a shift on how we think these days, but layers of abstraction like google's DataStore and the Java Persistence API will help in the transition.

Another interesting bit about the presentation was on how concurrency works on GAE.

Essentially, in an standard Java application you have a single memory space where you have at least one running thread. You can create threads on the fly, which will share the same memory space, thus making it easy to share data.

On the app engine, things work differently. What you have are separate memory spaces with a single thread on each one. Any attempt to create a new thread will result in an exception. The solution for sharing information in this case? Use the nested hash map (big table).

Now, whereas you might not be worried about this since your application doesn't span any threads, as well pointed by Martin Fowler, it's the code you don't see that you need to be careful with. Any Java application uses a number of 3rd party libraries that might span out threads of their own, which will result in your application blowing up.

That rang a bell. Again, back when <a href="http://www.leonardoborges.com/writings/2009/04/10/jruby-on-rails-and-google-app-engine/">I was trying the app engine</a>, one of the configuration bits shared by <a href="http://olabini.com/blog/2009/04/jruby-on-rails-on-google-app-engine/">Ola Bini</a> looked like this:
<pre>   config.webxml.jruby.min.runtimes = 1
   config.webxml.jruby.max.runtimes = 1
   config.webxml.jruby.init.serial = true</pre>

I think the properties are pretty much self-explanatory but I didn't quite understand the reason for setting it back then.

If you happen to have bigger values for the number of runtimes you want, you need to set the serial property to true, otherwise JRuby will span several threads to create the runtimes.

This is a really good example of things that might fail whether you're migrating or developing a new app to deploy on the App Engine. Luckily for us, JRuby has a smart and neat way to handle this - the configuration I've just shown, but most of the libraries out there that might rely on threads are not prepared.

Martin and Rebecca's opinion on this is that new releases of these same libraries will start to take it into account, since a bigger adoption of the Cloud seem to be on the way.

Make sure you watch the video. I certainly left a lot of interesting stuff out.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>194</wp:post_id>
		<wp:post_date>2009-06-22 14:10:50</wp:post_date>
		<wp:post_date_gmt>2009-06-22 21:10:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-io-thoughtworks-on-gae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1245705052]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236919]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>4745</wp:comment_id>
		<wp:comment_author><![CDATA[name]]></wp:comment_author>
		<wp:comment_author_email>name@name.name</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>84.227.14.175</wp:comment_author_IP>
		<wp:comment_date>2009-07-26 04:45:13</wp:comment_date>
		<wp:comment_date_gmt>2009-07-26 11:45:13</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Spring is just a way to wire your java objects together. That is orthogonal to using EJBs.

If you use Spring to configure Java Web applications a lot of the restrictions make sense. For example you wouldn't want an application to create widgets, shut down the VM, work around access restrictions, access "forbidden" classes (com.sun, ...) and so forth.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4613</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2009-07-16 04:13:50</wp:comment_date>
		<wp:comment_date_gmt>2009-07-16 11:13:50</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi again!

Tks for the interesting discussion. I haven't had any experiences with breaking libraries either, it's just something to consider.

And regarding the restriction, they seem to be specific to EJB's... which is a whole different story I guess. It's common to have Web Java apps that make no use of EJB's, using Spring or something similar instead.

Do these restriction apply in such environment?]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4468</wp:comment_id>
		<wp:comment_author><![CDATA[name]]></wp:comment_author>
		<wp:comment_author_email>name@name.name</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>84.226.133.208</wp:comment_author_IP>
		<wp:comment_date>2009-07-05 14:41:36</wp:comment_date>
		<wp:comment_date_gmt>2009-07-05 21:41:36</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I never questioned that you're not allowed to create threads in GAE. I question that in GAE each thread has it's own address space. If that was true everything of JEE would fall apart. You couldn't have context listeners, you couldn't have servlets or filters, you couldn't have a servlet context, you name it. And you would violate the Java language spec. I highly doubt this is the case.

I further question that not being able to create threads breaks a whole lot of libraries. In my experience it has broken none. What however breaks many libraries is that GAE doesn't allow access to certain standard Java packages like stax, jaxb and jndi. BTW not being able to create threads is in line with Java Exterprise tier restrictions [1].

Sticky sessions are a way to associate an http session with a JVM resulting in all requests of that session to hit the same JVM. If you don't have this each request can hit a different JVM which is exactly the semantics of GAE. This means that GAE has to replicate all sessions (put them in the data store) which hurts performance.

 [1] http://java.sun.com/blueprints/qanda/ejb_tier/restrictions.html]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4408</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>83.43.6.177</wp:comment_author_IP>
		<wp:comment_date>2009-07-01 13:43:22</wp:comment_date>
		<wp:comment_date_gmt>2009-07-01 20:43:22</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I might be misunderstanding something here but aren't sticky sessions a way to improve session replication?

Anyway, what happens on GAE is that your application is just not allowed to create threads as stated in the link I mentioned in my last reply, and that's what I highlighted in the post,since you might be using libraries that are likely not to be ready for such an environment.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4404</wp:comment_id>
		<wp:comment_author><![CDATA[name]]></wp:comment_author>
		<wp:comment_author_email>name@name.name</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>194.126.144.2</wp:comment_author_IP>
		<wp:comment_date>2009-07-01 10:15:41</wp:comment_date>
		<wp:comment_date_gmt>2009-07-01 17:15:41</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I find it extremely unlikely that there is just one thread per JVM. Just because you can't create threads doesn't mean you're don't run in a worker thread of the servlet container as it's standard in JEE.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4406</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>83.43.6.177</wp:comment_author_IP>
		<wp:comment_date>2009-07-01 11:46:36</wp:comment_date>
		<wp:comment_date_gmt>2009-07-01 18:46:36</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hello unnamed user :)

Note that I didn't say one thread per JVM. I said that each thread has it's own memory space, which makes things work differently as I described.
Each request to your app is handled by a different web server, to allow google to scale it easily. And multiple requests from the same user might be going to complete distinct servers.

Part of the reason for which your app cannot spawn thread is that the request should be able to complete within a few seconds at most. long running thread will be killed.

You can also refer to <a href="http://code.google.com/appengine/docs/java/runtime.html" rel="nofollow">this</a> to check the restrictions imposed by the Google App Engine.

Cheers]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>4404</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4407</wp:comment_id>
		<wp:comment_author><![CDATA[name]]></wp:comment_author>
		<wp:comment_author_email>name@name.name</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>194.126.144.2</wp:comment_author_IP>
		<wp:comment_date>2009-07-01 13:28:57</wp:comment_date>
		<wp:comment_date_gmt>2009-07-01 20:28:57</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Each process having it's own memory space is certainly not the case. That would mean they are processes. That would break almost everything of JEE starting with static variables which clearly work.

What is the case is that GAE doesn't support sticky sessions. But that's a holly different issue.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>JRuby on Rails and legacy java apps: Managing dependencies</title>
		<link>http://www.leonardoborges.com/writings/2009/07/01/jruby-on-rails-and-legacy-java-apps-managing-dependencies/</link>
		<pubDate>Wed, 01 Jul 2009 07:10:52 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category><![CDATA[JRuby]]></category>

		<category domain="category" nicename="jruby"><![CDATA[JRuby]]></category>

		<category domain="tag"><![CDATA[JRuby]]></category>

		<category domain="tag" nicename="jruby"><![CDATA[JRuby]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=205</guid>
		<description></description>
		<content:encoded><![CDATA[The motivation for this post came from a couple of messages I've seen on the jruby's google group and because I think it's pretty cool to share how we tackled this problem.

<strong>- A little bit of context</strong>

We, as a vast amount of people out there, have legacy Java code. A lot. In our case this legacy is pretty much crucial to our business. We can't just trash it and start from scratch. Bad idea.

On the other hand we do have new features to be built on top of it. But we wanted an easier way to develop this new stuff and decided for a JRuby on Rails solution, using it as a front-end to our existing services.

<strong>- What we decided to do</strong>

Our final rails project would make use of a specially created jar file containing our Java application. This Jar would also contain a public interface of the services we'd have to interact with from rails.

As any Java application, ours depend on a number of external jar files that correspond to the various framewoks we usually have in place. e.g.: Hibernate, Spring, apache-commons ...

Which means we need to make our app's jar and all it's dependencies available in the JRuby classpath in order to use it.

Given we're using warbler to package our application as a war file, we just need to place all jars needed into our rails app's lib folder. Warbler then takes care of copying any jar files located in there into the war.

<strong>- The problem</strong>

So we needed a smart way to include all these dependencies into the project, and copy/paste isn't an option.

In the Java world we use <a href="http://maven.apache.org/">Maven</a> to manage our projects dependencies - and you should too. Because of that our approach involved turning our rails application into a Maven aware project.

Basically we needed a <a href="http://maven.apache.org/pom.html">pom file</a> that would declaratively list our java project as a dependency. From there on, Maven knows what the dependencies are and downloads them to your local repository.

Which leaves us with one more task. We need to put all these dependencies into our lib folder after maven has downloaded them.

Below you'll find the pom.xml file that we use to achieve this with inline comments explaining each bit:
<pre lang="xml">
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.company</groupId>
  <!-- notice how we specify the packaging to be a war,
          that way, maven knows where to copy the jar files -->
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <artifactId>railsApp</artifactId>
  <name>railsApp</name>
    <dependencies>
        <dependency>
            <groupId>com.company</groupId>
            <artifactId>java-legacy-app</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>railsApp</finalName>
        <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <!-- This tasks only creates a basic structure expected by maven,
                    so it can do its work -->
            <id>create-mock-web-descriptor</id>
            <phase>compile</phase>
            <configuration>
              <executable>/bin/sh</executable>
              <workingDirectory>.</workingDirectory>
              <arguments>
                <argument>-c</argument>
                <argument>
                    mkdir -p src/main/webapp/WEB-INF
                    touch    src/main/webapp/WEB-INF/web.xml
                </argument>
              </arguments>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
          <execution>
            <!-- Now in the package phase we copy the jar files
                    that maven put into the fake web app to our rails' lib folder -->
            <id>copy-needed-jars-into-lib</id>
            <phase>package</phase>
            <configuration>
              <executable>/bin/sh</executable>
              <workingDirectory>.</workingDirectory>
              <arguments>
                <argument>-c</argument>
                <argument>
                    rm -f lib/*.jar
                    cp target/railsApp/WEB-INF/lib/*.jar lib
                    rm -rf target/railsApp*
                    rm -rf src
                </argument>
              </arguments>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
          <execution>
           <!-- Here we optionally create the final war file containing our rails app using warbler,
                     doing a small cleanup of the files and folders maven created  -->
            <id>create-final-war</id>
            <phase>package</phase>
            <configuration>
              <executable>/bin/sh</executable>
              <workingDirectory>.</workingDirectory>
              <arguments>
                <argument>-c</argument>
                <argument>
                   rm -rf *.war tmp/war
                   jruby -S warble &amp;&amp; \
                   mv *.war target/railsApp.war
                </argument>
              </arguments>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
     </plugins>
    </build>
</project>
</pre>

Now from the command line we can just run <em>mvn package</em> and we're good to go.

Maven will start to package the application as a war file. Since it's not a Java application we create the empty web.xml file in the compile phase, to fool maven. 


After it has copied all the dependencies into WEB-INF/lib the next packaging goals will make sure we copy them to our rails' lib folder, also creating the final war file, ready for deployment.


Note that once done, you can use a simple code snippet similar to this one as an initializer and load all dependencies:
<pre lang="ruby">
Dir.entries("#{RAILS_ROOT}/lib").sort.each do |entry|
  if entry =~ /.jar$/
    require entry
  end
end
</pre>

Then we can just use script/console, script/server and so on, as we normally would.

Sorry for the long post, I tried to pack in as much as I could and I certainly hope it's useful to someone. Any doubts, comments and etc... just drop me a line. :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>205</wp:post_id>
		<wp:post_date>2009-07-01 00:10:52</wp:post_date>
		<wp:post_date_gmt>2009-07-01 07:10:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jruby-on-rails-and-legacy-java-apps-managing-dependencies</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1246448770]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236977]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>4411</wp:comment_id>
		<wp:comment_author><![CDATA[nick]]></wp:comment_author>
		<wp:comment_author_email>nick.stielau@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>65.47.29.62</wp:comment_author_IP>
		<wp:comment_date>2009-07-01 16:27:26</wp:comment_date>
		<wp:comment_date_gmt>2009-07-01 23:27:26</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I was thinking about using maven to help manage jruby application dependencies as well.  I was thinking about using the dependency plugin (http://maven.apache.org/plugins/maven-dependency-plugin/) to copy dependencies to the lib directory, because right now I'm not warbling up the project.  I bet there are several different ways to go about this in maven, depending on the exact workflow and desired packaging. Nice work!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4415</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2009-07-02 00:04:02</wp:comment_date>
		<wp:comment_date_gmt>2009-07-02 07:04:02</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi nick!
Even though we warble the project here, you can still use this approach. You'd only need to remove the last part of the pom.xml, the one that warbles the app. The steps previous to this only copy the necessary jars to your rails application lib folder.

But you're right, with maven, you can go in a number of ways about this. I'll make sure I check this dependency plugin, didn't know it.

Tks!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>4411</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4398</wp:comment_id>
		<wp:comment_author><![CDATA[James Abley]]></wp:comment_author>
		<wp:comment_author_email>james.abley@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://eternusuk.blogspot.com/</wp:comment_author_url>
		<wp:comment_author_IP>149.254.49.185</wp:comment_author_IP>
		<wp:comment_date>2009-07-01 02:10:54</wp:comment_date>
		<wp:comment_date_gmt>2009-07-01 09:10:54</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Nice. I've been meaning to post something similar, but moving house has sucked up all my free time. I'll write it up Real Soon Now.

What about people on not on a Unix? We used the maven-ant-plugin for that reason.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4399</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2009-07-01 02:39:38</wp:comment_date>
		<wp:comment_date_gmt>2009-07-01 09:39:38</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[HI James!

We didn't bother with the environment because everyone here is on Unix. But I do believe that if someone needs this in another env, say windows, it would be easy enough to adapt it.
Or as you suggested, using the maven-ant-plugin. Haven't really thought of that since the shell based solution seemed more straightforward to us.

Cheers and tks for stopping by!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>4398</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>5665</wp:comment_id>
		<wp:comment_author><![CDATA[ChetanM]]></wp:comment_author>
		<wp:comment_author_email>chetan.muneshwar@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://simplewallsoftware.com</wp:comment_author_url>
		<wp:comment_author_IP>125.18.56.179</wp:comment_author_IP>
		<wp:comment_date>2009-09-15 08:50:51</wp:comment_date>
		<wp:comment_date_gmt>2009-09-15 15:50:51</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi 

js compressions have lots of trouble  with rails-jruby.
bash executions in pom.xml  solved the problem .

Nice work!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6821</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>83.43.4.15</wp:comment_author_IP>
		<wp:comment_date>2009-11-24 12:34:42</wp:comment_date>
		<wp:comment_date_gmt>2009-11-24 19:34:42</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks Dave,
I'm glad it was useful for you.

And tks for sharing that bit of info. Every project I worked so far with jruby, we had roots starting with "com". No wonder I never stumbled upon this issue.

[]'s]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>6820</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>8250</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>81.39.85.162</wp:comment_author_IP>
		<wp:comment_date>2010-02-09 14:45:34</wp:comment_date>
		<wp:comment_date_gmt>2010-02-09 21:45:34</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey Brad,
Take a look at my git repository at: http://github.com/leonardoborges/railssummit09

It's a talk I've given last year at Rails Summit exactly about this. It includes source files for the sample project. Check it out and let me know. I'd be happy to help you with any doubts you might have.

Thanks]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>8249</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>8249</wp:comment_id>
		<wp:comment_author><![CDATA[Brad]]></wp:comment_author>
		<wp:comment_author_email>bradleyrobertson@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>206.223.182.122</wp:comment_author_IP>
		<wp:comment_date>2010-02-09 14:33:52</wp:comment_date>
		<wp:comment_date_gmt>2010-02-09 21:33:52</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[This is interesting.  I have a jruby rails project that has a bunch of java dependencies and I've been looking at managing them with maven.  I'm not so concerned with the packaging side as we're using warbler, but I'm interested in using Maven for the rails dependencies.  I'm pretty new to all this.  I'm assuming I just need a pom.xml in the root of my rails app?  Then I specify the destination of these jars (my lib folder) and I'm off to the races?  I'm a ruby guy so maven and all this XML is pretty foreign to me]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6820</wp:comment_id>
		<wp:comment_author><![CDATA[Dave Copeland]]></wp:comment_author>
		<wp:comment_author_email>davetron5000@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.naildrivin5.com/blog</wp:comment_author_url>
		<wp:comment_author_IP>69.143.188.115</wp:comment_author_IP>
		<wp:comment_date>2009-11-24 11:55:08</wp:comment_date>
		<wp:comment_date_gmt>2009-11-24 18:55:08</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thank you so much for this article!  This is exactly what I need and it works perfectly!

One related thing is that if your root package is not "java", "com", or "org", you will need to qualify it, e.g.

Java::myroot.foo.bar.MyClass.new]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>5717</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>83.46.236.244</wp:comment_author_IP>
		<wp:comment_date>2009-09-17 14:25:40</wp:comment_date>
		<wp:comment_date_gmt>2009-09-17 21:25:40</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hello Chetan! Care to elaborate more on your last comment?

I didn't quite get what you meant by "bash executions in the pomxml" and how that fits with the JS Compressions issue.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>5665</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>twitter_logo</title>
		<link>http://www.leonardoborges.com/writings/?attachment_id=229</link>
		<pubDate>Wed, 01 Jul 2009 08:34:08 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/twitter_logo_header.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Follow me on twitter]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date>2009-07-01 01:34:08</wp:post_date>
		<wp:post_date_gmt>2009-07-01 08:34:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>twitter_logo_header</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/twitter_logo_header.png</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2009/07/twitter_logo_header.png]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"155";s:6:"height";s:2:"36";s:14:"hwstring_small";s:23:"height='29' width='128'";s:4:"file";s:31:"2009/07/twitter_logo_header.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"twitter_logo_header-150x36.png";s:5:"width";s:3:"150";s:6:"height";s:2:"36";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Procs, lambdas, blocks?! What&#039;s the difference?</title>
		<link>http://www.leonardoborges.com/writings/2009/07/22/procs-lambdas-blocks-whats-the-difference/</link>
		<pubDate>Wed, 22 Jul 2009 19:45:08 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=235</guid>
		<description></description>
		<content:encoded><![CDATA[Do you know? 
I didn't. And started to get annoyed by using these terms interchangeably and not really knowing the difference.

There are a few. And they are subtle. I don't think most of us would ever have problems with it but it's the kind of information you'll be glad to know when having those weird behaviors in your code on a Friday at 6:01 pm, just before pushing to production. :)

I guess blocks are the most widely used term in the ruby community and there is little mistake on when to use it:
<pre lang="ruby">[1,2,3].each do |x|
  puts x*2
end</pre>
The code between <strong>do</strong> and <strong>end</strong> is a <strong><em>block</em></strong>.

What's important to keep in mind is that Procs behave like blocks whereas lambdas behave like methods. To understand what that means, I highlighted a couple of examples:

<strong>- The return keyword</strong>

I mentioned Procs behave just like blocks and as such, the return keyword abide to the same rules. This means, for instance, that the latest puts statement on the following code snippet, will never run:
<pre lang="ruby">def my_proc(x)
  p = Proc.new { puts x*2; return }
  p.call
  puts "After calling proc" #This never gets called
end
my_proc(10)
>>20</pre>
For blocks - and procs-, return means "return from the calling method", my_proc in this case. That's why you don't get to see the output of the puts statement.

On the other hand, in the lambda's example, we get the opposite behavior:
<pre lang="ruby">def my_lambda(x)
  p = lambda { puts x*2; return }
  p.call
  puts "After calling proc" #This time, we reach this point
end
my_lambda(10)
>>20
>>After calling proc</pre>
Here, return says "return from the enclosing iterator", which, in this case, just returns from the block and continnues the execution of the my_lambda method.

<strong>- Argument assignment</strong>

On to this second difference, procs and lambdas get more interesting when you can call them with arguments. And that's when another subtle difference between them comes in.

I'll start again with a proc:

<pre lang="ruby">
  p = Proc.new { |x,y| puts x, y}
  p.call
  >>nil
  >>nil 

  p.call(1)
  >>1
  >>nil

  p.call(1,2)
  >>1
  >>2

  p.call(1,2,3)
  >>1
  >>2

  p.call([1,2])
  >>1
  >>2
</pre>

See how procs are flexible? They basically won't complain if you do not provide parameters, provide extra parameters or even send an array as an argument where, as seen in the code above, it unpacks the array and assign its values to the correct variables.

As you're probably guessing, lambdas behave like methods and are much less flexible:

<pre lang="ruby">
  l = lambda { |x,y| puts x, y}
  l.call
  >>ArgumentError: wrong number of arguments (0 for 2)

  l.call(1)
  >>ArgumentError: wrong number of arguments (1 for 2)

  l.call(1,2)
  >>1
  >>2

  l.call(1,2,3)
  >>ArgumentError: wrong number of arguments (3 for 2)

  l.call([1,2])
  >>ArgumentError: wrong number of arguments (1 for 2)
</pre>


<p/><p/>
<strong>Ruby 1.9 tip</strong>
Despite its name, Kernel.proc returns a lambda in Ruby 1.8. This has been fixed in Ruby 1.9. You actually get a Proc back.

- Reference
<a href="http://www.amazon.com/gp/product/0596516177?ie=UTF8&tag=leonaborge-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0596516177">The Ruby Programming Language</a><img src="http://www.assoc-amazon.com/e/ir?t=leonaborge-20&l=as2&o=1&a=0596516177" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /> - A must have for any Ruby developer.
 
<script type="text/javascript" src="http://www.assoc-amazon.com/s/link-enhancer?tag=leonaborge-20&o=1">
</script>
<noscript>
    <img src="http://www.assoc-amazon.com/s/noscript?tag=leonaborge-20" alt="" />
</noscript>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>235</wp:post_id>
		<wp:post_date>2009-07-22 12:45:08</wp:post_date>
		<wp:post_date_gmt>2009-07-22 19:45:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>procs-lambdas-blocks-whats-the-difference</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1253265094]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210237013]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>4711</wp:comment_id>
		<wp:comment_author><![CDATA[Francisco Cavedon]]></wp:comment_author>
		<wp:comment_author_email>francisco.cavedon@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>32.104.18.243</wp:comment_author_IP>
		<wp:comment_date>2009-07-22 13:09:36</wp:comment_date>
		<wp:comment_date_gmt>2009-07-22 20:09:36</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Leo, very interesting post! However, being the noob I am in Ruby, I'm not ashamed to say that I didn't get a clue about it :) I suppose procs, lambdas and blocks are not intended to the beginner audience?]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4712</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>83.46.235.56</wp:comment_author_IP>
		<wp:comment_date>2009-07-22 13:23:18</wp:comment_date>
		<wp:comment_date_gmt>2009-07-22 20:23:18</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Actually, although this concept is associated with a functional programming style, it is part of most structures in ruby that you learn from day one. It's just a matter of getting used to. If you wanna know more, take a look at the reference section at the end of the post. That is a great book to learn about the language.  z ya]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>4711</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4709</wp:comment_id>
		<wp:comment_author><![CDATA[Pedro Pimentel]]></wp:comment_author>
		<wp:comment_author_email>zukunft@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.twitter.com/zukunftsalick</wp:comment_author_url>
		<wp:comment_author_IP>213.37.28.250</wp:comment_author_IP>
		<wp:comment_date>2009-07-22 12:53:32</wp:comment_date>
		<wp:comment_date_gmt>2009-07-22 19:53:32</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Good ! 
very instructive examples!

I didn´t know about the return behavior differecences between  proc´s and lambda´s!

I wonder which code you saw to motivate this post...]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>8629</wp:comment_id>
		<wp:comment_author><![CDATA[Learning Objective-C: a Ruby analogy]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com/writings/2010/02/25/learning-objective-c-a-ruby-analogy/</wp:comment_author_url>
		<wp:comment_author_IP>75.127.72.28</wp:comment_author_IP>
		<wp:comment_date>2010-02-25 14:31:47</wp:comment_date>
		<wp:comment_date_gmt>2010-02-25 21:31:47</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] done my fair amount of Java for many years, among other things - I end up looking for features like blocks, open classes and syntax sugar like automatic generation of attribute accessors. These are hard to [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Alternatives preference</title>
		<link>http://www.leonardoborges.com/writings/2009/07/31/jvm-language-preferences-poll-results/languages/</link>
		<pubDate>Fri, 31 Jul 2009 07:39:08 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/languages.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Alternatives preference]]></excerpt:encoded>
		<wp:post_id>259</wp:post_id>
		<wp:post_date>2009-07-31 00:39:08</wp:post_date>
		<wp:post_date_gmt>2009-07-31 07:39:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>languages</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>257</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/languages.png</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2009/07/languages.png]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"450";s:6:"height";s:3:"320";s:14:"hwstring_small";s:23:"height='91' width='128'";s:4:"file";s:21:"2009/07/languages.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Level of interest in JVM language alternatives</title>
		<link>http://www.leonardoborges.com/writings/2009/07/31/jvm-language-preferences-poll-results/interest/</link>
		<pubDate>Fri, 31 Jul 2009 07:39:10 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/interest.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Level of interest in JVM language alternatives]]></excerpt:encoded>
		<wp:post_id>260</wp:post_id>
		<wp:post_date>2009-07-31 00:39:10</wp:post_date>
		<wp:post_date_gmt>2009-07-31 07:39:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>interest</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>257</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/interest.png</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2009/07/interest.png]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"450";s:6:"height";s:3:"320";s:14:"hwstring_small";s:23:"height='91' width='128'";s:4:"file";s:20:"2009/07/interest.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>scala_improvements</title>
		<link>http://www.leonardoborges.com/writings/2009/07/31/jvm-language-preferences-poll-results/scala_improvements/</link>
		<pubDate>Fri, 31 Jul 2009 07:39:32 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/scala_improvements.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date>2009-07-31 00:39:32</wp:post_date>
		<wp:post_date_gmt>2009-07-31 07:39:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scala_improvements</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>257</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/scala_improvements.png</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2009/07/scala_improvements.png]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"834";s:6:"height";s:3:"545";s:14:"hwstring_small";s:23:"height='83' width='127'";s:4:"file";s:30:"2009/07/scala_improvements.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>scala_likes</title>
		<link>http://www.leonardoborges.com/writings/2009/07/31/jvm-language-preferences-poll-results/scala_likes/</link>
		<pubDate>Fri, 31 Jul 2009 07:39:38 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/scala_likes.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>262</wp:post_id>
		<wp:post_date>2009-07-31 00:39:38</wp:post_date>
		<wp:post_date_gmt>2009-07-31 07:39:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scala_likes</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>257</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/scala_likes.png</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2009/07/scala_likes.png]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"835";s:6:"height";s:3:"545";s:14:"hwstring_small";s:23:"height='83' width='128'";s:4:"file";s:23:"2009/07/scala_likes.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>jruby_improvements</title>
		<link>http://www.leonardoborges.com/writings/2009/07/31/jvm-language-preferences-poll-results/jruby_improvements/</link>
		<pubDate>Fri, 31 Jul 2009 07:39:44 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/jruby_improvements.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>263</wp:post_id>
		<wp:post_date>2009-07-31 00:39:44</wp:post_date>
		<wp:post_date_gmt>2009-07-31 07:39:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jruby_improvements</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>257</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/jruby_improvements.jpg</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2009/07/jruby_improvements.jpg]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"835";s:6:"height";s:3:"545";s:14:"hwstring_small";s:23:"height='83' width='128'";s:4:"file";s:30:"2009/07/jruby_improvements.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>jruby_likes</title>
		<link>http://www.leonardoborges.com/writings/2009/07/31/jvm-language-preferences-poll-results/jruby_likes/</link>
		<pubDate>Fri, 31 Jul 2009 07:39:48 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/jruby_likes.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>264</wp:post_id>
		<wp:post_date>2009-07-31 00:39:48</wp:post_date>
		<wp:post_date_gmt>2009-07-31 07:39:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jruby_likes</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>257</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/jruby_likes.jpg</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2009/07/jruby_likes.jpg]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"836";s:6:"height";s:3:"545";s:14:"hwstring_small";s:23:"height='83' width='128'";s:4:"file";s:23:"2009/07/jruby_likes.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>What could be improved?</title>
		<link>http://www.leonardoborges.com/writings/2009/07/31/jvm-language-preferences-poll-results/groovy_improvements/</link>
		<pubDate>Fri, 31 Jul 2009 07:39:54 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/groovy_improvements.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>265</wp:post_id>
		<wp:post_date>2009-07-31 00:39:54</wp:post_date>
		<wp:post_date_gmt>2009-07-31 07:39:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>groovy_improvements</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>257</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/groovy_improvements.jpg</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2009/07/groovy_improvements.jpg]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"836";s:6:"height";s:3:"546";s:14:"hwstring_small";s:23:"height='83' width='128'";s:4:"file";s:31:"2009/07/groovy_improvements.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Why choose groovy</title>
		<link>http://www.leonardoborges.com/writings/2009/07/31/jvm-language-preferences-poll-results/groovy_likes/</link>
		<pubDate>Fri, 31 Jul 2009 07:40:00 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/groovy_likes.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Why choose groovy]]></excerpt:encoded>
		<wp:post_id>266</wp:post_id>
		<wp:post_date>2009-07-31 00:40:00</wp:post_date>
		<wp:post_date_gmt>2009-07-31 07:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>groovy_likes</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>257</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/groovy_likes.jpg</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2009/07/groovy_likes.jpg]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"835";s:6:"height";s:3:"546";s:14:"hwstring_small";s:23:"height='83' width='128'";s:4:"file";s:24:"2009/07/groovy_likes.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Level of interest on JVM language alternatives</title>
		<link>http://www.leonardoborges.com/writings/2009/07/31/jvm-language-preferences-poll-results/image/</link>
		<pubDate>Fri, 31 Jul 2009 07:49:19 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/image.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Level of interest on JVM language alternatives]]></excerpt:encoded>
		<wp:post_id>267</wp:post_id>
		<wp:post_date>2009-07-31 00:49:19</wp:post_date>
		<wp:post_date_gmt>2009-07-31 07:49:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>257</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/image.png</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2009/07/image.png]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"450";s:6:"height";s:3:"320";s:14:"hwstring_small";s:23:"height='91' width='128'";s:4:"file";s:17:"2009/07/image.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>JVM language alternatives preference</title>
		<link>http://www.leonardoborges.com/writings/2009/07/31/jvm-language-preferences-poll-results/image2/</link>
		<pubDate>Fri, 31 Jul 2009 07:51:30 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/image2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[JVM language alternatives preference]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date>2009-07-31 00:51:30</wp:post_date>
		<wp:post_date_gmt>2009-07-31 07:51:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>257</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/image2.png</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2009/07/image2.png]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"450";s:6:"height";s:3:"320";s:14:"hwstring_small";s:23:"height='91' width='128'";s:4:"file";s:18:"2009/07/image2.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>JVM language preferences poll results</title>
		<link>http://www.leonardoborges.com/writings/2009/07/31/jvm-language-preferences-poll-results/</link>
		<pubDate>Fri, 31 Jul 2009 09:15:01 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Groovy]]></category>

		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>

		<category domain="tag"><![CDATA[Groovy]]></category>

		<category domain="tag" nicename="groovy"><![CDATA[Groovy]]></category>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category><![CDATA[JRuby]]></category>

		<category domain="category" nicename="jruby"><![CDATA[JRuby]]></category>

		<category domain="tag"><![CDATA[JRuby]]></category>

		<category domain="tag" nicename="jruby"><![CDATA[JRuby]]></category>

		<category domain="tag"><![CDATA[JVM]]></category>

		<category domain="tag" nicename="jvm"><![CDATA[JVM]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<category><![CDATA[Scala]]></category>

		<category domain="category" nicename="scala"><![CDATA[Scala]]></category>

		<category domain="tag"><![CDATA[Scala]]></category>

		<category domain="tag" nicename="scala"><![CDATA[Scala]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=257</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>- Overall results</strong>

First off, I'd like to thank everyone who voted on this poll.
With a total of 236 votes, here is the summary of the first two questions:

<strong>- Are you currently working with or researching about language alternatives for the JVM? - e.g. JRuby, Scala, Groovy</strong>

[caption id="attachment_267" align="alignnone" width="450" caption="Level of interest on JVM language alternatives"]<a href="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/image.png"><img class="size-full wp-image-267" title="Level of interest on JVM language alternatives" src="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/image.png" alt="Level of interest on JVM language alternatives" width="450" height="320" /></a>[/caption]

<strong>- If you answered yes or maybe to the previous question, what alternative would that be?</strong>

[caption id="attachment_268" align="alignnone" width="450" caption="JVM language alternatives preference"]<a href="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/image2.png"><img class="size-full wp-image-268" title="JVM language alternatives preference" src="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/image2.png" alt="JVM language alternatives preference" width="450" height="320" /></a>[/caption]

As you can see, the vast majority of Java developers that participated on this poll have interest or are working with a language other than Java for the JVM. The results of the second chart were surprising for me and we have <a href="http://groovy.codehaus.org/" target="_blank">Groovy</a> standing really tall with an astonishing 101 votes, followed by <a href="http://www.scala-lang.org/" target="_blank">Scala</a> and <a href="http://jruby.codehaus.org/" target="_blank">JRuby</a> in a tougher competition.

The poll also consisted of 2 other questions, both free text, and I tried to analyze them in more detail to understand the "why's" and "how's" of these results.

Keep reading for the detailed summary...

<!--more-->

I've split the results according to the choices and analyzed them individually using a tag cloud. This allowed me to filter some common words and hopefully focus on the important bits of the comments. They are displayed grouped by choice and question.

<strong>- Groovy</strong>

<em>Please provide a brief summary to back up your choice</em>

<a href="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/groovy_likes.jpg"><img class="size-full wp-image-266 alignnone" title="Why choose groovy" src="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/groovy_likes.jpg" alt="Why choose groovy" width="501" height="328" /></a>

The general feeling here is that people find Groovy a language easy to move to, being a java developer. Most of the answers also highlights the Groovy integration with java. Things like "change from .java to .groovy and start from there".

Another aspect was the community, which is vast and supportive. A good amount of the answers also mentioned Scala as being too complex and academic.

<em>Is there anything that would make any of these alternatives more attractive to you?</em>

<a href="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/groovy_improvements.jpg"><img class="alignnone size-full wp-image-265" title="What could be improved?" src="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/groovy_improvements.jpg" alt="What could be improved?" width="502" height="328" /></a>

Most people said that JRuby would be their second choice if they saw more improvements on the Java integration and performance. Scala also got mentions about - again - its complexity and a few asking for improvement in documentation. Both JRuby and Scala got negative comments regarding their syntax.

<strong>- JRuby</strong>

<em>Please provide a brief summary to back up your choice</em>

<a href="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/jruby_likes.jpg"><img class="alignnone size-full wp-image-264" title="jruby_likes" src="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/jruby_likes.jpg" alt="jruby_likes" width="502" height="327" /></a>

As one might guess, many people mentioned the ability to use Rails - thus leveraging their existing Ruby knowledge - as a big win for JRuby. Also, kudos for the community for being supportive and friendly. Several comments about it.

<em>Is there anything that would make any of these alternatives more attractive to you?</em>

<a href="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/jruby_improvements.jpg"><img class="alignnone size-full wp-image-263" title="jruby_improvements" src="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/jruby_improvements.jpg" alt="jruby_improvements" width="501" height="327" /></a>

Many wishes towards JRuby's Java integration and support. More specific comments of compiling ruby classes into java classes and so on...

<strong>-Scala</strong>

<em>Please provide a brief summary to back up your choice</em>

<strong><a href="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/scala_likes.png"><img class="alignnone size-full wp-image-262" title="scala_likes" src="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/scala_likes.png" alt="scala_likes" width="501" height="327" /></a></strong>

Clearly Scala's type system and functional programming features were highlighted the most. As a general feeling, people who chose Scala would have chosen Groovy as a second best.

<em>Is there anything that would make any of these alternatives more attractive to you?</em>

<em><a href="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/scala_improvements.png"><img class="alignnone size-full wp-image-261" title="scala_improvements" src="http://www.leonardoborges.com/writings/wp-content/uploads/2009/07/scala_improvements.png" alt="scala_improvements" width="500" height="327" /></a></em>

Tooling. The majority of comment urge for better tooling and IDE support. That simple.

<strong>- Others</strong>

People who chose others mentioned <a href="http://clojure.org/" target="_blank">Clojure</a>, <a href="http://www.fandev.org/" target="_blank">Fan</a> and <a href="http://www.jython.org/">Jython</a>, with a clear advantage for Clojure.

<strong>- Disclaimer</strong>

<strong>This poll has no scientific foundations whatsoever and its sole purpose is to summarize the feelings and personal choices of the people who answered it. If you would like the original spreadsheet with the answers, you can find it <a href="http://spreadsheets.google.com/ccc?key=0AuABB6DyTXV2dHEtZnNwSDhCb2RVOThFcUNaSUhpbEE&amp;hl=en" target="_blank">here</a> and do your own analyzis.
</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>257</wp:post_id>
		<wp:post_date>2009-07-31 02:15:01</wp:post_date>
		<wp:post_date_gmt>2009-07-31 09:15:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jvm-language-preferences-poll-results</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1251659577]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[219273889]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>4836</wp:comment_id>
		<wp:comment_author><![CDATA[Charles Oliver Nutter]]></wp:comment_author>
		<wp:comment_author_email>headius@headius.com</wp:comment_author_email>
		<wp:comment_author_url>http://blog.headius.com</wp:comment_author_url>
		<wp:comment_author_IP>216.160.3.79</wp:comment_author_IP>
		<wp:comment_date>2009-07-31 14:00:26</wp:comment_date>
		<wp:comment_date_gmt>2009-07-31 21:00:26</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[This aligns pretty well with what I expected.

* JRuby would be more popular if Java integration was better. We've focused heavily on Ruby to make sure Rubyists were happy first, and let Java go for a while. Focus is changing a bit now.
* Groovy 2:1 over JRuby. We have mostly presented JRuby to Rubyists at Ruby conferences, because we don't have enough people to do all Ruby and Java conferences. Focus is changing a bit now, but we need more Rubyists to take an interest in evangelizing to Java devs.
* Groovy community cited as a benefit. Rubyists are not as interested in backing JRuby as Groovyists are interested in backing Groovy or Scalaist backing Scala.

Ultimately, if we believe it's important for Ruby that JRuby do well on the JVM, we need more than just technical solutions (which are usually pretty easy). We need more folks from Rubyland to help us bring Ruby to the Java community and help them make the transition.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4823</wp:comment_id>
		<wp:comment_author><![CDATA[jamesladd]]></wp:comment_author>
		<wp:comment_author_email>james_ladd@hotmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.jamesladdcode.com</wp:comment_author_url>
		<wp:comment_author_IP>124.168.27.77</wp:comment_author_IP>
		<wp:comment_date>2009-07-31 02:39:29</wp:comment_date>
		<wp:comment_date_gmt>2009-07-31 09:39:29</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[A great exercise !

It would appear that product SUPPORT and tight Java integration are going to be a must for my Smalltalk JVM project. 

Hopefully Smalltalk will rate as an alternative if you do this poll again next year :)

Rgs, James.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4820</wp:comment_id>
		<wp:comment_author><![CDATA[Johan]]></wp:comment_author>
		<wp:comment_author_email>johan@eltes.se</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>82.117.126.98</wp:comment_author_IP>
		<wp:comment_date>2009-07-31 02:25:55</wp:comment_date>
		<wp:comment_date_gmt>2009-07-31 09:25:55</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[The permission settings for the spreadsheet seems to prevent public access.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4821</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>79.147.151.217</wp:comment_author_IP>
		<wp:comment_date>2009-07-31 02:34:38</wp:comment_date>
		<wp:comment_date_gmt>2009-07-31 09:34:38</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Johan, 
It should be fixed now. ;)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>4820</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4828</wp:comment_id>
		<wp:comment_author><![CDATA[Jeff Heon]]></wp:comment_author>
		<wp:comment_author_email>jfheon@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://thecarefulprogrammer.blogspot.com/</wp:comment_author_url>
		<wp:comment_author_IP>142.195.189.128</wp:comment_author_IP>
		<wp:comment_date>2009-07-31 07:20:00</wp:comment_date>
		<wp:comment_date_gmt>2009-07-31 14:20:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Rats, I was too late to vote. My comments anyway ;)

My preferences: Clojure, then Scala.

Summary
In the end, I think it's the overall syntax complexity of others choices versus the simplicity of Clojure that attracted me. Plus the fact that Clojure is well-defined with (so far) just one main implementation instead of Common Lisp where there are too many choices behaving differently.

Also, when you listen to the screencasts of Clojure by it's creator, you can't help but see how much thought and consideration. He drew from his work experience to write a language with specific goals in mind, carefully weighting pros ans cons of every features. So did the creators of Scala and Groovy, I'm sure, but Rich is really an articulate speaker.

If it weren't for Clojure, I would pick up Scala because I DO like static typing and I like it's elegant blend of OO and functional programming.

&gt;Is there anything that would make any of these alternatives more attractive to you?

I'm an old school programmer but I've never been fond of Vi or Emacs. I love IDE's. So of course, I'd like better out-of-the-box IDE support.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4829</wp:comment_id>
		<wp:comment_author><![CDATA[Jeff Heon]]></wp:comment_author>
		<wp:comment_author_email>jfheon@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://thecarefulprogrammer.blogspot.com/</wp:comment_author_url>
		<wp:comment_author_IP>142.195.189.128</wp:comment_author_IP>
		<wp:comment_date>2009-07-31 07:29:07</wp:comment_date>
		<wp:comment_date_gmt>2009-07-31 14:29:07</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[If I may correct my last comment:
Rats, I was too late to vote. My comments anyway ;)

My preferences: Clojure, then Scala.

Summary
In the end, I think it's the overall syntax complexity of others choices versus the simplicity of Clojure that attracted me. Plus the fact that Clojure is well-defined with (so far) just one main implementation instead of Common Lisp where there are too many choices behaving differently.

Also, when you listen to the screencasts of Clojure by it's creator, you can't help but see how much thought and consideration He put it in. He drew from his work experience to write a language with specific goals in mind, carefully weighting pros ans cons of every features. So did the creators of Scala and Groovy, I'm sure, but Rich is really an articulate speaker.

If it weren't for Clojure, I would pick up Scala because I DO like static typing and I like its elegant blend of OO and functional programming.

&gt;Is there anything that would make any of these alternatives more attractive to you?

I'm an old school programmer but I've never been fond of Vi or Emacs. I love IDE's. So of course, I'd like better out-of-the-box IDE support.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4831</wp:comment_id>
		<wp:comment_author><![CDATA[Daniel Spiewak]]></wp:comment_author>
		<wp:comment_author_email>djspiewak@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.codecommit.com/blog</wp:comment_author_url>
		<wp:comment_author_IP>66.175.195.241</wp:comment_author_IP>
		<wp:comment_date>2009-07-31 08:56:51</wp:comment_date>
		<wp:comment_date_gmt>2009-07-31 15:56:51</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Actually, I fall into the "Scala first" camp, and I would pick JRuby as a second choice (first for some tasks).  I do wish that JRuby were better integrated with Java.  I mean, it's not bad now, but it could get a lot better.  Fortunately, that's a primary focus in the upcoming 1.4 release, so...wish granted!

I'm a little disheartened that Scala's "complexity" was the oft-cited reason for not considering it.  It's actually a terribly simple language.  I mean, it's lightyears more complex than Clojure, but compared to Groovy and Ruby, it's positively trivial.  The thing which makes most people shy away is it *appears* to be very complex due to the way in which the core concepts of the language can be reused in numerous, apparently diverse ways.  People look at Scala and they see tons of special little tricks and rules, a grammar the size of my arm, and a type system with scary-looking things like "higher kinds" and "variance annotations".  What they don't see is that all of those different features stem from a very simple set of core primitives.  In many ways, Scala is even simpler than Java, it's just more flexible in that simplicity.

When I hear "Scala is too complex", it almost always means that the person in question has not really given the language a fair shake.  This is reinforced by all of the people who said "Scala is too complex" and then turned around and said that they liked Groovy, which is empirically the most complex of all of the mainstream alternative JVM languages (by a wide margin).

Oh well, the myth of Scala's enormous complexity will persist regardless of what I say or do.  Hopefully, someday people will judge languages not based on their first impressions, but upon the actual core design.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4833</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>79.147.151.217</wp:comment_author_IP>
		<wp:comment_date>2009-07-31 09:47:59</wp:comment_date>
		<wp:comment_date_gmt>2009-07-31 16:47:59</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi daniel,
Interesting point indeed. I haven't gotten past the tutorials on Scala - plan to study more at some point - and to me it's weird that Java developers find it complex. Java itself is already a pretty much complex language and Scala simplifies several concepts.

I believe these statements come from the lack of knowledge of a functional programming paradigm. It's a big shift. Something similar to when people moved from procedural to OO. Many people back then thought OO was too complex... I guess it's just history repeating itself.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>4831</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>5284</wp:comment_id>
		<wp:comment_author><![CDATA[Jeff Heon]]></wp:comment_author>
		<wp:comment_author_email>jfheon@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://thecarefulprogrammer.blogspot.com/</wp:comment_author_url>
		<wp:comment_author_IP>74.59.31.224</wp:comment_author_IP>
		<wp:comment_date>2009-08-26 17:45:07</wp:comment_date>
		<wp:comment_date_gmt>2009-08-27 00:45:07</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Leonardo says
"I’m with you on the IDE issue. The problem with them so far is that they’re usually heavy and bloated. I’d love to see one that is full featured like eclipse and netbeans, but light as TextMate.
Is that even possible? ;)"

I'm pretty difficult to please about IDEs too. For professional development, I was quite happy with IntelliJ IDEA a few years ago or Visual Studio with the ReSharper plugin.

But for hobby development to mess around with Scala &amp; Clojure, I feel NetBeans or Eclipse is too much.

My happiest hobby development IDE has been IDLE when I was tinkering with Python. It was just right for me.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>4830</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>79.147.151.217</wp:comment_author_IP>
		<wp:comment_date>2009-07-31 08:14:02</wp:comment_date>
		<wp:comment_date_gmt>2009-07-31 15:14:02</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Jeff!

Thanks for sharing your comments!

I'm with you on the IDE issue. The problem with them so far is that they're usually heavy and bloated. I'd love to see one that is full featured like eclipse and netbeans, but light as TextMate.
Is that even possible? ;)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>4829</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>5370</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.0.240.177</wp:comment_author_IP>
		<wp:comment_date>2009-08-30 12:16:06</wp:comment_date>
		<wp:comment_date_gmt>2009-08-30 19:16:06</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Yeah I hear you. 

For scripting languages like ruby and python, I usually use TextMate on Mac OS or GEdit on Linux - with several plugins.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Rails Rumble &#039;09</title>
		<link>http://www.leonardoborges.com/writings/2009/08/25/rails-rumble-09/</link>
		<pubDate>Tue, 25 Aug 2009 13:42:32 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=283</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Update:</strong> The service is now down while we move it from the VPS provided by Rails Rumble to our own. I'll let you know once it's up.

Last weekend <a href="http://www.ivercore.com/" target="_blank">Philip</a>, <a href="http://www.pedropimentel.com/" target="_blank">Pedro</a> and myself got together for this year's <a href="http://railsrumble.com/" target="_blank">Rails Rumble</a>.

We haven't had really decided what to do until a few days before the competition, but I had this really simple idea and decided to go with it. Seems people liked it, given a few positive comments we received.

So, after 48 hours - which were not used to work full-time in the application - <a href="http://birdwatcher.r09.railsrumble.com/">The Bird Watcher</a> was born.

<a href="http://birdwatcher.r09.railsrumble.com/">The Bird Watcher</a> is a simple way to show the world what's going on on Twitter for any topic you define.  Go ahead and take a look at the website to see a live example.

We're planning to keep the service up after the competition is over and we have some nice features lined up to go live on the next release.

In short, it was an interesting weekend and showed me that this team works really well together.

Cheers]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>283</wp:post_id>
		<wp:post_date>2009-08-25 06:42:32</wp:post_date>
		<wp:post_date_gmt>2009-08-25 13:42:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-rumble-09</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1253521686]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>5273</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>79.147.151.217</wp:comment_author_IP>
		<wp:comment_date>2009-08-25 11:36:16</wp:comment_date>
		<wp:comment_date_gmt>2009-08-25 18:36:16</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Ok, fixed! :)


Yes, you're the app's #1! And also our awesome designer! :P]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>5271</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>5271</wp:comment_id>
		<wp:comment_author><![CDATA[Philip MacIver]]></wp:comment_author>
		<wp:comment_author_email>philip@ivercore.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.ivercore.com</wp:comment_author_url>
		<wp:comment_author_IP>77.228.26.98</wp:comment_author_IP>
		<wp:comment_date>2009-08-25 11:03:43</wp:comment_date>
		<wp:comment_date_gmt>2009-08-25 18:03:43</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Just to point out some bad English you used, "we also have some nice features on the queue..." Really should be, "we have some nice features lined up".

:p

By the way I would advice people to use the birdwatcher now, while it is small so when it is big you can say you were one of the first people to use it. The first person by the way registered on the site, is actually me :D. I am number 1. haha.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Rails Summit 2009: I&#039;m speaking</title>
		<link>http://www.leonardoborges.com/writings/2009/09/03/rails-summit-2009-im-speaking/</link>
		<pubDate>Thu, 03 Sep 2009 08:22:28 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Conferences]]></category>

		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>

		<category domain="tag"><![CDATA[Conferences]]></category>

		<category domain="tag" nicename="conferences"><![CDATA[Conferences]]></category>

		<category><![CDATA[JRuby]]></category>

		<category domain="category" nicename="jruby"><![CDATA[JRuby]]></category>

		<category domain="tag"><![CDATA[JRuby]]></category>

		<category domain="tag" nicename="jruby"><![CDATA[JRuby]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=295</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.railssummit.com.br?utm_campaign=Railssummit&amp;utm_source=banner_parceiros&amp;utm_medium=banner&amp;utm_content=en_souPalestrante_210x60"><img src="http://railssummit.com.br/images/banners/en_souPalestrante_210x60.jpg" alt="Rails Summit 2009" /></a>

I'll be speaking at this year's <a href="http://railssummit.com.br/en/pages/home" target="_blank">Rails Summit Latin America</a> in Sao Paulo, Brazil. It will be a good opportunity to meet some <a href="http://railssummit.com.br/en/speakers">amazing people</a> and visit friends back home! :)

Overall I'll be spending 12 days in Brazil, with 2 of them dedicated to the conference. The other 10 I'll be in Rio de Janeiro visiting my family and friends. I strongly advise you to spend some time in Rio too, if at all possible. It's an amazing city and you can contact me if you have any questions.

Back to the conference, my session is called <strong>JRuby in the enterprise world: Using Rails with legacy code</strong>, and will be given in the form of a tutorial. I will walk you through some problems we had while making this kind of integration at my company, focusing mostly on dependency management.

At the end I hope you'll have a good understanding of what JRuby is capable of in a legacy environment.

If you're planning to attend and would like to hear anything specific about JRuby, please let me know, I can try and squeeze in.

C u there!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>295</wp:post_id>
		<wp:post_date>2009-09-03 01:22:28</wp:post_date>
		<wp:post_date_gmt>2009-09-03 08:22:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-summit-2009-im-speaking</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1251966148]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210237047]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>5443</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2009-09-03 06:28:28</wp:comment_date>
		<wp:comment_date_gmt>2009-09-03 13:28:28</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey it's a pity you won't be able to go, but thanks for the wishes anyway! 
I hope people enjoy it. :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>5442</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>5442</wp:comment_id>
		<wp:comment_author><![CDATA[Dhiego]]></wp:comment_author>
		<wp:comment_author_email>dhiegorp@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>201.29.66.158</wp:comment_author_IP>
		<wp:comment_date>2009-09-03 06:13:20</wp:comment_date>
		<wp:comment_date_gmt>2009-09-03 13:13:20</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi my friend! 
I'm very glad to see some friends of mine doing presentations in great conferences, becoming teachers, you know... lol
Your session seems to me very pertinent, because I listen so often - specifically about ruby on rails - that the development is easy, but I never see someone telling the problems to migrate legacy systems to this language.
I don't know if I can go to Sao Paulo at the period of the conference, but have a good luck at your presentation!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Refactoring for Readability</title>
		<link>http://www.leonardoborges.com/writings/2009/09/18/refactoring-for-readability/</link>
		<pubDate>Fri, 18 Sep 2009 11:43:56 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[JRuby]]></category>

		<category domain="category" nicename="jruby"><![CDATA[JRuby]]></category>

		<category><![CDATA[Refactoring]]></category>

		<category domain="category" nicename="refactoring"><![CDATA[Refactoring]]></category>

		<category domain="tag"><![CDATA[Refactoring]]></category>

		<category domain="tag" nicename="refactoring"><![CDATA[Refactoring]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=305</guid>
		<description></description>
		<content:encoded><![CDATA[Yesterday I've done something I should do more often: Revisit some code written a while ago for our current project and make it better.

Let's face it. We all write crappy code the 1st time. The difference is in what we do about it afterwards.
We might decide it's good enough and keep moving, or we could (and should!) stop and refactor it!

The code I revisited worked as a refactoring exercise and it's initial version is shown below:
<pre lang="ruby" line="1">
class Jphoto
 ...

 #a few other methods ...

 def post_photo(file_data, hotel_id, send_rss, options = {})
   file_name = "tmp/#{Time.now.to_i}_#{rand(1000000).to_s(36)}"
   File.open(file_name, "wb") do |f|
     f.puts(file_data)
   end

   params = [Curl::PostField.file('photo',file_name),
      Curl::PostField.content('hotel', hotel_id),
      Curl::PostField.content('source','PhotoUploadTest')]
   extract_extra_params!(params, options)

   c = Curl::Easy.new("#{service_uri_base']}/photoupld")
   c.multipart_form_post = true
   c.http_post(*params)

   if c.response_code != 200
     error_msg = "File upload failed with code: #{c.response_code}"
     Rails.logger.info error_msg
     raise error_msg
   end

   File.delete(file_name)

   hotel = Hotel.find_by_id(hotel_id)
   hotel.cache.destroy_all

   send_upload_rss(hotel, original_upload_url(c.body_str) , options) if send_rss
 end

 private

 def send_upload_rss(hotel, photo_url, options)
   ...
 end
 def manage_images_link(hotel_id)
   ...
 end

 def extract_extra_params!(params, options)
   params << Curl::PostField.content('status', options[:status]) if options[:status]
   params << Curl::PostField.content('upload_source', options[:upload_source]) if options[:upload_source]
   params << Curl::PostField.content('uploader_ip', options[:uploader_ip]) if options[:uploader_ip]
   params << Curl::PostField.content('uploader_email', options[:uploader_email]) if options[:uploader_email]
 end
end
</pre>

<!--more-->
Look at the post_photo method. It has problems in so many levels that it's hard to start. 
Methods should do "one thing" and that method obviously does much more than that, mixing different levels of abstraction.

But let's start with the easy parts first, keeping in mind that I was aiming for readability.

Lines 7 to 10 seem to be there just to make the reader's life harder. It's creating a temporary file through some custom logic instead of using the tools provided by the language. Unnecessary and only pollutes our eyes. My first measure was to use ruby's TempFile class for this. Better, but we still have a long way.

Right at line 12 it creates some sort of default parameters list, after which it extracts some extra options. I don't know what that method does but it's clearly using output arguments, which we should avoid at all costs, as they lead to confusion. This is a big smell as well, and another refactoring step added to my list.

On line 21 starts the code that handles what to do when we get a response_code other than 200 from our request. Apart from the fact that this code doesn't feel right here, we just happen to know that in HTTP, 200 means success, but that might not be clear to someone looking at the code for the 1st time.

Then the code goes on to delete the temp file, clear the hotel's cache and send the rss if the rss' flag is true.

<strong>Let there be refactoring....</strong>

Geez, how many lines have I used to explain what the code does? Since I don't wanna bore you to death, here is my refactored version of this method, trying to avoid as much as I can the problems I highlighted previously:



<pre lang="ruby" line="1">
class Jphoto
  ...
  SUCCESS = 200

   #a few other methods ...

  def post_photo(file_data, hotel_id, send_rss, options = {})
    response_body = make_post_request(file_data, hotel_id, options)

    hotel = Hotel.find_by_id(hotel_id)
    hotel.cache.destroy_all
    send_upload_rss(hotel, original_upload_url(response_body) , options) if send_rss
  end

</pre>

Ha! That reads much nicer, right? 

Below you'll find the rest of the class, properly refactored. Note how I also changed the order of the private methods so the class has a reading flow. 

You can now read it top down, without scrolling through the file several times trying to find where the methods are defined.

<pre lang="ruby" line="14">
  private

  def make_post_request(file_data, hotel_id, options)
    temp_file = Tempfile.open('minisite_upload_')
    temp_file.puts(file_data)

    c = Curl::Easy.new("#{service_uri_base']}/photoupld")
    c.multipart_form_post = true
    c.http_post(*build_params_list(temp_file.path, hotel_id, options))

    temp_file.delete
    raise_and_log_error("File upload failed with code: #{c.response_code}") if c.response_code != SUCCESS
    c.body_str
  end

  def build_params_list(file_path, hotel_id, options)
    params = [Curl::PostField.file('photo', file_path), Curl::PostField.content('hotel', hotel_id), Curl::PostField.content('source','PhotoUploadTest')]
    params << Curl::PostField.content('status', options[:status]) if options[:status]
    params << Curl::PostField.content('upload_source', options[:upload_source]) if options[:upload_source]
    params << Curl::PostField.content('uploader_ip', options[:uploader_ip]) if options[:uploader_ip]
    params << Curl::PostField.content('uploader_email', options[:uploader_email]) if options[:uploader_email]
    params
  end

  def raise_and_log_error(error_msg)
    Rails.logger.info error_msg
    raise error_msg
  end

  def original_upload_url(jphotos_response)
    ...
  end

  def send_upload_rss(hotel, photo_url, options)
    ...
  end

  def manage_images_link(hotel_id)
    ...
  end
end
</pre> 

I've only applied 2 basic principles to this code: That methods should do one thing and that they should avoid output arguments. But the result was a drastic improvement over the old code.

<strong>A last step...</strong>

There is still one thing I would like to change in the post_photo method. It takes a boolean as an argument. The first time you see a call to this method, there is no way you can tell what that flag is used for:

<pre lang="ruby">
  jphoto.post_photo(file_data, 1, false, options)
</pre>

To make it more clear we could refactor the method once more to look like this:

<pre lang="ruby">
  def post_photo_and_send_rss(file_data, hotel_id, options = {})
    response_body = post_photo(file_data, hotel_id, options)
    send_upload_rss(hotel, original_upload_url(response_body) , options)
  end

  def post_photo(file_data, hotel_id, options = {})
    response_body = make_post_request(file_data, hotel_id, options)

    hotel = Hotel.find_by_id(hotel_id)
    hotel.cache.destroy_all
    response_body
  end
</pre>

This way we avoid an extra parameter and save our reader - and possibly us - of the trouble to guess what that flag was for.


I am by no means saying this is the definitive refactored state of this code but instead sharing the steps I went through while refactoring it. As always, tips and comments are welcome! :) ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>305</wp:post_id>
		<wp:post_date>2009-09-18 04:43:56</wp:post_date>
		<wp:post_date_gmt>2009-09-18 11:43:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>refactoring-for-readability</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1253275045]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210237064]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>5735</wp:comment_id>
		<wp:comment_author><![CDATA[Francisco Cavedon]]></wp:comment_author>
		<wp:comment_author_email>francisco.cavedon@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>32.104.18.243</wp:comment_author_IP>
		<wp:comment_date>2009-09-18 05:04:13</wp:comment_date>
		<wp:comment_date_gmt>2009-09-18 12:04:13</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Great post! Even I, with my -1 knowledge of Ruby, was able to tell what the code did after the refactoring! It's so much better now, without the terrible "MY EYES!!" effect we all get on ugly code.

Keep up the good work!
Cheers]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>8081</wp:comment_id>
		<wp:comment_author><![CDATA[Hacking Ruby&#8217;s Syntax]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com/writings/2010/02/03/hacking-rubys-syntax/</wp:comment_author_url>
		<wp:comment_author_IP>75.127.72.28</wp:comment_author_IP>
		<wp:comment_date>2010-02-03 09:12:00</wp:comment_date>
		<wp:comment_date_gmt>2010-02-03 16:12:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] I like to have a smooth reading flow in my source files. That means that if the public method_a makes use of the private method_b, I want method_b defined [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Books</title>
		<link>http://www.leonardoborges.com/writings/books/</link>
		<pubDate>Wed, 23 Sep 2009 20:40:10 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?page_id=338</guid>
		<description></description>
		<content:encoded><![CDATA[I consider reading to be part of my duties as a Software Developer.
Therefore, I'll try and keep here an updated list of what I've been reading lately. <br/>
All books on this page helped in some way to improve my skills and become an overall better professional, and that's why I feel confident recommending them.<br/>
Occasionally I might include books I read years ago if I think they're worth it. This list will probably be under permanent construction... ;) (hover over the image/link to see more info about each book)<p>

<div id="ShelfariWidget111594"><a href='http://www.shelfari.com/'>Shelfari: Book reviews on your book blog</a><script src="http://www.shelfari.com/ws/111594/widget.js" type="text/javascript" language="javascript"></script><noscript><p>Find new <a href="http://www.shelfari.com/books">books</a> and literate friends with Shelfari, the online <a href="http://www.shelfari.com/">book club</a>.</p></noscript></div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>338</wp:post_id>
		<wp:post_date>2009-09-23 13:40:10</wp:post_date>
		<wp:post_date_gmt>2009-09-23 20:40:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>books</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1254303806]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_page_template</wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>A few more thoughts on final classes</title>
		<link>http://www.leonardoborges.com/writings/2009/10/07/a-few-more-thoughts-on-final-classes/</link>
		<pubDate>Wed, 07 Oct 2009 21:39:56 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Architecture]]></category>

		<category domain="category" nicename="arquitetura"><![CDATA[Architecture]]></category>

		<category domain="tag"><![CDATA[Architecture]]></category>

		<category domain="tag" nicename="architecture"><![CDATA[Architecture]]></category>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=401</guid>
		<description></description>
		<content:encoded><![CDATA[I <a href="http://www.leonardoborges.com/writings/2009/03/17/final-classes-are-evil/" target="_blank">said final classes are evil</a> and that post got some attention with interesting comments. Maybe because of the title and the tone I wrote it, a few comments didn't get my real intention and perhaps I should have been more explicit about it. Go ahead and <a href="http://www.leonardoborges.com/writings/2009/03/17/final-classes-are-evil/" target="_blank">read it</a>. I'll wait. :)

Anyway, I thought I'd expand a little more on that subject, explaining my motivation to write that post and going through the topics I think were raised by my dear readers.

First off, final classes <strong>are evil for testing</strong>. And that's what it was all about in my previous post.

If you depend on a final class, your code will be harder to test. Unless the final class provides an interface that captures its intent - or you wrap that dependency.

But this affirmation has some implications that were pointed out by a few comments, some of which I agree with - others, not so much. So let's start!

<strong>- Immutability </strong>

<span style="background-color: #ffffff;">Someone said "Why make a class final ? To make it immutable". This is not entirely true. Only by marking it final you do not ensure immutability. There is no point in doing that if you provide mutators - e.g. setters. - and don't declare your members private and final.</span>

I think it's important to make this clear and understand that the immutability part you achieve by marking a class final is the one of preventing inheritance. Subclasses could possibly contain malicious/careless code and change the internal state of the class.

<span style="background-color: #ffffff;">But there is another way of preventing subclassing without marking the parent final: declare its constructor private and provide a <a href="http://www.javapractices.com/topic/TopicAction.do?Id=21" target="_blank">static factory</a>.</span>

<strong>- Designing for extensibility</strong>

This is hard. It basically means that if you don't mark a class final, you should document it for inheritance.

And this is why inheritance is, in general, a bad OO practice. By documenting the class you basically break encapsulation since you tell the world about your internals.

Therefore, the recommendation is to mark a class final if you're not sure if it's safe to subclass it - or if you just don't wanna bother writing documentation and thinking too much about your "client" subclasses.

<strong>- Coding against interfaces</strong>

This one is simple but yet often forgotten. Do not code to concrete classes. Always choose interfaces where possible.
It roughly means to do this:
<pre lang="java">  List args = new ArrayList();</pre>
instead of this:
<pre lang="java">  ArrayList args = new ArrayList();</pre>
By doing so you have the flexibility to not care about the implementation you're working with, as long as it obeys the interface. That way, the implementations can be swapped at any time without breaking any client's code.

<strong>- The problem with testing</strong>

<strong></strong>All items listed here so far are widely regarded as best practices and the bullet I raised about hard testing usually happens when you "violate" some of them.

Specifically, if you decide not to design a class for inheritance and mark it as final, it's wise - in my opinion - to try and capture the class's intent through an interface.

That way you can safely mark your class final and users of your class can easily use the interface to extend it - by favoring <a href="http://www.artima.com/lejava/articles/designprinciples4.html" target="_blank">composition over inheritance</a> - or by providing it to mocking frameworks for easy testing.

<strong>- Conclusion</strong>

I don't really think there is a rule of thumb here. Java's standard library shows many examples of both approaches and some of them are now considered bad practices but yet are there for backward compatibility. Nevertheless, these are points to consider when designing your classes.

As pointed out by Josua Bloch in his awesome book <a href="http://www.shelfari.com/books/purchase?EditionId=1523265&amp;AssociateId=leonaborge-20&amp;WidgetId=111594" target="_blank">Effective Java</a>, "If a concrete class does not implement a standard interface, then you may inconvenience some programmers by prohibiting inheritance".

As usual, comments are more than welcome :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>401</wp:post_id>
		<wp:post_date>2009-10-07 14:39:56</wp:post_date>
		<wp:post_date_gmt>2009-10-07 21:39:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-few-more-thoughts-on-final-classes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1267527641]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210237137]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>8762</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2010-03-02 07:28:33</wp:comment_date>
		<wp:comment_date_gmt>2010-03-02 14:28:33</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Rogério! Tks for dropping by again :)

Would you mind elaborating a little bit more on your first comment, where you say "but that a poor unit testing tool for the isolation of dependencies is being used".

Note that while I do agree final classes - and members - are a valid OO practice, my sole point was to say it can make things harder to test. This inconvenience can be bypassed by wrapping the dependency with a common interface. Which is ok. But the way I see it, if I design a class that by any means can have external code depending on it, I'll try to implement an interface - unless I design it for inheritance.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>8752</wp:comment_id>
		<wp:comment_author><![CDATA[Rogério Liesenfeld]]></wp:comment_author>
		<wp:comment_author_email>rliesenfeld@hotmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://code.google.com/p/jmockit</wp:comment_author_url>
		<wp:comment_author_IP>201.35.3.15</wp:comment_author_IP>
		<wp:comment_date>2010-03-01 19:17:59</wp:comment_date>
		<wp:comment_date_gmt>2010-03-02 02:17:59</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I think the citation from the Effective Java book (page 92 of the 2nd edition) is somewhat misleading. If you read the two previous paragraphs in the book, it should be clear that the author (J. Bloch) wasnt't trying to encourage the creation of a separate Java interface for each "final" class. Instead, he was simply discussing the potential consequences of the decision of making a concrete class non-overridable. One such consequence could be to "inconvenience some programmers" that wish for whatever reason to create a subclass. Sure, it might occur in some cases (which should be really rare, in my experience). Note that the author's advice (emphasized in the book, page 91) is to "prohibit subclassing in classes that are not designed and documented to be safely subclassed". And the vast majority of classes in a system fit this criteria.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6902</wp:comment_id>
		<wp:comment_author><![CDATA[Guilherme Garnier]]></wp:comment_author>
		<wp:comment_author_email>guilherme.garnier@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://ggarnier.wordpress.com/</wp:comment_author_url>
		<wp:comment_author_IP>201.77.240.12</wp:comment_author_IP>
		<wp:comment_date>2009-12-02 08:31:27</wp:comment_date>
		<wp:comment_date_gmt>2009-12-02 15:31:27</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Nice post, I think now you made your point clearer.

About immutability, I think people are confusing final classes and immutable classes. Final classes, which is what you point as "evil for testing", mean don´t allowing your classes to be subclassed; immutable classes mean don´t allowing your objects´ state to be changed after its creation, i.e., creating a constructor which receives every class attribute as a parameter (and making a safe copy of every object you get as a parameter) and don´t creating setters for your class attributes.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6903</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2009-12-02 08:43:58</wp:comment_date>
		<wp:comment_date_gmt>2009-12-02 15:43:58</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Right on! :)

That's exactly what I said in the first item, Immutability. You can certainly have mutable final classes. I'm glad all these points are clearer now!

tks for stopping by!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6149</wp:comment_id>
		<wp:comment_author><![CDATA[Final classes are evil]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com/writings/2009/03/17/final-classes-are-evil/</wp:comment_author_url>
		<wp:comment_author_IP>75.127.72.28</wp:comment_author_IP>
		<wp:comment_date>2009-10-07 14:51:05</wp:comment_date>
		<wp:comment_date_gmt>2009-10-07 21:51:05</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] Update: Go ahead and read this post in its entirety - including the comments. Then, read my other post where I expand the subject a little more. [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>8751</wp:comment_id>
		<wp:comment_author><![CDATA[Rogério Liesenfeld]]></wp:comment_author>
		<wp:comment_author_email>rliesenfeld@hotmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://code.google.com/p/jmockit</wp:comment_author_url>
		<wp:comment_author_IP>201.35.3.15</wp:comment_author_IP>
		<wp:comment_date>2010-03-01 18:47:44</wp:comment_date>
		<wp:comment_date_gmt>2010-03-02 01:47:44</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[With regards to (unit) testing, the cause of the difficulty is not that a given class on which the tested unit depends was declared "final", but that a poor unit testing tool for the isolation of dependencies is being used.
The fact is, applying the "final" modifier to methods and/or classes is a perfectly valid OO design mechanism, so it should not be ruled out. Not only does it discourage the abuse of inheritance, but it also brings practical benefits by allowing a static analysis tool (such as IDEA) to detect certain forms of unused code.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Soon, off to conquer lands afar</title>
		<link>http://www.leonardoborges.com/writings/2009/10/08/soon-off-to-conquer-lands-afar/</link>
		<pubDate>Thu, 08 Oct 2009 13:50:32 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[ThoughtWorks]]></category>

		<category domain="category" nicename="thoughtworks"><![CDATA[ThoughtWorks]]></category>

		<category domain="tag"><![CDATA[ThoughtWorks]]></category>

		<category domain="tag" nicename="thoughtworks"><![CDATA[ThoughtWorks]]></category>

		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=381</guid>
		<description></description>
		<content:encoded><![CDATA[Once more my life is taking a huge turn.

I've been pretty quiet for the past month and honestly don't know how I managed to hold in my excitement. I've just accepted an offer from <a href="http://www.thoughtworks.com.au/" target="_blank">ThoughtWorks</a> to be based at their australian offices, either in Sydney or Melbourne, depending  on where my 1st project will be.

For those of you who don't know, ThoughtWorks is a global IT consultancy that is really well known in the software development community. It's been advocating agile methodologies and test-driven development for several years now and seems to work really hard to attract and keep <a title="Martin Fowler" href="http://www.martinfowler.com" target="_blank">many</a> <a title="Rebecca Parsons" href="http://www.thoughtworks.com/who-we-are/leadership-profiles/rebecca-parsons.html" target="_blank">bright</a> <a title="Neal Ford" href="http://www.nealford.com/" target="_blank">people</a> <a title="Ola Bini" href="http://olabini.com/" target="_blank">working</a> <a title="All ThoughtWorkers" href="http://www.thoughtworks.com/who-we-are/our-people/profiles.html" target="_blank">there</a>.

As a result, ThoughtWorks inspires companies and professionals around the world by delivering high quality projects and massively supporting/contributing to <a title="Projects created/contributed to by ThoughtWorks" href="http://opensource.thoughtworks.com" target="_blank">open source projects</a>.

Needless to say, I am really excited to be joining a company with such an amazing culture and so many smart people.

The hiring process was long, tough and tiring - but yet enjoyable. It took 5 interviews, 1 code review and 1 pairing session, a process through which I talked to 8 thoughtworkers. They take pride on their hiring process and now I understand why.

Now I'm just going through the bureaucratic side of things: gathering documents, certificates, translations - all in order to apply for my VISA, which can take up to 3 months to get ready. In the meantime, you can still find me here in Madrid, where I'll be celebrating with a few 'cañas'. Feel free to join me! ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>381</wp:post_id>
		<wp:post_date>2009-10-08 06:50:32</wp:post_date>
		<wp:post_date_gmt>2009-10-08 13:50:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>soon-off-to-conquer-lands-afar</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1255009833]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210237075]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>6795</wp:comment_id>
		<wp:comment_author><![CDATA[Cauê Guerra]]></wp:comment_author>
		<wp:comment_author_email>caueguerra@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://caueguerra.com</wp:comment_author_url>
		<wp:comment_author_IP>201.0.173.184</wp:comment_author_IP>
		<wp:comment_date>2009-11-22 17:56:44</wp:comment_date>
		<wp:comment_date_gmt>2009-11-23 00:56:44</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Nos vemos lá!!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6168</wp:comment_id>
		<wp:comment_author><![CDATA[Leandro]]></wp:comment_author>
		<wp:comment_author_email>leandro.de.sousa@click21.com.br</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>189.122.181.133</wp:comment_author_IP>
		<wp:comment_date>2009-10-08 18:28:55</wp:comment_date>
		<wp:comment_date_gmt>2009-10-09 01:28:55</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Caralho, muito foda!
Parabéns, vamos beber!!!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6217</wp:comment_id>
		<wp:comment_author><![CDATA[Rafiu]]></wp:comment_author>
		<wp:comment_author_email>rafawalter@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>189.32.129.24</wp:comment_author_IP>
		<wp:comment_date>2009-10-12 11:54:38</wp:comment_date>
		<wp:comment_date_gmt>2009-10-12 18:54:38</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Show! Vc eh um vencedor! Parabéns!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>9693</wp:comment_id>
		<wp:comment_author><![CDATA[Goodbye Europe, A Two-Year Retrospective]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com/writings/2010/04/10/goodbye-europe-a-two-year-retrospective/</wp:comment_author_url>
		<wp:comment_author_IP>75.127.72.28</wp:comment_author_IP>
		<wp:comment_date>2010-04-10 09:32:37</wp:comment_date>
		<wp:comment_date_gmt>2010-04-10 16:32:37</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] on this topic.Powered by WP Greet Box WordPress PluginNow several months after I announced my odyssey to obtain my Australian work visa, the time has finally [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6169</wp:comment_id>
		<wp:comment_author><![CDATA[Leandro Queiroz]]></wp:comment_author>
		<wp:comment_author_email>leandro.java@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>201.37.205.60</wp:comment_author_IP>
		<wp:comment_date>2009-10-08 18:43:47</wp:comment_date>
		<wp:comment_date_gmt>2009-10-09 01:43:47</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Por que não falar em português?? Afinal você entende! hehe
Parabéns rapá e boa sorte com esta nova experiência!
Está mandando muito bem!

Abraço!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6520</wp:comment_id>
		<wp:comment_author><![CDATA[RuPy 2009: Poznan]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com/writings/2009/11/04/rupy-2009-poznan/</wp:comment_author_url>
		<wp:comment_author_IP>75.127.72.28</wp:comment_author_IP>
		<wp:comment_date>2009-11-04 16:03:47</wp:comment_date>
		<wp:comment_date_gmt>2009-11-04 23:03:47</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] approved and everything was looking good - I was gonna talk about JRuby in the Enterprise - until my move to ThoughtWorks became a reality less than a month [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6789</wp:comment_id>
		<wp:comment_author><![CDATA[Conquistando o mundo &laquo; Cauê Guerra]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://caueguerra.com/conquistando-o-mundo/</wp:comment_author_url>
		<wp:comment_author_IP>72.167.232.187</wp:comment_author_IP>
		<wp:comment_date>2009-11-22 15:21:10</wp:comment_date>
		<wp:comment_date_gmt>2009-11-22 22:21:10</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] processo seletivo, como já citado pelo Leonardo Borges (que deve se mudar para lá na mesma época que eu), é longo e cansativo. Estou nesse processo [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6155</wp:comment_id>
		<wp:comment_author><![CDATA[Francisco Cavedon]]></wp:comment_author>
		<wp:comment_author_email>francisco.cavedon@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>32.104.18.243</wp:comment_author_IP>
		<wp:comment_date>2009-10-08 06:58:11</wp:comment_date>
		<wp:comment_date_gmt>2009-10-08 13:58:11</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[HOLY FUCK!!!! Giant congrats on this, u deserve that man!! now i finally will have a place to stay when going to Australia :D]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6157</wp:comment_id>
		<wp:comment_author><![CDATA[Pedro Pimentel]]></wp:comment_author>
		<wp:comment_author_email>zukunft@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.pedropimentel.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2009-10-08 07:45:40</wp:comment_date>
		<wp:comment_date_gmt>2009-10-08 14:45:40</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Yeah!
Congrats and good luck in the land down under !
=D]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6158</wp:comment_id>
		<wp:comment_author><![CDATA[Felipe Cypriano]]></wp:comment_author>
		<wp:comment_author_email>fmcypriano@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>187.14.156.202</wp:comment_author_IP>
		<wp:comment_date>2009-10-08 08:03:08</wp:comment_date>
		<wp:comment_date_gmt>2009-10-08 15:03:08</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Amazing! Congratulations.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6159</wp:comment_id>
		<wp:comment_author><![CDATA[eric]]></wp:comment_author>
		<wp:comment_author_email>adiscgolfer@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>66.210.88.169</wp:comment_author_IP>
		<wp:comment_date>2009-10-08 08:17:11</wp:comment_date>
		<wp:comment_date_gmt>2009-10-08 15:17:11</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Major Congrats man!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6160</wp:comment_id>
		<wp:comment_author><![CDATA[Marcos Toledo]]></wp:comment_author>
		<wp:comment_author_email>mtoledo@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.marcostoledo.com</wp:comment_author_url>
		<wp:comment_author_IP>95.169.232.45</wp:comment_author_IP>
		<wp:comment_date>2009-10-08 08:19:29</wp:comment_date>
		<wp:comment_date_gmt>2009-10-08 15:19:29</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[That's really *GREAT* news dude!

I wish you all the best on your new job and we'll def talk about those news over some cañas when your back :)

Cheers!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6166</wp:comment_id>
		<wp:comment_author><![CDATA[Adib]]></wp:comment_author>
		<wp:comment_author_email>adib.murad@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>200.216.75.12</wp:comment_author_IP>
		<wp:comment_date>2009-10-08 14:50:45</wp:comment_date>
		<wp:comment_date_gmt>2009-10-08 21:50:45</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Woohoo!!!  \o/]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6165</wp:comment_id>
		<wp:comment_author><![CDATA[Evelyn Pitrowsky]]></wp:comment_author>
		<wp:comment_author_email>evelyn.pe@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>32.104.18.243</wp:comment_author_IP>
		<wp:comment_date>2009-10-08 14:03:37</wp:comment_date>
		<wp:comment_date_gmt>2009-10-08 21:03:37</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[that was a wonderful news my dear!!! congrats!!
we'll celebrate everyday here in Rio!!! uhuuuuuu
well, now i have a place to go on my next vaccation!! eeeeee!!
and what about your girlfriend? now you'll have to marrie her! hehehe]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6162</wp:comment_id>
		<wp:comment_author><![CDATA[Arnaldo Nascimento]]></wp:comment_author>
		<wp:comment_author_email>asnjunior@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.arnaldonascimento.com</wp:comment_author_url>
		<wp:comment_author_IP>200.186.121.130</wp:comment_author_IP>
		<wp:comment_date>2009-10-08 13:34:35</wp:comment_date>
		<wp:comment_date_gmt>2009-10-08 20:34:35</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Congratulations from Brazil!!! Commemoration countdown --&gt; 2 days ;-)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6163</wp:comment_id>
		<wp:comment_author><![CDATA[kadu]]></wp:comment_author>
		<wp:comment_author_email>carlos.bevilacqua@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>189.66.79.189</wp:comment_author_IP>
		<wp:comment_date>2009-10-08 13:44:13</wp:comment_date>
		<wp:comment_date_gmt>2009-10-08 20:44:13</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thumbs Up bud, and my Kudos...you deserve it...]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6161</wp:comment_id>
		<wp:comment_author><![CDATA[Diego]]></wp:comment_author>
		<wp:comment_author_email>dmmzap@hotmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>201.16.228.29</wp:comment_author_IP>
		<wp:comment_date>2009-10-08 12:52:15</wp:comment_date>
		<wp:comment_date_gmt>2009-10-08 19:52:15</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Awesome Leo!

Congrats! You def deserve it!
First geek I know, that is obviously well succeeded and have a wife! :P

Au revoir mon ami!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6179</wp:comment_id>
		<wp:comment_author><![CDATA[Casé Oliveira]]></wp:comment_author>
		<wp:comment_author_email>caseol@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>189.106.17.145</wp:comment_author_IP>
		<wp:comment_date>2009-10-09 06:43:26</wp:comment_date>
		<wp:comment_date_gmt>2009-10-09 13:43:26</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Você é  cara!!!
PARABÉNS!!!

[]'s

Casé]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>6252</wp:comment_id>
		<wp:comment_author><![CDATA[Bruno Carvalho]]></wp:comment_author>
		<wp:comment_author_email>br.carvalho@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>32.104.18.243</wp:comment_author_IP>
		<wp:comment_date>2009-10-14 05:43:02</wp:comment_date>
		<wp:comment_date_gmt>2009-10-14 12:43:02</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Parabéns Leo vc merece pq é o cara!!!

Abraços]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21176</wp:comment_id>
		<wp:comment_author><![CDATA[One year of ThoughtWorks: a retrospective]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com/writings/2011/04/25/one-year-of-thoughtworks-a-retrospective/</wp:comment_author_url>
		<wp:comment_author_IP>75.127.72.28</wp:comment_author_IP>
		<wp:comment_date>2011-04-25 08:51:59</wp:comment_date>
		<wp:comment_date_gmt>2011-04-25 15:51:59</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] Greet Box WordPress PluginIt seems like it was yesterday that I wrote about my next big challenge: Moving to Australia to join ThoughtWorks. Since then a year has passed and I thought I&#8217;d share a little bit about what it&#8217;s been [...] ]]></wp:comment_content>
		<wp:comment_approved>spam</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21179</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges: One year of ThoughtWorks: a retrospective | Software Secret Weapons]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.softwaresecretweapons.com/blog/1028/leonardo-borges-one-year-of-thoughtworks-a-retrospective</wp:comment_author_url>
		<wp:comment_author_IP>74.220.219.119</wp:comment_author_IP>
		<wp:comment_date>2011-04-25 14:12:15</wp:comment_date>
		<wp:comment_date_gmt>2011-04-25 21:12:15</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] seems like it was yesterday that I wrote about my next big challenge: Moving to Australia to join ThoughtWorks. Since then a year has passed and I thought Iâd share a little bit about what itâs been [...] ]]></wp:comment_content>
		<wp:comment_approved>spam</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>My slides from Rails Summit &#039;09</title>
		<link>http://www.leonardoborges.com/writings/2009/10/18/my-slides-from-rails-summit-09/</link>
		<pubDate>Sun, 18 Oct 2009 13:58:45 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Conferences]]></category>

		<category domain="category" nicename="conferences"><![CDATA[Conferences]]></category>

		<category domain="tag"><![CDATA[Conferences]]></category>

		<category domain="tag" nicename="conferences"><![CDATA[Conferences]]></category>

		<category domain="tag"><![CDATA[RailsSummit2009]]></category>

		<category domain="tag" nicename="railssummit2009"><![CDATA[RailsSummit2009]]></category>

		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=434</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.leonardoborges.com/writings/wp-content/uploads/2009/10/rs2009.jpg"><img class="aligncenter size-full wp-image-441" title="Rails Summit 2009 Locaweb" src="http://www.leonardoborges.com/writings/wp-content/uploads/2009/10/rs2009.jpg" alt="Rails Summit 2009 Locaweb" width="500" height="333" /></a>
Rails Summit finished a few days ago and I have only one word to describe it: <strong>Awesome</strong>!

I met some really cool people, discussed a whole bunch of technical subjects and managed not to get so nervous in my first presentation ever - I'm not counting internal presentations I've done for my team...

My slides and source files can be found <a href="http://github.com/leonardoborges/railssummit09">here</a>. Feel free to contact me with questions if you got any.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>434</wp:post_id>
		<wp:post_date>2009-10-18 06:58:45</wp:post_date>
		<wp:post_date_gmt>2009-10-18 13:58:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-slides-from-rails-summit-09</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1255881055]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[222075735]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Rails Summit 2009 Locaweb</title>
		<link>http://www.leonardoborges.com/writings/2009/10/18/my-slides-from-rails-summit-09/rails-summit-2009-locaweb/</link>
		<pubDate>Sun, 18 Oct 2009 15:50:28 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2009/10/rs2009.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>441</wp:post_id>
		<wp:post_date>2009-10-18 08:50:28</wp:post_date>
		<wp:post_date_gmt>2009-10-18 15:50:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-summit-2009-locaweb</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>434</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2009/10/rs2009.jpg</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2009/10/rs2009.jpg]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"500";s:6:"height";s:3:"333";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:18:"2009/10/rs2009.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:25:"Rails Summit 2009 Locaweb";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>RuPy 2009: Poznan</title>
		<link>http://www.leonardoborges.com/writings/2009/11/04/rupy-2009-poznan/</link>
		<pubDate>Wed, 04 Nov 2009 23:03:40 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=444</guid>
		<description></description>
		<content:encoded><![CDATA[Next week the <a href="http://rupy.eu/">RuPy Conference 2009</a> will be held in Poznan, Poland and I was planning to talk there.

My talk had been approved and everything was looking good - I was gonna talk about JRuby in the Enterprise - until <a href="http://www.leonardoborges.com/writings/2009/10/08/soon-off-to-conquer-lands-afar/">my move to ThoughtWorks</a> became a reality less than a month ago.

This move led to a lack of support and time from my current company. I was counting on it to go there but since I'll be leaving soon, that wouldn't be possible.

Since then I've been in touch with Adam Parchimowicz - part of RuPy's organization team - and we tried to find alternatives to this. I wanted to thank him for all the effort he put into trying to make this happen. The terms we agreed on were good enough but this change of priorities kicked in too close to the event.

Long story short, I'd like to apologize for not being able to give my talk at RuPy this year.

Apart from that, I gave a very similar talk at the <a href="http://www.railssummit.com.br/">Rails Summit Latin America</a> this year in Brazil and you can find the slides and sources for it in my <a href="http://www.leonardoborges.com/writings/presentations/">Presentations</a> page. ( Video coming soon )]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>444</wp:post_id>
		<wp:post_date>2009-11-04 16:03:40</wp:post_date>
		<wp:post_date_gmt>2009-11-04 23:03:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rupy-2009-poznan</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1257377447]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[288118796]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Managing multiple ruby versions</title>
		<link>http://www.leonardoborges.com/writings/2010/01/02/managing-multiple-ruby-versions/</link>
		<pubDate>Sat, 02 Jan 2010 16:11:57 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[JRuby]]></category>

		<category domain="category" nicename="jruby"><![CDATA[JRuby]]></category>

		<category domain="tag"><![CDATA[JRuby]]></category>

		<category domain="tag" nicename="jruby"><![CDATA[JRuby]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=455</guid>
		<description></description>
		<content:encoded><![CDATA[Today I read a nice <a href="http://akitaonrails.com/2010/01/01/limpando-meu-ambiente-de-desenvolvimento" target="_blank">post</a> - in Portuguese - by <a href="http://akitaonrails.com/" target="_blank">Fábio Akita</a> on how to manage multiple ruby versions on your machine. I've tried it once with some tool I can't even remember the name but failed miserably.

But this time things look very different. The tool here is the <a href="http://rvm.beginrescueend.com" target="_blank">rvm</a> - short for Ruby Version manager - and it works just great.

Let's cut to the chase and imagine that you, like me, want to run/develop/test your code on both ruby 1.8.7 and ruby 1.9.1. These steps would get you up and running in a few minutes:

<strong>Install rvm:</strong>
<pre lang="bash">
$ gem sources -a http://gemcutter.org/
$ gem install rvm
$ rvm-install
$ echo "if [[ ! -z $HOME/.rvm ]] ; then source $HOME/.rvm ; fi" >> ~/.bash_profile
$ source ~/.rvm/scripts/rvm
</pre>

<strong>Install the ruby interpreters you want to use:</strong>
<pre lang="bash">
$ rvm  install ruby-1.8.7-p160
$ rvm  install ruby-1.9.1
</pre>

Now it's important to notice that at this point you have separate gem installations for each of the interpreters you've installed in the previous step. That said, just go ahead and switch between your interpreters and use your command line scripts - ruby, gem, etc... - as usual.

<strong>Switching between interpreters:</strong>
<pre lang="bash">
$ rvm ruby-1.8.7-p160  #switch to the specified version 
$ ruby -v
ruby 1.8.7 (2009-04-08 patchlevel 160) [i686-darwin9.8.0]
$ gem install rails  #note I'm not using sudo since the new gem paths point to the user's home directory 

$ rvm ruby-1.9.1  #switch to the specified version 
$ ruby -v
ruby 1.9.1p376 (2009-12-07 revision 26041) [i386-darwin9.8.0]
$ gem install rails  #note I'm not using sudo since the new gem paths point to the user's home directory
</pre>

And that's it, just go on and install rails, merb, sinatra or whatever rocks your boat!
rvm will work with MRI/YARV, JRuby, Ruby EE and Rubinius. Enjoy and don't forget to check <a href="http://rvm.beginrescueend.com" target="_blank">rvm</a>'s website for the complete documentation! :) ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>455</wp:post_id>
		<wp:post_date>2010-01-02 09:11:57</wp:post_date>
		<wp:post_date_gmt>2010-01-02 16:11:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>managing-multiple-ruby-versions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1263395845]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210237198]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>7615</wp:comment_id>
		<wp:comment_author><![CDATA[Monit, Thinking Sphinx and RVM]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com/writings/2010/01/13/monit-thinking-sphinx-and-rvm/</wp:comment_author_url>
		<wp:comment_author_IP>75.127.72.28</wp:comment_author_IP>
		<wp:comment_date>2010-01-13 08:27:50</wp:comment_date>
		<wp:comment_date_gmt>2010-01-13 15:27:50</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] Managing multiple ruby versions   Jan 13 [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>7503</wp:comment_id>
		<wp:comment_author><![CDATA[skim]]></wp:comment_author>
		<wp:comment_author_email>skim.la@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>76.169.128.253</wp:comment_author_IP>
		<wp:comment_date>2010-01-06 19:57:05</wp:comment_date>
		<wp:comment_date_gmt>2010-01-07 02:57:05</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[For Windows, there's a really nice gem called pik, created by Gordon Thiesfeld

pik 191
pik 186 mi
pik 186 ms]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>7507</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2010-01-07 02:15:49</wp:comment_date>
		<wp:comment_date_gmt>2010-01-07 09:15:49</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks for sharing!

I'm sure windows developers will appreciate it! ;)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>7503</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Monit, Thinking Sphinx and RVM</title>
		<link>http://www.leonardoborges.com/writings/2010/01/13/monit-thinking-sphinx-and-rvm/</link>
		<pubDate>Wed, 13 Jan 2010 15:27:42 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Sphinx]]></category>

		<category domain="category" nicename="sphinx"><![CDATA[Sphinx]]></category>

		<category domain="tag"><![CDATA[Sphinx]]></category>

		<category domain="tag" nicename="sphinx"><![CDATA[Sphinx]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=467</guid>
		<description></description>
		<content:encoded><![CDATA[In one of my Rails projects I'm using <a href="http://www.sphinxsearch.com/" target="_blank">Sphinx</a> to provide full-text search capabilities. To integrate both worlds I chose <a href="http://freelancing-god.github.com/ts/en/" target="_blank">Thinking Sphinx</a>, which is just great and so far has met all of my expectations.

Also, <a href="http://www.leonardoborges.com/writings/2010/01/02/managing-multiple-ruby-versions/" target="_blank">as I previously mentioned</a>, I'm using <a href="http://rvm.beginrescueend.com/">RVM</a> to manage my ruby installations on both my development and production machines and this setup is what motivated this post.

I use <a href="http://mmonit.com/monit/" target="_blank">Monit</a> to monitor the services running on my production server - nginx, mysql, php - and as of the first deploy of this application, it only made sense to also monitor Sphinx.

In order to create an initialization script, I would need at least a way to start and stop sphinx from the command line, which, using Thinking Sphinx, can be done using these rake tasks:
<pre lang="bash">
$ rake thinking_sphinx:stop
$ rake thinking_sphinx:start
</pre>
It's worth mentioning now that I don't run sphinx as root. I run it with the same user my rails application uses. For the purpose of this post, let's call it <em>deploy</em>.

When I tried using my script I got errors such as these:

<pre lang="bash">
Missing the Rails 2.3.5 gem. Please `gem install -v=2.3.5 rails`, update your RAILS_GEM_VERSION setting in config/environment.rb for the Rails version you do have installed, or comment out RAILS_GEM_VERSION to use the latest version installed.
</pre>

After some digging around I found that the GEM_HOME environment variable for my deploy user wasn't being set correctly - something to do with rvm, but not quite sure - and to fix this, well, I just had to set it, leaving the final working version of my script somewhat like this - simplified :

<pre lang="bash">#! /bin/sh

### BEGIN INIT INFO
### END INIT INFO

set_path="cd /your/rails/app/root; export GEM_HOME=/path/to/your/gems; RAILS_ENV=production;"

case "$1" in
  start)
        echo -n "Starting sphinx: "
                su - deploy -c "$set_path rake ts:start" >> /var/log/sphinx.log 2>&1
        echo "done."
        ;;
  stop)
        echo -n "Stopping sphinx: "
                su - deploy -c "$set_path rake ts:stop" >> /var/log/sphinx.log 2>&1
        echo "done."
        ;;
      *)
            N=/etc/init.d/sphinx
            echo "Usage: $N {start|stop}" >&2
            exit 1
            ;;
    esac

    exit 0
</pre>

There are 2 things happening here. First, regardless of the user I'm running this init script as, I drop privileges in order to execute the rake task with my deploy user. Second, I set the GEM_HOME environment variable to stop getting the 'gem not found' errors.

After that, monit was able not only to monitor my sphinx instance, but also (re)start/stop it with the correct user.

I'm no Linux wizard so if you wanna suggest improvements to this script, feel free to do so!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>467</wp:post_id>
		<wp:post_date>2010-01-13 08:27:42</wp:post_date>
		<wp:post_date_gmt>2010-01-13 15:27:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>monit-thinking-sphinx-and-rvm</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1263396462]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210237233]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>10483</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>120.16.255.153</wp:comment_author_IP>
		<wp:comment_date>2010-05-27 04:21:12</wp:comment_date>
		<wp:comment_date_gmt>2010-05-27 11:21:12</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks Jason!

I hope it was useful for you. :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>10379</wp:comment_id>
		<wp:comment_author><![CDATA[Jason Green]]></wp:comment_author>
		<wp:comment_author_email>jason.green@dynamic50.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.dynamic50.com</wp:comment_author_url>
		<wp:comment_author_IP>93.97.189.38</wp:comment_author_IP>
		<wp:comment_date>2010-05-20 04:37:16</wp:comment_date>
		<wp:comment_date_gmt>2010-05-20 11:37:16</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[nice script!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>My take on Rails environment specific constants</title>
		<link>http://www.leonardoborges.com/writings/2010/01/23/my-take-on-rails-environment-specific-constants/</link>
		<pubDate>Sat, 23 Jan 2010 17:43:44 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=479</guid>
		<description></description>
		<content:encoded><![CDATA[It’s funny how every Rails application I - and possibly you - work on ends up needing some sort of per-environment global constants.

Examples may include the application url - It might be used in account activation emails and thus should be different between the development and production environments.

Or perhaps your application depends on external services that, depending on the environment, are available in different URIs.

There are a couple solutions out there but my needs were simple and straightforward, thus I developed a small rails plugin that is the simplest thing that could possibly work: <strong><a href="http://github.com/leonardoborges/app_constants">AppConstants</a></strong>.

It's been useful for my current project and I hope it can be useful to someone else too ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>479</wp:post_id>
		<wp:post_date>2010-01-23 10:43:44</wp:post_date>
		<wp:post_date_gmt>2010-01-23 17:43:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-take-on-rails-environment-specific-constants</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1264268625]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210237243]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>8704</wp:comment_id>
		<wp:comment_author><![CDATA[Upgrading AppConstants to Rails 3]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com/writings/2010/02/28/upgrading-appconstants-to-rails-3/</wp:comment_author_url>
		<wp:comment_author_IP>75.127.72.28</wp:comment_author_IP>
		<wp:comment_date>2010-02-28 03:20:06</wp:comment_date>
		<wp:comment_date_gmt>2010-02-28 10:20:06</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] in January I announced a small but useful plugin called AppConstants, that basically provides a central place where you [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>7839</wp:comment_id>
		<wp:comment_author><![CDATA[Philip MacIver]]></wp:comment_author>
		<wp:comment_author_email>philip@ivercore.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>95.214.50.230</wp:comment_author_IP>
		<wp:comment_date>2010-01-24 06:23:59</wp:comment_date>
		<wp:comment_date_gmt>2010-01-24 13:23:59</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Yeah that is what I meant. And wouldn't you just use the environment files to specify your configs?]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>7855</wp:comment_id>
		<wp:comment_author><![CDATA[Philip MacIver]]></wp:comment_author>
		<wp:comment_author_email>philip@ivercore.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.ivercore.com</wp:comment_author_url>
		<wp:comment_author_IP>212.40.252.169</wp:comment_author_IP>
		<wp:comment_date>2010-01-25 01:54:31</wp:comment_date>
		<wp:comment_date_gmt>2010-01-25 08:54:31</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Ah okay, got ya.

The only thing that I would say, is that maybe you should have extended configatron, to allow environment specific loading. Because the nice thing about that is that it allows you to have scoped constants. So not just 

Configatron.constant

But

Configatron.scope1.scope2.scope3.constant 

But looking at the code that you wrote, I wouldn't think that it would be hard to reproduce this behaviour. Also thinking about it, I do agree that having all the constants in one place is a lot neater and cleaner.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>7857</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2010-01-25 02:08:11</wp:comment_date>
		<wp:comment_date_gmt>2010-01-25 09:08:11</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[One of the reasons I didn't exntend Configatron is that I didn't remember it existed until right after I finished my plugin :P

And yeah, scoped constant shouldn't be hard to add. I might do that in the futurre. I just didn't need it yet.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>7855</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>7819</wp:comment_id>
		<wp:comment_author><![CDATA[Philip MacIver]]></wp:comment_author>
		<wp:comment_author_email>philip@ivercore.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>95.214.57.42</wp:comment_author_IP>
		<wp:comment_date>2010-01-23 15:03:55</wp:comment_date>
		<wp:comment_date_gmt>2010-01-23 22:03:55</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hmmm, this seems exactly like confirmation. Maybe you should check it out.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>7820</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>79.147.147.0</wp:comment_author_IP>
		<wp:comment_date>2010-01-23 15:08:45</wp:comment_date>
		<wp:comment_date_gmt>2010-01-23 22:08:45</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Confirmation? I think you meant Configatron, right?

If so, it is similar although I did not find a way to specify environment specific attributes in configatron without putting if statements in the code. With this plugin, the constants are defined in an external file, divided by environment. That made the code simpler.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>7819</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>7840</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>79.147.145.25</wp:comment_author_IP>
		<wp:comment_date>2010-01-24 07:41:02</wp:comment_date>
		<wp:comment_date_gmt>2010-01-24 14:41:02</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[That's what I wanted to avoid: configuring the constants in the environment files. I don't think it's the best place for them to be. We end up mixing Rails and Application specific configurations.

Configatron does allow you to load constants from yaml files, but then, you'd have to replicate all constants for the different environments you might have, since configatron expects a full set.

Whereas the way I've done it, you just use normal inheritance in yaml files, and the environment files remain clean.

Both solve essentially the same problem. I just chose what for me looks like a cleaner approach.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>def_p_extension</title>
		<link>http://www.leonardoborges.com/writings/?attachment_id=493</link>
		<pubDate>Wed, 03 Feb 2010 15:51:04 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2010/02/def_p_extension.diff</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>493</wp:post_id>
		<wp:post_date>2010-02-03 08:51:04</wp:post_date>
		<wp:post_date_gmt>2010-02-03 15:51:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>def_p_extension</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2010/02/def_p_extension.diff</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2010/02/def_p_extension.diff]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Hacking Ruby&#039;s Syntax</title>
		<link>http://www.leonardoborges.com/writings/2010/02/03/hacking-rubys-syntax/</link>
		<pubDate>Wed, 03 Feb 2010 16:11:53 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=486</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>What?</strong>

In Ruby you have basically two ways of defining private methods:

<script src="https://gist.github.com/791025.js?file=test.rb"></script>

I see a small problem with both approaches. In the first one, and the most obvious, is that you need to duplicate the method name as well as add an extra method call - private - just to change its visibility.

The second approach avoids this but adds the risk of accidentally putting a method that is intended to be public under the private section of the source file, which can render an annoying debugging session.

<strong>Why?</strong>

Personally, I like to have a <a href="http://www.leonardoborges.com/writings/2009/09/18/refactoring-for-readability/" target="_blank">smooth reading flow in my source files</a>. That means that if the public method_a makes use of the private method_b, I want method_b defined right below its caller, which is possible - but verbose - using the private method call:

<script src="https://gist.github.com/791026.js?file=test.rb"></script>

But can be somewhat harder to accomplish if you decide to split your source file in sections:

<script src="https://gist.github.com/791028.js?file=test.rb"></script>

I wanted to be able to define a private method with a single reserved keyword...

<strong>How?</strong>

What if I could define a private method using this new syntax:

<script src="https://gist.github.com/791029.js?file=test.rb"></script>

It turns out I can.

Notice the <strong>def_p</strong> keyword? This is a new keyword I created by changing ruby's parser and that behaves mostly like the <strong>def</strong> keyword, except that it defines a private method instead.

If you wanna read the code that allows this behavior and try it yourself, <a href="http://www.leonardoborges.com/writings/wp-content/uploads/2010/02/def_p_extension.diff">download the patch I wrote</a> and apply it to the ruby source code - I patched version <strong>1.9.1-p376</strong>.

After applying the patch, just build ruby as usual:

<script src="https://gist.github.com/791031.js?file=gistfile1.eclass"></script>

And then try running this script:

<script src="https://gist.github.com/791033.js?file=test.rb"></script>

You should see the following output:

<script src="https://gist.github.com/791034.js?file=gistfile1.eclass"></script>

Happy hacking :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>486</wp:post_id>
		<wp:post_date>2010-02-03 09:11:53</wp:post_date>
		<wp:post_date_gmt>2010-02-03 16:11:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hacking-rubys-syntax</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1295692498]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210237265]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>8090</wp:comment_id>
		<wp:comment_author><![CDATA[herval]]></wp:comment_author>
		<wp:comment_author_email>hervalfreire@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://hervalicio.us</wp:comment_author_url>
		<wp:comment_author_IP>187.64.32.150</wp:comment_author_IP>
		<wp:comment_date>2010-02-03 15:30:27</wp:comment_date>
		<wp:comment_date_gmt>2010-02-03 22:30:27</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[you could achieve something similar using an 'annotation', without any need to hack the parser itself: http://bens.me.uk/2009/java-style-annotations-in-ruby

annotations, by the way, are how Python declares static (class) methods.. :-)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>8093</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>79.147.145.25</wp:comment_author_IP>
		<wp:comment_date>2010-02-03 15:51:22</wp:comment_date>
		<wp:comment_date_gmt>2010-02-03 22:51:22</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Interesting concept. I've read about it before - from a different source though.

I decided to hack into the parser because I believe this specific case should be somewhat part of the core language syntax - as it is in java, for instance.

Nevertheless, it was an interesting trip to hack through the parser and worth on its own! :P

Vlw!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>8099</wp:comment_id>
		<wp:comment_author><![CDATA[Philip MacIver]]></wp:comment_author>
		<wp:comment_author_email>philip@ivercore.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.ivercore.com</wp:comment_author_url>
		<wp:comment_author_IP>85.177.149.254</wp:comment_author_IP>
		<wp:comment_date>2010-02-03 20:40:13</wp:comment_date>
		<wp:comment_date_gmt>2010-02-04 03:40:13</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hmmmm, seems like you've been reading my mind. Just a few days ago I was thinking how crap it is to have to define method scopes the way they are now.

But the way I thought of to do it was just to create 3 methods
priv (private)
pub (public)
pro (protected)

that take blocks which would be the method definitions as they are now.

So that you could write something like

pub def my_method .. end

I haven't tried to code this up yet but that is the way that I was thinking of doing it. And for me it is more natural to read it like that than def_p. But like they say, there are many ways to crack a nut, and many ways to skin a cat. So whatever works best for the individual I guess]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>8111</wp:comment_id>
		<wp:comment_author><![CDATA[Tiago Fernandez]]></wp:comment_author>
		<wp:comment_author_email>tiago182@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://tiagofernandez.blogspot.com</wp:comment_author_url>
		<wp:comment_author_IP>82.150.248.28</wp:comment_author_IP>
		<wp:comment_date>2010-02-04 03:05:55</wp:comment_date>
		<wp:comment_date_gmt>2010-02-04 10:05:55</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Kudos for the good initiative :)

In the end I think "private def my_method" would be simpler and more natural to read, just like Groovy and Scala. Ruby should borrow from them.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>8112</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2010-02-04 03:08:02</wp:comment_date>
		<wp:comment_date_gmt>2010-02-04 10:08:02</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[tks!

Totally agree on the readability issue you pointed out. <strong>def_p</strong> is just a prototype to see how many people also miss this syntax.

It's good to know I'm not alone. ;)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>8111</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>8107</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>85.48.194.213</wp:comment_author_IP>
		<wp:comment_date>2010-02-04 01:38:24</wp:comment_date>
		<wp:comment_date_gmt>2010-02-04 08:38:24</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[You are right in that
<pre lang="ruby">
priv def my_method
end
</pre>

reads better than
<pre lang="ruby">
def_p my_method
end
</pre>

I just chose def_p - as in define private - because I was more concerned about making it work.

Just a naming clarification here: priv | pro | pub cannot be methods in order to allow your syntax. They'd have to be reserved keywords - just like def - and have to be understood by the parser.

If you look at the patch I wrote, you'll see it shouldn't be too hard to implement it.

Cheers]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>leonardo_borges_about_photo</title>
		<link>http://www.leonardoborges.com/writings/about-2/leonardo_borges_about/</link>
		<pubDate>Fri, 05 Feb 2010 11:12:12 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2007/10/leonardo_borges_about.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Leonardo borges]]></excerpt:encoded>
		<wp:post_id>501</wp:post_id>
		<wp:post_date>2010-02-05 04:12:12</wp:post_date>
		<wp:post_date_gmt>2010-02-05 11:12:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>leonardo_borges_about</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>5</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2007/10/leonardo_borges_about.jpg</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2007/10/leonardo_borges_about.jpg]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"379";s:6:"height";s:3:"301";s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:33:"2007/10/leonardo_borges_about.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Dependency Injection and Testing with the Spring framework</title>
		<link>http://www.leonardoborges.com/writings/?attachment_id=503</link>
		<pubDate>Tue, 16 Feb 2010 12:47:13 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2010/02/mtt_001_spring.pdf</guid>
		<description></description>
		<content:encoded><![CDATA[Presentation given to my team at Mirai.]]></content:encoded>
		<excerpt:encoded><![CDATA[Dependency Injection and Testing with the Spring framework]]></excerpt:encoded>
		<wp:post_id>503</wp:post_id>
		<wp:post_date>2010-02-16 05:47:13</wp:post_date>
		<wp:post_date_gmt>2010-02-16 12:47:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mtt_001_spring</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2010/02/mtt_001_spring.pdf</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2010/02/mtt_001_spring.pdf]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Sources for Dependency Injection and Testing with the Spring framework</title>
		<link>http://www.leonardoborges.com/writings/?attachment_id=504</link>
		<pubDate>Tue, 16 Feb 2010 12:49:24 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2010/02/testingwithspring.rar</guid>
		<description></description>
		<content:encoded><![CDATA[Sources for the Presentation I gave to my team at Mirai]]></content:encoded>
		<excerpt:encoded><![CDATA[Sources for Dependency Injection and Testing with the Spring framework]]></excerpt:encoded>
		<wp:post_id>504</wp:post_id>
		<wp:post_date>2010-02-16 05:49:24</wp:post_date>
		<wp:post_date_gmt>2010-02-16 12:49:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testingwithspring</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2010/02/testingwithspring.rar</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2010/02/testingwithspring.rar]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Learning Objective-C: a Ruby analogy</title>
		<link>http://www.leonardoborges.com/writings/2010/02/25/learning-objective-c-a-ruby-analogy/</link>
		<pubDate>Thu, 25 Feb 2010 21:31:40 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Objective-C]]></category>

		<category domain="category" nicename="objective-c"><![CDATA[Objective-C]]></category>

		<category domain="tag"><![CDATA[Objective-C]]></category>

		<category domain="tag" nicename="objective-c"><![CDATA[Objective-C]]></category>

		<category domain="tag"><![CDATA[Programming]]></category>

		<category domain="tag" nicename="programming"><![CDATA[Programming]]></category>

		<category><![CDATA[Programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=506</guid>
		<description></description>
		<content:encoded><![CDATA[Learning new programming languages is fun. And if it's your 2nd, 3rd...Nth programming language you will eventually look for features you already know and love.

Coming from Ruby - but after having done my fair amount of Java for many years, among other things - I end up looking for features like <a href="http://www.leonardoborges.com/writings/2009/07/22/procs-lambdas-blocks-whats-the-difference/" target="_blank">blocks</a>, <a href="http://rubylearning.com/satishtalim/ruby_open_classes.html" target="_blank">open classes</a> and syntax sugar like <a href="http://ruby-doc.org/core/classes/Module.html#M001681" target="_blank">automatic generation of attribute accessors.</a> These are hard to let go of.

Having decided to learn <a href="http://developer.apple.com/Mac/library/documentation/Cocoa/Conceptual/ObjectiveC/index.html" target="_blank">Objective-C</a> recently, I was delighted to find out that all of these are available - for better or for worse - and wanted to share this analogy with its Ruby counterparts.

<strong>- Attribute accessors</strong>


In ruby, this class definition

<script src="https://gist.github.com/790881.js?file=gistfile1.rb"></script>

implements for you the getters and setters of the instance variable <strong>name</strong>.


In Objective-C, the combination of the @property and @synthesize directives provides you with roughly the same result:

<script src="https://gist.github.com/790882.js?file=gistfile1.m"></script>

Now the compiler is responsible for writing those getters/setters for you.

<strong>- Open classes & blocks</strong>


Blocks in ruby are the structures that allow you to - among other things - iterate over arrays like this:

<script src="https://gist.github.com/790883.js?file=gistfile1.rb"></script>

Objective-C doesn't have an 'each' method in its root array class (NSArray) but since it does support blocks and open classes, you could just write it yourself:

<script src="https://gist.github.com/790884.js?file=gistfile1.m"></script>

Yes, I know the syntax isn't appealing, but using it in your program is a bit better:

<script src="https://gist.github.com/790886.js?file=gistfile1.m"></script>

Given the syntactic differences, the code above is very similar to its ruby counterpart. Iterating over an array is just one of the many things blocks are useful for. Others might include dealing with files, network sockets etc...

Blocks are powerful structures and are not created everyday, but it's nice to know that you can resort to them when the time comes. ;)
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>506</wp:post_id>
		<wp:post_date>2010-02-25 14:31:40</wp:post_date>
		<wp:post_date_gmt>2010-02-25 21:31:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>learning-objective-c-a-ruby-analogy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1295673782]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_sociableoff</wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[212826267]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>11517</wp:comment_id>
		<wp:comment_author><![CDATA[programming blog]]></wp:comment_author>
		<wp:comment_author_email>Chenoweth1130@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.anildewani.com/</wp:comment_author_url>
		<wp:comment_author_IP>64.53.171.234</wp:comment_author_IP>
		<wp:comment_date>2010-07-24 13:10:25</wp:comment_date>
		<wp:comment_date_gmt>2010-07-24 20:10:25</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[This helped me to accomplish my job with fun :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Upgrading AppConstants to Rails 3</title>
		<link>http://www.leonardoborges.com/writings/2010/02/28/upgrading-appconstants-to-rails-3/</link>
		<pubDate>Sun, 28 Feb 2010 10:19:59 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=527</guid>
		<description></description>
		<content:encoded><![CDATA[Back in January I <a href="http://www.leonardoborges.com/writings/2010/01/23/my-take-on-rails-environment-specific-constants/" target="_blank">announced</a> a small but useful plugin called <a href="http://github.com/leonardoborges/app_constants">AppConstants</a>, that basically provides a central place where you can store environment specific constants. And since I started using Rails 3 in the past week, I thought I'd make it Rails 3 compatible.

The code is really simple and - as I expected - the upgrade process was quite straight forward.

I'm not gonna write a guide here on how to upgrade your plugins to Rails 3 - there is plenty about that around the web - but instead, just show the steps I went through to upgrade mine. Similar plugins might have a similar upgrade path.

<strong>- Generators</strong>

My plugin makes use of a simple generator that copies its default constants file and initializer to <em>Rails.root/config</em> and <em>Rails.root/config/initializers</em>, respectively. In Rails 2.x it was located under <em>Rails.root/vendor/plugins/app_constants/generators/app_constants</em> and it was defined like so:

<script src="https://gist.github.com/790878.js?file=gistfile1.rb"></script>

In Rails 3, the generators had to be moved to <em>Rails.root/vendor/plugins/app_constants/lib/generators</em>. Notice the root directory app_constants under generators has been removed as well. And the code was changed to this:

<script src="https://gist.github.com/790879.js?file=gistfile1.rb"></script>

We had three simple changes here:

- <em>The generator now extends from <em><strong>Rails::Generators::Base</strong></em></em>: This class uses the Thor infrastructure to handle generators. - more info <a href="http://blog.plataformatec.com.br/2009/07/creating-your-own-generators-with-thor/" target="_blank">here</a>.

- <em>I had to implement the <strong>source_root</strong> class method</em>, which basically tells your generator where to find your template files.

- <em>The <em><strong>manifest</strong></em> method is now called <em><strong>copy_config_files</strong></em> - or <strong><em>anything</em></strong></em> you want. 

The way this works is that, once you invoke the generator, Thor will sequentially call all instance methods in your generator class - or the only instance method in the example above. If your generator does a lot, it will allow for a better organization of your tasks.

And that's it! I did change a couple of other things but that had to be changed anyway and are not related to the migration.

For Rails 2.3.x users, you'll find a 2.3.x branch on github that should work for you.

Cheers]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>527</wp:post_id>
		<wp:post_date>2010-02-28 03:19:59</wp:post_date>
		<wp:post_date_gmt>2010-02-28 10:19:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>upgrading-appconstants-to-rails-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1295673220]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_sociableoff</wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210819624]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>FallingDreams</title>
		<link>http://www.leonardoborges.com/writings/?attachment_id=537</link>
		<pubDate>Fri, 09 Apr 2010 17:41:37 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2010/04/fallingdreams.jar</guid>
		<description></description>
		<content:encoded><![CDATA[My very own Tetris Clone]]></content:encoded>
		<excerpt:encoded><![CDATA[FallingDreams]]></excerpt:encoded>
		<wp:post_id>537</wp:post_id>
		<wp:post_date>2010-04-09 10:41:37</wp:post_date>
		<wp:post_date_gmt>2010-04-09 17:41:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fallingdreams</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2010/04/fallingdreams.jar</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2010/04/fallingdreams.jar]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>FallingDreams, my very own Tetris clone</title>
		<link>http://www.leonardoborges.com/writings/2010/04/09/fallingdreams-my-very-own-tetris-clone/</link>
		<pubDate>Fri, 09 Apr 2010 17:56:20 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Games]]></category>

		<category domain="category" nicename="games"><![CDATA[Games]]></category>

		<category domain="tag"><![CDATA[Games]]></category>

		<category domain="tag" nicename="games"><![CDATA[Games]]></category>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Programming]]></category>

		<category domain="tag" nicename="programming"><![CDATA[Programming]]></category>

		<category><![CDATA[Programming]]></category>

		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=535</guid>
		<description></description>
		<content:encoded><![CDATA[This will come as no surprise to my closest friends, but I am a long time game development admirer.  Although I've never done anything professionally I did spend some time in the past studying this amazingly interesting field - it's my dark hobby. As hardware evolves and gamers demand more and more reality from their consoles, the game development industry is one of the few that basically didn't suffer with the latest economic crisis.

3D games are getting more and more sophisticated to the point that it's very hard for a single person, or even a small team, to develop something worthwhile - think of all the people you need to develop a game such as <a title="God of War III on Wikipedia" href="http://en.wikipedia.org/wiki/God_of_War_III" target="_blank">God of War III</a>: screenwriters, artists, musicians, sound engineers, 3D artists, animators, programmers, level designers, combat designers, actors, voiceovers...

So I just wanted to have the experience of writing a full game, end-to-end, and that's where FallingDreams comes in. To be able to do that in a short amount of time, it had to be something simple and that's why I chose <a title="Tetris on Wikipedia" href="http://en.wikipedia.org/wiki/Tetris">Tetris</a>. Although simple, it does share most of the steps common to modern games development. It was a very interesting project to work at and you can grab the result <a title="FallingDreams binary" href="http://www.leonardoborges.com/writings/wp-content/uploads/2010/04/fallingdreams.jar">here</a>. The source code is also available on my github account, <a title="FallingDreams on GitHub" href="http://github.com/leonardoborges/FallingDreams" target="_blank">here</a>.

<a title="FallingDreams on GitHub" href="http://github.com/leonardoborges/FallingDreams" target="_blank">FallingDreams</a> is written in Java (JDK 6) and as such it should work fine on Windows, Linux and Mac OS. I tried to be as loyal as possible to the original Tetris rules, but you might find one thing or two that don't work as one'd exepct.

Enjoy! ;)

<strong>
</strong>

<em><strong>Disclaimer:</strong> This was my first 'full game' and is not intended to be production ready. The code has definitely got room for improvement and it served as my playground where I experimented different design techniques, both game and general software related. And it doesn't have a single line of tests - crucify me :P </em>

<em>As I said, it's not supposed to be considered bug free but I'm sure people interested in games development can benefit from the source files. Feel free to fork it as well! It would be cool to see what people would do with it :)</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>535</wp:post_id>
		<wp:post_date>2010-04-09 10:56:20</wp:post_date>
		<wp:post_date_gmt>2010-04-09 17:56:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fallingdreams-my-very-own-tetris-clone</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1270845285]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210236068]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>9711</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.7.26.215</wp:comment_author_IP>
		<wp:comment_date>2010-04-10 19:37:18</wp:comment_date>
		<wp:comment_date_gmt>2010-04-11 02:37:18</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Haha.... yeah man, time is a matter of priority! :P

Looking forward to hear your opinion on the game :)

c ya!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>9707</wp:comment_id>
		<wp:comment_author><![CDATA[Eric]]></wp:comment_author>
		<wp:comment_author_email>adiscgolfer@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>99.189.97.204</wp:comment_author_IP>
		<wp:comment_date>2010-04-10 18:46:18</wp:comment_date>
		<wp:comment_date_gmt>2010-04-11 01:46:18</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Man, how do you find the time!?!?!?!  This is once again another great post, can't wait to check out the game.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>9871</wp:comment_id>
		<wp:comment_author><![CDATA[Diego]]></wp:comment_author>
		<wp:comment_author_email>dmmzap@hotmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>189.99.22.49</wp:comment_author_IP>
		<wp:comment_date>2010-04-19 17:09:16</wp:comment_date>
		<wp:comment_date_gmt>2010-04-20 00:09:16</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[What really surprises me is your energy!
While people get satisfied with what they think know much, you just can't relax and settle down.

You're always looking for more.
Always tryin' to put your oponent 2 laps behind! 

Amazing!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Goodbye Europe, A Two-Year Retrospective</title>
		<link>http://www.leonardoborges.com/writings/2010/04/10/goodbye-europe-a-two-year-retrospective/</link>
		<pubDate>Sat, 10 Apr 2010 16:32:30 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=544</guid>
		<description></description>
		<content:encoded><![CDATA[Now several months after I announced my <a href="http://www.leonardoborges.com/writings/2009/10/08/soon-off-to-conquer-lands-afar/" target="_blank">odyssey</a> to obtain my Australian work visa, the time has finally come!

I'll be flying to Sydney next week, April 15th, and as you can probably guess, I'm excited as hell! :) This starts an important new page both in my life and my career, but that's not what this post is about. It's about sharing the experience of living for over two years in Europe.

First off, I traveled. A whole lot. Both for work and leisure. I've been to 23 cities in 11 countries, which you can check on my <a href="http://www.tripadvisor.com/MemberProfile?uid=F36E8157798EAF76A8684BC6FDB95DBD&amp;c=pt" target="_blank">map</a>. Getting to explore all these different cultures was definitely rewarding and fun, to say the least. But I have my favorites, including Prague, London, Dublin and Bruges...

While in Madrid, I worked for <a href="http://www.miraiespana.com/" target="_blank">Mirai España</a>, the company that provided me with great professional experiences. I had the opportunity to work with a <a href="http://twitter.com/pratiknaik" target="_blank">few</a> <a href="http://twitter.com/zukunftsalick" target="_blank">very</a> <a href="http://twitter.com/philly_mac">smart</a> <a href="http://twitter.com/fxn" target="_blank">people</a> that, in a way or another, contributed to improve my skills as a software engineer.  Not to mention the several conferences I attended, including QCon in London, RailsConf in Berlin and serveral <a href="http://www.leonardoborges.com/writings/category/conferences/" target="_blank">others</a>.

Being a rock/metal fan I am in the ideal place to see just about every band I always wanted to. Concerts in Europe are high quality, frequent and affordable and as such, I've attended a whole bunch of them:

- Metallica
- Megadeth
- Soilwork
- Machine Head
- Offspring
- Cavalera Conspiracy
- Within Temptation
- The Haunted
- At the gates
- Judas Priest
- Testament
- Nine Inch Nails
- AC/DC
- Rammstein
- Grave
- Krisiun
- Nile

On a more personal note Madrid is also the place where I met Enif, my beloved girlfriend. We are both very excited about this new experience and, of course, we're moving together to Sydney, with plans of getting married next year! :D

As you can see, Europe has been kind to me and I will certainly miss the experiences, cities, cultures and people I've met. But I'm only making room for more and more interesting things that will certainly happen on the land down under. Let's conquer it all!

Hopefully my next post will be written by the beach, in my new home in Australia.

Cheers, mate! :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>544</wp:post_id>
		<wp:post_date>2010-04-10 09:32:30</wp:post_date>
		<wp:post_date_gmt>2010-04-10 16:32:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>goodbye-europe-a-two-year-retrospective</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1270917151]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210237351]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>9706</wp:comment_id>
		<wp:comment_author><![CDATA[Cavedon]]></wp:comment_author>
		<wp:comment_author_email>hitmarkv@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>201.29.242.75</wp:comment_author_IP>
		<wp:comment_date>2010-04-10 18:00:31</wp:comment_date>
		<wp:comment_date_gmt>2010-04-11 01:00:31</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey dude, awesome news bout the wedding! I hope Australia gives you both a great welcome, and keep us posted, kk?

Cheers!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>9725</wp:comment_id>
		<wp:comment_author><![CDATA[Marcos Toledo]]></wp:comment_author>
		<wp:comment_author_email>mtoledo@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://marcostoledo.com</wp:comment_author_url>
		<wp:comment_author_IP>189.29.91.131</wp:comment_author_IP>
		<wp:comment_date>2010-04-11 09:23:31</wp:comment_date>
		<wp:comment_date_gmt>2010-04-11 16:23:31</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Ahhh, yeah, that's it dude. It's been great hanging around madrid and having some beers with you. Maybe that's a new excuse for me to hop to Australia anytime now.

Have fun in your new country :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>9694</wp:comment_id>
		<wp:comment_author><![CDATA[Xavier Noria]]></wp:comment_author>
		<wp:comment_author_email>fxn@hashref.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.hashref.com</wp:comment_author_url>
		<wp:comment_author_IP>83.44.94.66</wp:comment_author_IP>
		<wp:comment_date>2010-04-10 09:43:23</wp:comment_date>
		<wp:comment_date_gmt>2010-04-10 16:43:23</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Nice post Leo! I wish you good luck and lots of fun in your new adventure. Congrats for your marriage plans. Will sure meet again somewhere :), keep in touch in twitter!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>9698</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.7.26.215</wp:comment_author_IP>
		<wp:comment_date>2010-04-10 09:52:16</wp:comment_date>
		<wp:comment_date_gmt>2010-04-10 16:52:16</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Felipe,
The hard thing about the first job abroad was to find a company willing to sponsor my visa. I found that specific offer on the 37signals job board. :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>9695</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.7.26.215</wp:comment_author_IP>
		<wp:comment_date>2010-04-10 09:45:36</wp:comment_date>
		<wp:comment_date_gmt>2010-04-10 16:45:36</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks Xavi!

Wil definitely keep in touch! :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>9696</wp:comment_id>
		<wp:comment_author><![CDATA[Felipe Cypriano]]></wp:comment_author>
		<wp:comment_author_email>fmcypriano@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://felipecypriano.com/blog</wp:comment_author_url>
		<wp:comment_author_IP>187.14.168.204</wp:comment_author_IP>
		<wp:comment_date>2010-04-10 09:46:43</wp:comment_date>
		<wp:comment_date_gmt>2010-04-10 16:46:43</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Good post. Made more excited to work and live in another country, I've no concret plans on that currently but it's a dream I want to make real.

The first job outside Brazil was hard to get?

Good luck on the "new life".]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>9710</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.7.26.215</wp:comment_author_IP>
		<wp:comment_date>2010-04-10 19:34:26</wp:comment_date>
		<wp:comment_date_gmt>2010-04-11 02:34:26</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Will definitely keep you posted ;)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>9706</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>9712</wp:comment_id>
		<wp:comment_author><![CDATA[Tiago Melo]]></wp:comment_author>
		<wp:comment_author_email>tiagoharris@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>201.51.121.119</wp:comment_author_IP>
		<wp:comment_date>2010-04-10 19:45:18</wp:comment_date>
		<wp:comment_date_gmt>2010-04-11 02:45:18</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey, Leo!

I'm very happy for you, guys. I wish the very best for you and Enif! You guys r0x!!

Cheers!!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>9716</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>88.7.26.215</wp:comment_author_IP>
		<wp:comment_date>2010-04-10 20:17:11</wp:comment_date>
		<wp:comment_date_gmt>2010-04-11 03:17:11</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[@Tiago
Tks man!

See u in Sydney!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>10281</wp:comment_id>
		<wp:comment_author><![CDATA[Alexandre Gazola]]></wp:comment_author>
		<wp:comment_author_email>alexandregazola@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://alexandregazola.wordpress.com</wp:comment_author_url>
		<wp:comment_author_IP>201.76.170.162</wp:comment_author_IP>
		<wp:comment_date>2010-05-13 17:36:52</wp:comment_date>
		<wp:comment_date_gmt>2010-05-14 00:36:52</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey Leonardo!

Congratulations on your new journey! 

All the best!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>10296</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>120.18.171.30</wp:comment_author_IP>
		<wp:comment_date>2010-05-14 05:43:02</wp:comment_date>
		<wp:comment_date_gmt>2010-05-14 12:43:02</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Vlw! Obrigado! :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>10281</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Small update to AppConstants</title>
		<link>http://www.leonardoborges.com/writings/2010/04/24/small-update-to-appconstants/</link>
		<pubDate>Sun, 25 Apr 2010 04:40:54 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=554</guid>
		<description></description>
		<content:encoded><![CDATA[It's been now over a week since we moved to Sydney and everything is just great. We're still house hunting but I got a feeling we'll have a home soon. :)

In the meantime, this morning I got a feature request on github to allow <a href="http://github.com/leonardoborges/app_constants" target="_blank">AppConstants</a> to interpret YAML files with embedded code like this:

<script src="https://gist.github.com/790877.js?file=gistfile1.yml"></script>

I haven't needed it myself but thought it would be a nice addition so my <a href="http://github.com/leonardoborges/app_constants/commit/7c116c8cf9307942f7d8682779510e623156fd08">latest commit</a> does exactly that. Let me know if you find any issues.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>554</wp:post_id>
		<wp:post_date>2010-04-24 21:40:54</wp:post_date>
		<wp:post_date_gmt>2010-04-25 04:40:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>small-update-to-appconstants</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1295672981]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210704797]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Are you testing your javascript yet?</title>
		<link>http://www.leonardoborges.com/writings/2010/06/14/are_you_testing_your_javascript_yet/</link>
		<pubDate>Mon, 14 Jun 2010 11:59:30 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Javascript]]></category>

		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>

		<category domain="tag"><![CDATA[Javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[Javascript]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

		<category domain="tag"><![CDATA[Testing]]></category>

		<category domain="tag" nicename="testing"><![CDATA[Testing]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=561</guid>
		<description></description>
		<content:encoded><![CDATA[What's the difference between your application's javascript code and its java/ruby/python/whatever code?

Think about it for a second. Done? Well, the answer is: none!

In today's web applications your javascript code is no different from the rest of your code base but yet we treat it with disregard - and we're all to blame.

We often see developers investing time writing all sorts of automated tests around their code base but fail to do the same for their javascript -  and yet they get surprised when their client can't click on a button on their web app that depends on that ajax call that has been manually tested once when the page was first released.

Ask yourself this question if you're not sure if you should be testing your javascript: If it breaks, can my users still benefit from my app? - I think the answer for most web apps is obvious.

As for tools, I can only speak of two, <a href="http://code.google.com/p/js-test-driver/" target="_blank">JsTestDriver</a> and <a href="http://github.com/nkallen/screw-unit" target="_blank">screw-unit</a>, the latter being the one we're using in my current project at <a href="http://www.thoughtworks.com" target="_blank">ThoughtWorks</a>.

What I liked about screw-unit is that it's very easy to get it up and running. Being a Behavior-Driven Testing Framework it's not surprising it has a syntax similar to <a href="http://rspec.info/" target="_blank">Rspec</a> -which I prefer over JsTestDriver's similarity to <a href="http://www.junit.org/" target="_blank">JUnit's</a>.

<script src="https://gist.github.com/790871.js?file=gistfile1.js"></script> This is how a test written with screw-unit could look like:  <script src="https://gist.github.com/790873.js?file=gistfile1.js"></script>

Not too bad for a javascript test suite huh?

So the next time you write a javascript line of code, how about writing a test for it? Consider using screw-unit as your tool but if you have been writing tests using a different framework and you're happy with it, share your experience.
I'm always keen to learn better ways of doing what I do.

Cheers!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>561</wp:post_id>
		<wp:post_date>2010-06-14 04:59:30</wp:post_date>
		<wp:post_date_gmt>2010-06-14 11:59:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>are_you_testing_your_javascript_yet</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1295672764]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210237380]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>10823</wp:comment_id>
		<wp:comment_author><![CDATA[Diogo Baeder]]></wp:comment_author>
		<wp:comment_author_email>diogobaeder@yahoo.com.br</wp:comment_author_email>
		<wp:comment_author_url>http://diogobaeder.com.br</wp:comment_author_url>
		<wp:comment_author_IP>187.50.13.57</wp:comment_author_IP>
		<wp:comment_date>2010-06-14 09:41:24</wp:comment_date>
		<wp:comment_date_gmt>2010-06-14 16:41:24</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Also, check out QUnit, which is a dead-simple unit testing framework without external dependencies (not even jQuery), maintained by Jörn Zaefferer and John Resig. It's a great tool! :-)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>11131</wp:comment_id>
		<wp:comment_author><![CDATA[Rafael Noronha]]></wp:comment_author>
		<wp:comment_author_email>rafa@rafanoronha.net</wp:comment_author_email>
		<wp:comment_author_url>http://rafanoronha.net</wp:comment_author_url>
		<wp:comment_author_IP>201.87.33.104</wp:comment_author_IP>
		<wp:comment_date>2010-07-01 16:47:19</wp:comment_date>
		<wp:comment_date_gmt>2010-07-01 23:47:19</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Leonardo,

Do you think writing GUI automated tests pays off?
How have been your experience with it?

I've been having great results while adopting TDD for application's core code and writing integration tests that don't pass trough the GUI.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>11141</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>124.171.41.36</wp:comment_author_IP>
		<wp:comment_date>2010-07-02 05:13:17</wp:comment_date>
		<wp:comment_date_gmt>2010-07-02 12:13:17</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi Rafael!

I believe both types of tests - Integration and GUI (I'm assuming you mean acceptance by this) - are important and give us different feedbacks.

Integration tests tells us about the internal quality of our code - how easy it is to deal with - while acceptance tests is all about external quality. Without them, your interface can break and your tests won't catch anything.

But then where does JS unit test comes in? If you have good acceptance tests, they make sure your JS works, but they're slow and you lack that internal quality feedback again.

In our current project here at ThoughtWorks we have an extensive suite of unit, integration and acceptance tests and I gotta say, each one of them pays off. :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>11131</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>10827</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>203.63.71.93</wp:comment_author_IP>
		<wp:comment_date>2010-06-14 16:24:59</wp:comment_date>
		<wp:comment_date_gmt>2010-06-14 23:24:59</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks for the tip Diego!

I'll make sure I take a look at it!

Cheers]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>10823</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Help stop the IE Money Drain</title>
		<link>http://www.leonardoborges.com/writings/2010/09/28/help-stop-the-ie-money-drain/</link>
		<pubDate>Tue, 28 Sep 2010 08:26:16 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=577</guid>
		<description></description>
		<content:encoded><![CDATA[I'm a big heavy metal fan. And so are most of my friends. As a result I launched <a title="RottingNames" href="http://rottingnames.heroku.com/" target="_blank">RottingNames</a>, a band name generator that will generate the most hilarious, nastiest and nonsense names the metal world is yet to discover - ok, that's probably a bit of an overstatement but the idea is good.

However, a friend pointed out the code had a bug when running under - gasp - Internet Explorer. That didn't surprise me at all and I didn't bother to fix it. It's a small app, it's for my own - a few other's - amusement but it did give me the idea about my next micro app.

Ever wondered how much time people all around the world are wasting trying to fix nasty IE bugs? How about putting that in numbers and actually seeing how much money is going down the hole? We can't just drop support - yet. But we can help those poor souls to upgrade to something better.

Enter <a title="The IE Money Drain" href="http://iemoneydrain.heroku.com/">The IE Money Drain</a>. Whenever you waste time working on trying to make IE behave the way it should, go there and log your hours. Share it with your clients and managers. Show them how much time and money could be saved if we were proactively helping users make the move.

And don't forget to tell colleagues, friends, even your grandma! Share the love ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>577</wp:post_id>
		<wp:post_date>2010-09-28 01:26:16</wp:post_date>
		<wp:post_date_gmt>2010-09-28 08:26:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>help-stop-the-ie-money-drain</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1285662377]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210237410]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>14022</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP>203.214.158.90</wp:comment_author_IP>
		<wp:comment_date>2010-10-08 05:44:59</wp:comment_date>
		<wp:comment_date_gmt>2010-10-08 12:44:59</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[You're definitely lucky! But also definitely on the right path!

I salute your clients! :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>14020</wp:comment_parent>
		<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>13587</wp:comment_id>
		<wp:comment_author><![CDATA[Philip MacIver]]></wp:comment_author>
		<wp:comment_author_email>philip@ivercore.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.ivercore.com</wp:comment_author_url>
		<wp:comment_author_IP>62.96.140.125</wp:comment_author_IP>
		<wp:comment_date>2010-09-28 02:51:44</wp:comment_date>
		<wp:comment_date_gmt>2010-09-28 09:51:44</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Revolution!!!! Freedom!!! Let it begin!!!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>14020</wp:comment_id>
		<wp:comment_author><![CDATA[Dhiego Ramos Pinto]]></wp:comment_author>
		<wp:comment_author_email>dhiegorp@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP>200.157.150.52</wp:comment_author_IP>
		<wp:comment_date>2010-10-08 04:43:45</wp:comment_date>
		<wp:comment_date_gmt>2010-10-08 11:43:45</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[LOL! Very good idea, very good app indeed! 
Fortunately I don't have to bother with IE bugs. Am I a lucky developer, maybe? Our users are very happy with Firefox. =D]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Clouds against the Floods</title>
		<link>http://www.leonardoborges.com/writings/2011/01/16/clouds-against-the-floods/</link>
		<pubDate>Sun, 16 Jan 2011 13:52:22 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<category><![CDATA[ThoughtWorks]]></category>

		<category domain="category" nicename="thoughtworks"><![CDATA[ThoughtWorks]]></category>

		<category domain="tag"><![CDATA[ThoughtWorks]]></category>

		<category domain="tag" nicename="thoughtworks"><![CDATA[ThoughtWorks]]></category>

		<category><![CDATA[World]]></category>

		<category domain="category" nicename="world"><![CDATA[World]]></category>

		<category domain="tag"><![CDATA[World]]></category>

		<category domain="tag" nicename="world"><![CDATA[World]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=593</guid>
		<description></description>
		<content:encoded><![CDATA[I think by now everyone's heard of the hard time the guys up in Queensland, Australia are having because of the <a title="Queensland Floods" href="http://www.google.com/search?q=qld+floods" target="_blank">recent floods</a>. People have lost their lives and many others have lost their homes and businesses, product of years of hard work.

As a result of this massive disaster the Queensland Government decided to run a telethon to encourage donations to help the flood victims. The Telethon aired last Sunday, 09/01/11, on Channel 9 and lasted for 2 hours.

The problem was the existing donations system that the Government had been using so far: it was just not thought out to handle the load we were expecting to have on Sunday.

That's when my employer, <a title="ThoughtWorks" href="http://www.thoughtworks.com/" target="_blank">ThoughtWorks</a>, kindly offered a hand to <a href="http://www.qld.gov.au/smartservice/" target="_blank">Smart Services Queensland</a> in the attempt to make sure they could receive all donations that were likely to come through the web.

After that, on the Thursday afternoon before the event, <a title="Phillip Calçado" href="http://fragmental.tw/" target="_blank">Phillip Calçado</a>, Ben Barnard and I set off on a mission against the clock: we had a little over 48 hours to develop, test and deploy an application that was expected to handle thousands of users. Not only that but an application that, should it fail, would prevent millions of dollars from reaching the people in need in Queensland. This was a great responsibility but we knew we could do it.

Given the time constraints it was a bit obvious that we would use <a title="Ruby on Rails" href="http://rubyonrails.org/" target="_blank">Ruby on Rails</a> for this app. Both because of the productivity it's known for and because we had the knowledge right there. With that out of the way, we had to decide how and where we would deploy this thing. We thought a little about it and came down to to 2 options: <a title="Amazon EC2" href="http://aws.amazon.com/ec2/">Amazon EC2</a> or <a title="Heroku" href="http://heroku.com/" target="_blank">Heroku</a> (which is powered by Amazon EC2 under the hood). I pushed hard for Heroku and that's what we ended up going with.

Now it was time to get down and dirty and start coding the app. In principle it should be fairly simple. It needed a form where a potential donor would fill out his/her information, giving the option to receive the tax receipt by email or regular mail - more on that later. Upon clicking submit users would be taken to the secure payment gateway website where they could input their credit card number and finish the payment, after which they would be taken back to our app with a success - or an error - message and a transaction number.

Now this work flow has a couple of implications: First, all emails would have to be sent in the background so as to not interfere with the website performance. We were expecting to be sending thousands of them - workers anyone?

Second, the payment gateway integration would have to be developed and tested from scratch. Up until now the Queensland Government integrated with it in a different manner that could not be reused in this case.

And most important of all, although simple in concept, we had no idea of the load we should be preparing for. There was just no data from previous telethons. Thus we decided to prepare for the maximum we possibly could.

As we developed the application we deployed continuously to Heroku in order to test the payment gateway integration, benchmark the app using <a title="Apache AB" href="http://httpd.apache.org/docs/2.0/programs/ab.html" target="_blank">Apache AB</a>, setup cache headers - Heroku uses <a title="Varnish" href="http://www.varnish-cache.org/" target="_blank">Varnish</a> - and find bottlenecks.

Email was one of these bottlenecks and that's why we decided to handle that in the background using <a title="Delayed::Job" href="https://github.com/collectiveidea/delayed_job" target="_blank">Delayed::Jobs</a>.

Since the first deployment, we also tweaked a couple of things at Heroku, such as migrating from their free PostgreSQL offering to a dedicated instance that we believed would both take the load and have plenty of room for all the data - as I write this post, we are already well over the 5MB limit they offer for free.

Long story short, by Saturday evening  the website was up and running on 5 app instances, a 6th instance running background jobs - sending emails - and a dedicated PostgreSQL database server.

As Heroku is outside the Government network, their SMTP server was a no go on the short term so we also integrated the app with <a title="SendGrid" href="http://sendgrid.com/" target="_blank">SendGrid</a>, an email delivery service that fitted perfectly our needs - although the site got so much traction that we went over our monthly quota with them. But the nice guys from SendGrid increased our limit after I opened a ticket explaining the situation!

As for performance we used <a href="http://newrelic.com/">NewRelic</a> to monitor the application, which Heroku also makes a breeze to integrate with.

We all went home to rest and get ready for Sunday, the day of the Telethon, when we would be monitoring the app throughout the day. We were all excited and when the show went live, we started seeing all those beautiful access charts moving like crazy, spiking over 720 requests per minute and being solid like a rock with flat and fast response times throughout the night.

In about two hours we had over AUD$2,000,000.00 (two million) donated through our website.

Since then the number of transactions dropped but has stayed constant and as of today we've received AUD$25,438,518.32 (over 25 millions of dollars) that will be donated to the flood victims in Queensland.

Oh, and the site is still up and going strong so move your fingers and go help: <a title="Queensland Floods Telethon" href="http://telethon.smartservice.qld.gov.au/" target="_blank">telethon.smartservice.qld.gov.au</a> - there will be heaps of people grateful for your donation.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>593</wp:post_id>
		<wp:post_date>2011-01-16 06:52:22</wp:post_date>
		<wp:post_date_gmt>2011-01-16 13:52:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>clouds-against-the-floods</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1295185960]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[210235637]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>20769</wp:comment_id>
		<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://twitter.com/rogerleite</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-01-18 14:58:00</wp:comment_date>
		<wp:comment_date_gmt>2011-01-18 14:58:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks for reply !
Anyway, here in Brazil, i don't know any iniciative like this.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>20747</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20893</wp:comment_id>
		<wp:comment_author><![CDATA[David Bacon]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://twitter.com/mrdavidbacon</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-03 22:48:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-03 22:48:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Nice job.  I can understand how you got an RoR app built that fast and used Heroku to scale it.  But how the hell did you get a separate payment gateway working that fast?  Who provided that?]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20894</wp:comment_id>
		<wp:comment_author><![CDATA[Sai Perchard]]></wp:comment_author>
		<wp:comment_author_email>sai.perchard@saitech.com.au</wp:comment_author_email>
		<wp:comment_author_url>http://www.saitech.com.au</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-04 01:23:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-04 01:23:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[A very interesting read - great effort. You said "the payment gateway integration would have to be developed and tested from scratch". Does this mean that you didn't/couldn't use something like ActiveMerchant? ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20895</wp:comment_id>
		<wp:comment_author><![CDATA[]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-04 03:38:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-04 03:38:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hey David,
CommonWealth Bank provided the gateway. We integrated it using their http api where you basically post arguments along with a callback and a hash signature that has to be confirmed on the way back as well.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>20893</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20896</wp:comment_id>
		<wp:comment_author><![CDATA[eiji shinohara]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://twitter.com/shinodogg</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-04 03:59:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-04 03:59:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Great Job! 自分も人に役に立つことに自分の技術を使いたいです。]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20897</wp:comment_id>
		<wp:comment_author><![CDATA[eiji shinohara]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://twitter.com/shinodogg</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-04 04:01:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-04 04:01:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Great Job! 自分も人に役に立つことに自分の技術を使いたいです。]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20898</wp:comment_id>
		<wp:comment_author><![CDATA[]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-04 04:12:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-04 04:12:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[We could have but we didn't wanna handle credit card numbers ourselves at the time - our SSL certificate was pending -  so we integrated in a way which we send the user off to a trusted connection with the bank, so we never touch the user's credit card information. ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>20894</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20737</wp:comment_id>
		<wp:comment_author><![CDATA[Bernarda Maia]]></wp:comment_author>
		<wp:comment_author_email>bernarda.maia@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-01-17 00:45:00</wp:comment_date>
		<wp:comment_date_gmt>2011-01-17 00:45:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I don't understand why Ruby on Rails is the best to use on this case, but what I do know is what you guys did was amazing. Donating your time and knowledge do develop a web app to help more than 200.000 families is really honorable. Good work!  ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20738</wp:comment_id>
		<wp:comment_author><![CDATA[]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-01-17 01:10:00</wp:comment_date>
		<wp:comment_date_gmt>2011-01-17 01:10:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[In this case it was the best option because I have a lot of experience with Rails and compared to, say Java, I think you can get up and running much faster.

Not to mention that an environment like Heroku really makes it the most appealing option to me ;)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>20737</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20741</wp:comment_id>
		<wp:comment_author><![CDATA[Anthony Cramp]]></wp:comment_author>
		<wp:comment_author_email>anthony.cramp@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-01-17 08:58:00</wp:comment_date>
		<wp:comment_date_gmt>2011-01-17 08:58:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Nice work and thanks for the write up.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20742</wp:comment_id>
		<wp:comment_author><![CDATA[]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-01-17 09:36:00</wp:comment_date>
		<wp:comment_date_gmt>2011-01-17 09:36:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Tks Anthony! :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>20741</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20731</wp:comment_id>
		<wp:comment_author><![CDATA[Philip MacIver]]></wp:comment_author>
		<wp:comment_author_email>philip@ivercore.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.ivercore.com</wp:comment_author_url>
		<wp:comment_author_IP>77.6.162.213</wp:comment_author_IP>
		<wp:comment_date>2011-01-16 07:02:16</wp:comment_date>
		<wp:comment_date_gmt>2011-01-16 14:02:16</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Ruby On Rails to the rescue.
Nice work. And a great use case and show case for Ruby and Rails.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20746</wp:comment_id>
		<wp:comment_author><![CDATA[Roger Leite]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://twitter.com/rogerleite</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-01-17 11:42:00</wp:comment_date>
		<wp:comment_date_gmt>2011-01-17 11:42:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Great work ! You guys rock !
BTW, we can fork a version to help Rio de Janeiro ?]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20747</wp:comment_id>
		<wp:comment_author><![CDATA[]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-01-17 11:52:00</wp:comment_date>
		<wp:comment_date_gmt>2011-01-17 11:52:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks, Roger!

I'd be more than happy to help Rio but currently the code is in a private GitHub repo :(

Anyway, the app is quite customised to the Australian scenario - e.g.: The layout and the payment gateway integration are specific to Australian organisations. 

Can we help in any other way?]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>20746</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21177</wp:comment_id>
		<wp:comment_author><![CDATA[One year of ThoughtWorks: a retrospective]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com/writings/2011/04/25/one-year-of-thoughtworks-a-retrospective/</wp:comment_author_url>
		<wp:comment_author_IP>75.127.72.28</wp:comment_author_IP>
		<wp:comment_date>2011-04-25 08:53:06</wp:comment_date>
		<wp:comment_date_gmt>2011-04-25 15:53:06</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] the chance to make a real difference in the Queensland Flood Relief Appeal in 2010, when we built a donation app to help the flood victims &#8211; that was definitely the highlight of the year, and something I&#8217;m particularly proud [...] ]]></wp:comment_content>
		<wp:comment_approved>spam</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21083</wp:comment_id>
		<wp:comment_author><![CDATA[Montreal Serai - Bringing the margins to the centre &raquo; The Command Line is Mightier than the Rubber Bullet (fear me)]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://montrealserai.com/2011/03/12/the-command-line-is-mightier-than-the-rubber-bullet-fear-me/</wp:comment_author_url>
		<wp:comment_author_IP>67.228.232.2</wp:comment_author_IP>
		<wp:comment_date>2011-03-13 10:21:10</wp:comment_date>
		<wp:comment_date_gmt>2011-03-13 17:21:10</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] Potentially, like in this example, someone who can build and deploy a website that helps flood victi... [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21175</wp:comment_id>
		<wp:comment_author><![CDATA[Nick Simha]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.facebook.com/nsimha</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-04-18 23:53:00</wp:comment_date>
		<wp:comment_date_gmt>2011-04-18 23:53:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Great job guys!  ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20955</wp:comment_id>
		<wp:comment_author><![CDATA[makuchaku]]></wp:comment_author>
		<wp:comment_author_email>maku@makuchaku.in</wp:comment_author_email>
		<wp:comment_author_url>http://makuchaku.in/</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-09 06:33:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-09 06:33:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Very nice post!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>Leonardo Borges</title>
		<link>http://www.leonardoborges.com/writings/about-2/blog/</link>
		<pubDate>Thu, 20 Jan 2011 11:44:26 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2007/10/blog.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Leonardo Borges]]></excerpt:encoded>
		<wp:post_id>644</wp:post_id>
		<wp:post_date>2011-01-20 04:44:26</wp:post_date>
		<wp:post_date_gmt>2011-01-20 11:44:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>5</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2007/10/blog.jpg</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2007/10/blog.jpg]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"482";s:6:"height";s:3:"720";s:14:"hwstring_small";s:22:"height='96' width='64'";s:4:"file";s:16:"2007/10/blog.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Leonardo Borges</title>
		<link>http://www.leonardoborges.com/writings/about-2/blog1/</link>
		<pubDate>Thu, 20 Jan 2011 11:52:20 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<guid isPermaLink="false">http://www.leonardoborges.com/writings/wp-content/uploads/2007/10/blog1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Leonardo Borges]]></excerpt:encoded>
		<wp:post_id>645</wp:post_id>
		<wp:post_date>2011-01-20 04:52:20</wp:post_date>
		<wp:post_date_gmt>2011-01-20 11:52:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>5</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
				<wp:attachment_url>http://www.leonardoborges.com/writings/wp-content/uploads/2007/10/blog1.jpg</wp:attachment_url>
								<wp:postmeta>
		<wp:meta_key>_wp_attached_file</wp:meta_key>
		<wp:meta_value><![CDATA[2007/10/blog1.jpg]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"482";s:6:"height";s:3:"720";s:14:"hwstring_small";s:22:"height='96' width='64'";s:4:"file";s:17:"2007/10/blog1.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Update to AppConstants: It can now be used as a gem</title>
		<link>http://www.leonardoborges.com/writings/2011/02/02/update-to-appconstants-it-can-now-be-used-as-a-gem/</link>
		<pubDate>Wed, 02 Feb 2011 13:08:04 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=658</guid>
		<description></description>
		<content:encoded><![CDATA[This is just a quick post to let you know that <a title="app_constants github repo" href="https://github.com/leonardoborges/app_constants" target="_blank">AppConstants</a> can now be used as gem!

Just add it to your Gemfile and 'bundle install' it:

<pre lang="ruby">
#in Gemfile
gem "app_constants"

#in console
$ bundle install
$ rails generate app_constants
#then follow the on-screen instructions
</pre>

It can also be used without Rails. Check out full instructions on the <a title="app_constants github repo" href="https://github.com/leonardoborges/app_constants" target="_blank">GitHub repository</a>.

Feedback welcome :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>658</wp:post_id>
		<wp:post_date>2011-02-02 06:08:04</wp:post_date>
		<wp:post_date_gmt>2011-02-02 13:08:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>update-to-appconstants-it-can-now-be-used-as-a-gem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1296652085]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[220948607]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_old_slug</wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Clouds against the floods: presentation available</title>
		<link>http://www.leonardoborges.com/writings/2011/02/12/clouds-against-the-floods-presentation-available/</link>
		<pubDate>Sat, 12 Feb 2011 12:21:53 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Presentations]]></category>

		<category domain="category" nicename="presentations"><![CDATA[Presentations]]></category>

		<category domain="tag"><![CDATA[Presentatios]]></category>

		<category domain="tag" nicename="presentatios"><![CDATA[Presentatios]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=690</guid>
		<description></description>
		<content:encoded><![CDATA[Last Tuesday I gave a short presentation on the whole <a title="Clouds against the Floods" href="http://www.leonardoborges.com/writings/2011/01/16/clouds-against-the-floods/" target="_blank">Clouds Against the Floods</a> thing at the <a title="Ruby on Rails Oceania Meetup" href="http://rubyonrails.com.au/sydney-meetups" target="_blank">Ruby on Rails Oceania User Group</a> here in Sydney.

Those guys are awesome and they recorded the talk - thanks guys!

If you'd like to download the slides, they're available on <a title="Slideshare profile" href="http://www.slideshare.net/borgesleonardo/clouds-against-the-floods" target="_blank">Slideshare</a>.

Enjoy! ;)

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="344" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="src" value="http://www.youtube.com/v/DYDD9XiW3Gg?hl=en&amp;fs=1" /><param name="allowfullscreen" value="true" /><embed type="application/x-shockwave-flash" width="425" height="344" src="http://www.youtube.com/v/DYDD9XiW3Gg?hl=en&amp;fs=1" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>690</wp:post_id>
		<wp:post_date>2011-02-12 05:21:53</wp:post_date>
		<wp:post_date_gmt>2011-02-12 12:21:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>clouds-against-the-floods-presentation-available</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1297513337]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[228764507]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>20988</wp:comment_id>
		<wp:comment_author><![CDATA[Navjeet Chabbewal]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://twitter.com/navjeetc</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-12 17:57:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-12 17:57:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[That was a good deed done at great speed. Kudos to the whole team.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20989</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-12 22:54:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-12 22:54:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Thanks!]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>20988</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>20997</wp:comment_id>
		<wp:comment_author><![CDATA[Tweets that mention Clouds against the floods: presentation available -- Topsy.com]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://topsy.com/www.leonardoborges.com/writings/2011/02/12/clouds-against-the-floods-presentation-available/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
		<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
		<wp:comment_date>2011-02-13 02:26:49</wp:comment_date>
		<wp:comment_date_gmt>2011-02-13 09:26:49</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Leonardo Borges, Alex Hall. Alex Hall said: http://su.pr/5tEMd1 - Leonardo Borges: Clouds against the floods: presentation available [...] ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type>pingback</wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>IDE Review: RubyMine</title>
		<link>http://www.leonardoborges.com/writings/2011/02/16/ide-review-rubymine/</link>
		<pubDate>Wed, 16 Feb 2011 13:43:11 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=698</guid>
		<description></description>
		<content:encoded><![CDATA[Since I started working with Ruby about 4 years ago, I've used quite a few text editors and ide's: <a href="http://www.aptana.com/products/radrails">RadRails</a>, <a href="http://projects.gnome.org/gedit/" target="_blank">gedit</a> + <a href="https://github.com/lexrupy/gmate" target="_blank">plugins</a>, <a href="http://macromates.com/" target="_blank">TextMate</a> and <a href="http://www.vim.org/" target="_blank">Vim</a>.

TextMate is the one I've used the most and it's been ok for a long time. Until you realize you need half a dozen bundles to make it really useful for ruby development. Obviously the same goes for Vim and gedit.

Oh, and forget about refactoring. In these tools refactoring equals regex global replace. So if you need it, well, forget it.

That's when I decided to give <strong><a href="http://www.jetbrains.com/ruby/" target="_blank">RubyMine</a></strong> a fair go. I've been using it heavily for a while now and I must say I love it!

What pissed me off about RadRails when I first tried it was the speed. It was too slow, something people take for granted when running java based IDE's.

However this is not true for RubyMine. You DO take a hit on startup, nothing major, but once it's done, it's a breeze.

I've compiled a list of my favorite productivity shortcuts and features. Hope it'll be useful to someone else.

<strong>Productivity Shortcuts</strong>

<hr /><strong>Navigation</strong>

<em>Ctrl + Tab</em> - File Switcher

<em>Cmd + Shift + T</em> - Switching between implementation and test works perfectly. Even in a pure ruby project

<em>Cmd + Shift + F12</em> - Expand/restore editor

<em>Alt + Shift + N</em> - Go to model/view/controller

<em>Alt + F1</em> - Show current file in other views such as the project tree (scroll to file)

<em>Cmd + Shift + N</em> - Open file

<em>Cmd + Alt + Shift + N</em> - Open symbol - across files

<em>Alt + F7</em> - Find usages - when on a method, variable, etc…

<strong>Running/Debugging</strong>

<em>Ctrl + Shift + F10</em> - Run current [test] file. When inside a test method, run that single method.

<em>Ctrl + Shift + F9</em> - Same as above, but in debug mode.

<em>Shift + F10/Shift + F9</em> - Run/Debug last action executed

<em>Alt + R</em> - Run rake task

<strong>Refactoring</strong>

<em>Cmd + Alt + N</em> - Inline variable/ method

<em>Cmd + Alt + M</em> - Extract method

<em>Shift + F6</em> - Rename

<em>F5</em> - Copy current file as...

<strong>Editing</strong>

<em> Cmd + Y</em> - Delete line

<em>Cmd + D</em> - Duplicate Line/Selection

<em>Alt + Mouse</em> - Column selection

<em>Cmd + Shift + (Up Arrow|Down Arrow)</em> - Moves de line or selected block of code up or down

<strong>Features</strong>

<hr /><em>Code completion</em> - It's fairly accurate and pretty fast. They've done some good yak shaving around this area.

<em>Debugger</em> - The debugging interface is an absolute beauty. Saved me a lot of time where I'd have used puts statements or googled to re-learn how to use ruby-debug instead. Definitely worth checking out.

<strong>The bad stuff</strong>

<hr /><em>It is not free</em> - unless you are a committer to an open-source project. But it's not expensive either.

<em>It is a bit slower</em> - but not that much. The performance hit is insignificant compared to the added value.

<em>Regex file open, TextMate style</em> - What can I say? I do miss this.

<em>Wrap highlighted text</em> - In TextMate, if you highlight a word and press ", [, {, ( or # it surrounds the word with the respective combination of quotes, brackets, etc... Another missed feature

<strong>Wrapping up</strong>
It's probably soon to say it but so far RubyMine has been my missing Ruby IDE. And I'm very happy with it. :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>698</wp:post_id>
		<wp:post_date>2011-02-16 06:43:11</wp:post_date>
		<wp:post_date_gmt>2011-02-16 13:43:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ide-review-rubymine</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1297863792]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[231865347]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_old_slug</wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>21029</wp:comment_id>
		<wp:comment_author><![CDATA[Jakeonrails]]></wp:comment_author>
		<wp:comment_author_email>jakeonrails@gmail.com</wp:comment_author_email>
		<wp:comment_author_url></wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-17 03:16:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-17 03:16:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I like Rubymine a lot but the font rendering in ubuntu is so bad its a deal breaker for me. ]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21030</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-17 03:25:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-17 03:25:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Really? That's too bad :(

I haven't tried it on Ubuntu yet. I'm on a Mac 24/7 these days.

Which version of Java are you running it with? - Not that it matters, but just curious.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>21029</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21036</wp:comment_id>
		<wp:comment_author><![CDATA[Serge Baranov]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://twitter.com/jetserge</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-17 17:39:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-17 17:39:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[It's a known issue with Linux &amp; Java, check http://youtrack.jetbrains.net/issue/IDEA-57233 for more details.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>21029</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21026</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-16 21:53:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-16 21:53:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Definitely doable, but I tried to focus on the productivity bits that come enabled by default, "for free". I do have some custom shortcuts configured though. ;)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>21019</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21019</wp:comment_id>
		<wp:comment_author><![CDATA[Edward Moraru]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://twitter.com/edimoraru</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-16 14:33:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-16 14:33:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Hi.

You could configure your "Live Templates" to wrap highlighted text with the characters you want  and use the CTRL+ALT+J shortcut to use the templates.
Use case : CTRL+W to highlight the current piece of text, then cTRL+ALT+J to invoke Live Templates and then choose a template.
Not as easily as in TextMate, but doable, I'd say.

Happy coding,
Edi.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21020</wp:comment_id>
		<wp:comment_author><![CDATA[Alan]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://alanfranz.pip.verisignlabs.com/</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-16 14:40:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-16 14:40:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[I agree that RubyMine is a great Ruby IDE.

By the way I'm using Rubymine 3.0 in Linux, and I find the "Wrap highlighted text" working out of the box in the exact way you describe. I don't know if it's a setting or what, I didn't need to configure anything.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21021</wp:comment_id>
		<wp:comment_author><![CDATA[Tanel Suurhans]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://www.facebook.com/tanel.suurhans</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-16 15:31:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-16 15:31:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Actually if you select a bit of text and press #, the text gets wrapped in #{}. There are single and double quote wrappings also, at least in javascript.
Also cmd + N triggers a "Open Class" dialog which lets you use wildcards etc, cmd + ctrl +n does the same for filename based open.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21025</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-16 21:52:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-16 21:52:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[That is interesting. It's definitely not on by default on Mac. I'll check some other configs and see if I can find it.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>21020</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21033</wp:comment_id>
		<wp:comment_author><![CDATA[Philip H. MacIver]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://twitter.com/philly_mac</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-02-17 11:32:00</wp:comment_date>
		<wp:comment_date_gmt>2011-02-17 11:32:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Speaking for myself, I have used it on ubuntu and the fonts seem to look real good for me. 

On a general note, I have been using it as my main ruby editor for more than a week now, and I must say that it is a great tool that does everything I want/need in an editor. There is the initial start up hit, but if you are going to be developing for a couple of hours this minor hit is worth it. 

I was lucky to test it at a time where they dropped the price of the licence to € 26 for a personal licence. So not only am I using it, I am using it legit. 

I rate RubyMine AG (that's All Good in case you don't know)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21053</wp:comment_id>
		<wp:comment_author><![CDATA[Eric Sipple]]></wp:comment_author>
		<wp:comment_author_email></wp:comment_author_email>
		<wp:comment_author_url>http://saalon.myopenid.com/</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-03-01 15:48:00</wp:comment_date>
		<wp:comment_date_gmt>2011-03-01 15:48:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[This is weird, because in prior version, this was on by default, but when I upgraded to 3.1, it was turned off.  It took me a while to find it, but under Editor-&gt;Smart Keys there's an option called "Surround selection on typing quote or brace" that turns it back on.  No idea why this is now off by default.]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>21025</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21054</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-03-01 21:09:00</wp:comment_date>
		<wp:comment_date_gmt>2011-03-01 21:09:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Yup, that config did the trick. Thanks!

But I have no idea why it's off by default. Go figure...]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>21053</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
		<item>
		<title>RottingNames for iPhone available for free</title>
		<link>http://www.leonardoborges.com/writings/2011/03/19/rottingnames-for-iphone-available-for-free/</link>
		<pubDate>Sat, 19 Mar 2011 23:02:48 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Objective-C]]></category>

		<category domain="category" nicename="objective-c"><![CDATA[Objective-C]]></category>

		<category domain="tag"><![CDATA[Objective-C]]></category>

		<category domain="tag" nicename="objective-c"><![CDATA[Objective-C]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=715</guid>
		<description></description>
		<content:encoded><![CDATA[Following the staggering success of the online version of <a href="http://rottingnames.heroku.com">RottingNames</a> - where by success I mean the handful of metal heads constantly using the app :) - I released the <a href="http://itunes.apple.com/au/app/rottingnames/id413043377?mt=8">iPhone version for free </a>. You can now generate crazy and fun names anywhere! Go <a href="http://itunes.apple.com/au/app/rottingnames/id413043377?mt=8">get it</a>!

I've been meaning to post this for  a while but I was waiting to have some free time and add a few new features to the app, which I just realised won't happen any time soon given the priorities I have at the moment. But by all means feel free to drop a line if you're dying about a missing feature.

Now go have fun ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>715</wp:post_id>
		<wp:post_date>2011-03-19 16:02:48</wp:post_date>
		<wp:post_date_gmt>2011-03-19 23:02:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rottingnames-for-iphone-available-for-free</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1300575769]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[258378337]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_old_slug</wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Simple jquery-daterange-picker</title>
		<link>http://www.leonardoborges.com/writings/2011/03/31/simplejquery-daterange-picker/</link>
		<pubDate>Thu, 31 Mar 2011 12:57:12 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[Javascript]]></category>

		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>

		<category domain="tag"><![CDATA[Javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[Javascript]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=722</guid>
		<description></description>
		<content:encoded><![CDATA[As in many web apps out there, this week I needed a date range picker. I shopped around and while I did find a couple of good options they were (a) too clunky and (b) didn't prevent you from selecting invalid ranges. The latter being the one I was really interested in.

So I coded up something simple that worked and looked nice and decided to share around. It's the <a title="jquery-daterange-picker" href="http://github.com/leonardoborges/jquery-daterange-picker">jquery-daterange-picker</a>. Its only dependencies are <a title="jQuery" href="http://jquery.com/">jQuery</a> and <a title="jQueryUI datepicker " href="http://docs.jquery.com/UI/Datepicker">jQueryUI's datepicker</a>.

Got <a title="jquery-daterange-picker" href="http://github.com/leonardoborges/jquery-daterange-picker">get it</a>, <a title="jquery-daterange-picker" href="http://github.com/leonardoborges/jquery-daterange-picker">fork it</a>, <a title="jquery-daterange-picker" href="http://github.com/leonardoborges/jquery-daterange-picker">contribute to it</a> or <a title="Examples" href="http://leonardoborges.github.com/jquery-daterange-picker/demo/index.html">check out some examples</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>722</wp:post_id>
		<wp:post_date>2011-03-31 05:57:12</wp:post_date>
		<wp:post_date_gmt>2011-03-31 12:57:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>simplejquery-daterange-picker</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1301576427]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[267555751]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>Look ma, no hands: Tweeting with your voice</title>
		<link>http://www.leonardoborges.com/writings/2011/04/09/look-ma-no-hands-tweeting-with-your-voice/</link>
		<pubDate>Sun, 10 Apr 2011 03:47:05 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category domain="tag"><![CDATA[HTML5]]></category>

		<category domain="tag" nicename="html5"><![CDATA[HTML5]]></category>

		<category><![CDATA[HTML5]]></category>

		<category domain="category" nicename="html5"><![CDATA[HTML5]]></category>

		<category><![CDATA[Rails]]></category>

		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>

		<category domain="tag"><![CDATA[Rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[Rails]]></category>

		<category><![CDATA[Ruby]]></category>

		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[Ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[Ruby]]></category>

		<category domain="tag"><![CDATA[twitter]]></category>

		<category domain="tag" nicename="twitter"><![CDATA[twitter]]></category>

		<category><![CDATA[Twitter]]></category>

		<category domain="category" nicename="twitter-2"><![CDATA[Twitter]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=730</guid>
		<description></description>
		<content:encoded><![CDATA[This is just another one of those boring weekends where I felt the need to hack on something.

If you follow Google Chrome's <a title="Chrome's blog" href="http://chrome.blogspot.com/" target="_blank">blog</a> you're probably aware of this little nifty feature they started to implement in their latest builds: <a href="http://chrome.blogspot.com/2011/03/talking-to-your-computer-with-html5.html" target="_blank">HTML5 voice recognition</a>.

And that's when it struck me: "Hey, what if I use that and tweet with my voice instead of typing?"

The result of this hacking session is <a href="http://loudparrot.heroku.com/">LoudParrot</a>, a sample Rails app that shows how to do just that. You <strong>will</strong> need a fairly recent build of Google Chrome -beta - which you can download <a href="http://www.google.com/intl/en/landing/chrome/beta/" target="_blank">here</a>.

You can get the source on <a href="https://github.com/leonardoborges/loud-parrot">GitHub</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>730</wp:post_id>
		<wp:post_date>2011-04-09 20:47:05</wp:post_date>
		<wp:post_date_gmt>2011-04-10 03:47:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>look-ma-no-hands-tweeting-with-your-voice</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1302407226]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[275760988]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_old_slug</wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
		<item>
		<title>One year of ThoughtWorks: a retrospective</title>
		<link>http://www.leonardoborges.com/writings/2011/04/25/one-year-of-thoughtworks-a-retrospective/</link>
		<pubDate>Mon, 25 Apr 2011 15:51:56 +0000</pubDate>
		<dc:creator><![CDATA[Leonardo Borges]]></dc:creator>
		
		<category><![CDATA[ThoughtWorks]]></category>

		<category domain="category" nicename="thoughtworks"><![CDATA[ThoughtWorks]]></category>

		<category domain="tag"><![CDATA[ThoughtWorks]]></category>

		<category domain="tag" nicename="thoughtworks"><![CDATA[ThoughtWorks]]></category>

		<guid isPermaLink="false">http://www.leonardoborges.com/writings/?p=737</guid>
		<description></description>
		<content:encoded><![CDATA[It seems like it was yesterday that I wrote about my next big challenge: <a href="http://www.leonardoborges.com/writings/2009/10/08/soon-off-to-conquer-lands-afar/" target="_blank">Moving to Australia to join ThoughtWorks</a>. Since then a year has passed and I thought I'd share a little bit about what it's been like so far.

The first thing you notice when joining ThoughtWorks is that you're surrounded by smart, opinionated people. It was once common for me to be the one fighting for automated testing, TDD, Ruby and overall finding new and better ways of doing what we do - but imagine how different it is to join a team that takes that for granted. This gives you a very high standard within the team that frees your mind to try and achieve bigger things. It's a great feeling.

<a href="http://www.thoughtworks.com" target="_blank">ThoughtWorks</a>' culture is inspiring. We're a small and very active community - there's always something going on in our offices after hours: Tech nights, local groups' meetups, training, people randomly hacking on stuff and even band rehearsals! The point is that you can get involved in several ways and the best part is that <a href="http://www.thoughtworks.com" target="_blank">ThoughtWorks</a> supports all that: be it providing pizzas and beers, flying us to international conferences, buying books and whatnot in order to help us do our best! I could go on but you get the point.

In return, we get to work on hard stuff. Not only technically challenging but personally challenging as well. As consultants we can be thought of as agents of change: When we go to a client, we're not only concerned with building the coolest projects with the best tools out there - of course that's a big part of what we do - but we're expected to change the way they think, work and do business.

Since I joined I worked with 2 clients - and 2 different projects - that varied wildly between them. That is in part what makes working at ThoughtWorks so interesting to me. You get to change domains, technologies and teams more often than not, which nurtures a stimulating environment.

The first project for instance was a standard Java web app where we had the usual players such as <a title="Spring" href="http://www.springsource.org/" target="_blank">Spring</a>, <a title="Hibernate" href="http://www.hibernate.org/" target="_blank">Hibernate</a>, <a title="Freemarker" href="http://freemarker.sourceforge.net/" target="_blank">Freemarker</a>, etc...

My current project, on the other hand, is very much like a start-up: We have a <a title="Amazon EC2" href="http://aws.amazon.com/ec2/" target="_blank">EC2</a> box that plays our <a title="Continuous Integration" href="http://en.wikipedia.org/wiki/Continuous_integration" target="_blank">CI</a> role, all code is hosted on <a title="Github" href="https://github.com/" target="_blank">Github</a>, we're using <a title="Ruby on Rails" href="http://www.rubyonrails.org/" target="_blank">Ruby on Rails</a> and deploying the whole thing to <a href="http://www.heroku.com/">Heroku</a> + <a title="Amazon RDS" href="http://aws.amazon.com/rds/" target="_blank">RDS</a>.

To top it off I also had the chance to make a real difference in the Queensland Flood Relief Appeal in 2010, when we built a <a title="Clouds against the floods" href="http://www.leonardoborges.com/writings/2011/01/16/clouds-against-the-floods/" target="_blank">donation app to help the flood victims</a> - that was definitely the highlight of the year, and something I'm particularly proud of.

What next? I'm eager to find out what my second year here has to offer. Bring it on!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>737</wp:post_id>
		<wp:post_date>2011-04-25 08:51:56</wp:post_date>
		<wp:post_date_gmt>2011-04-25 15:51:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>one-year-of-thoughtworks-a-retrospective</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
								<wp:postmeta>
		<wp:meta_key>_edit_last</wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_edit_lock</wp:meta_key>
		<wp:meta_value><![CDATA[1303746736]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>dsq_thread_id</wp:meta_key>
		<wp:meta_value><![CDATA[288058427]]></wp:meta_value>
		</wp:postmeta>
				<wp:postmeta>
		<wp:meta_key>_wp_old_slug</wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
								<wp:comment>
		<wp:comment_id>21178</wp:comment_id>
		<wp:comment_author><![CDATA[Vitor Pellegrino]]></wp:comment_author>
		<wp:comment_author_email>vitorp@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://profiles.google.com/vitorp</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-04-25 19:32:00</wp:comment_date>
		<wp:comment_date_gmt>2011-04-25 19:32:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Awesome retrospect from your first year there. Thoughtworks seems to be a really nice place to be, given the very talented developers you've got there. Congratz bro! :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>0</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
				<wp:comment>
		<wp:comment_id>21180</wp:comment_id>
		<wp:comment_author><![CDATA[Leonardo Borges]]></wp:comment_author>
		<wp:comment_author_email>leonardoborges.rj@gmail.com</wp:comment_author_email>
		<wp:comment_author_url>http://www.leonardoborges.com</wp:comment_author_url>
		<wp:comment_author_IP></wp:comment_author_IP>
		<wp:comment_date>2011-04-26 01:39:00</wp:comment_date>
		<wp:comment_date_gmt>2011-04-26 01:39:00</wp:comment_date_gmt>
		<wp:comment_content><![CDATA[Tks man! :)]]></wp:comment_content>
		<wp:comment_approved>1</wp:comment_approved>
		<wp:comment_type></wp:comment_type>
		<wp:comment_parent>21178</wp:comment_parent>
		<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
			</item>
	</channel>
</rss>
